[{"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js":"1","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js":"2","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js":"3","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js":"4","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js":"5","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js":"6","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"7","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js":"8","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"9","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"10","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"11","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"12","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"13","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"14","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"15","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js":"16","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js":"17","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js":"18","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js":"19","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignup.js":"20","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js":"21","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignupEmployer.js":"22","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"23","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js":"24","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js":"25","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js":"26","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByIndustry.js":"27","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByStream.js":"28","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByLocation.js":"29","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByLoction.js":"30","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipGroupedByStream.js":"31","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js":"32","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByIndustry.js":"33","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js":"34","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByIndustry.js":"35","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByLocation.js":"36","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByStream.js":"37","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByIndustry.js":"38","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js":"39","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js":"40","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js":"41","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js":"42","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js":"43","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js":"44","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js":"45","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js":"46","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js":"47","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js":"48","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js":"49","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\JobsCard\\JobsCard.js":"50","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\FresherJobCard\\FresherJobCard.js":"51","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\InternshipCard\\InternshipCard.js":"52","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByCompany.js":"53","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsByCompanyName.js":"54","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByLocation.js":"55","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobByCompanyName.js":"56","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipCompanyNames.js":"57","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByStream.js":"58","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobCompanyName.js":"59","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobCompanyName.js":"60","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\BookmarkInternhsip.js":"61","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\BookmarkJob.js":"62","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\BookmarkFresherJob.js":"63","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\EmployerUpdateForm.js":"64","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\StudentUpdateForm.js":"65","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\StudentProfile\\ProfileView.js":"66","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\StudentProfile\\components\\General.js":"67","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\EmployerProfileScreen.js":"68"},{"size":517,"mtime":1617712689619,"results":"69","hashOfConfig":"70"},{"size":375,"mtime":1617712043731,"results":"71","hashOfConfig":"70"},{"size":14601,"mtime":1622483451240,"results":"72","hashOfConfig":"70"},{"size":212,"mtime":1618028176556,"results":"73","hashOfConfig":"70"},{"size":7852,"mtime":1620708058259,"results":"74","hashOfConfig":"70"},{"size":8399,"mtime":1618294654225,"results":"75","hashOfConfig":"70"},{"size":14275,"mtime":1620708058255,"results":"76","hashOfConfig":"70"},{"size":17613,"mtime":1618294778068,"results":"77","hashOfConfig":"70"},{"size":8548,"mtime":1620709324226,"results":"78","hashOfConfig":"70"},{"size":6937,"mtime":1618146226170,"results":"79","hashOfConfig":"70"},{"size":4007,"mtime":1618146226167,"results":"80","hashOfConfig":"70"},{"size":1754,"mtime":1617712043725,"results":"81","hashOfConfig":"70"},{"size":2196,"mtime":1617712043729,"results":"82","hashOfConfig":"70"},{"size":16211,"mtime":1619197227001,"results":"83","hashOfConfig":"70"},{"size":15266,"mtime":1621367413237,"results":"84","hashOfConfig":"70"},{"size":14311,"mtime":1621369218379,"results":"85","hashOfConfig":"70"},{"size":7347,"mtime":1622482467134,"results":"86","hashOfConfig":"70"},{"size":13806,"mtime":1621367649525,"results":"87","hashOfConfig":"70"},{"size":15470,"mtime":1622449319068,"results":"88","hashOfConfig":"70"},{"size":840,"mtime":1620708058261,"results":"89","hashOfConfig":"70"},{"size":12934,"mtime":1621369394927,"results":"90","hashOfConfig":"70"},{"size":863,"mtime":1620708058262,"results":"91","hashOfConfig":"70"},{"size":7830,"mtime":1622483291138,"results":"92","hashOfConfig":"70"},{"size":10873,"mtime":1622440880747,"results":"93","hashOfConfig":"70"},{"size":602,"mtime":1622440880675,"results":"94","hashOfConfig":"70"},{"size":3927,"mtime":1622440880709,"results":"95","hashOfConfig":"70"},{"size":4118,"mtime":1622440880716,"results":"96","hashOfConfig":"70"},{"size":4108,"mtime":1622440880720,"results":"97","hashOfConfig":"70"},{"size":4118,"mtime":1622440880718,"results":"98","hashOfConfig":"70"},{"size":4512,"mtime":1622440880728,"results":"99","hashOfConfig":"70"},{"size":4506,"mtime":1622440880725,"results":"100","hashOfConfig":"70"},{"size":3544,"mtime":1622440880731,"results":"101","hashOfConfig":"70"},{"size":4979,"mtime":1622440880740,"results":"102","hashOfConfig":"70"},{"size":3048,"mtime":1622440880685,"results":"103","hashOfConfig":"70"},{"size":4439,"mtime":1622440880726,"results":"104","hashOfConfig":"70"},{"size":4920,"mtime":1622440880741,"results":"105","hashOfConfig":"70"},{"size":4914,"mtime":1622440880743,"results":"106","hashOfConfig":"70"},{"size":3385,"mtime":1622440880694,"results":"107","hashOfConfig":"70"},{"size":5153,"mtime":1622482517594,"results":"108","hashOfConfig":"70"},{"size":5060,"mtime":1622470578028,"results":"109","hashOfConfig":"70"},{"size":5481,"mtime":1622469843397,"results":"110","hashOfConfig":"70"},{"size":2193,"mtime":1622474455825,"results":"111","hashOfConfig":"70"},{"size":4645,"mtime":1622476320109,"results":"112","hashOfConfig":"70"},{"size":2240,"mtime":1622472237870,"results":"113","hashOfConfig":"70"},{"size":2282,"mtime":1622473802329,"results":"114","hashOfConfig":"70"},{"size":182,"mtime":1618503616102,"results":"115","hashOfConfig":"70"},{"size":2179,"mtime":1622471781701,"results":"116","hashOfConfig":"70"},{"size":205,"mtime":1618503616103,"results":"117","hashOfConfig":"70"},{"size":1874,"mtime":1618503616116,"results":"118","hashOfConfig":"70"},{"size":7050,"mtime":1622440880830,"results":"119","hashOfConfig":"70"},{"size":6930,"mtime":1622440880818,"results":"120","hashOfConfig":"70"},{"size":6858,"mtime":1622440880825,"results":"121","hashOfConfig":"70"},{"size":4125,"mtime":1622440880713,"results":"122","hashOfConfig":"70"},{"size":4694,"mtime":1622440880738,"results":"123","hashOfConfig":"70"},{"size":3385,"mtime":1622440880697,"results":"124","hashOfConfig":"70"},{"size":3143,"mtime":1622440880702,"results":"125","hashOfConfig":"70"},{"size":1666,"mtime":1622440880723,"results":"126","hashOfConfig":"70"},{"size":3376,"mtime":1622440880699,"results":"127","hashOfConfig":"70"},{"size":1617,"mtime":1622440880736,"results":"128","hashOfConfig":"70"},{"size":1672,"mtime":1622440880703,"results":"129","hashOfConfig":"70"},{"size":3952,"mtime":1622440880711,"results":"130","hashOfConfig":"70"},{"size":3779,"mtime":1622440880733,"results":"131","hashOfConfig":"70"},{"size":3981,"mtime":1622440880689,"results":"132","hashOfConfig":"70"},{"size":8648,"mtime":1622483291134,"results":"133","hashOfConfig":"70"},{"size":11528,"mtime":1622473897327,"results":"134","hashOfConfig":"70"},{"size":1968,"mtime":1622482989546,"results":"135","hashOfConfig":"70"},{"size":1608,"mtime":1622482933309,"results":"136","hashOfConfig":"70"},{"size":6931,"mtime":1622483291130,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1gbhm1z",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"140"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"140"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"140"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"140"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"140"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"140"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"140"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"140"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"140"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"140"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"140"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"140"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"140"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"140"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"140"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"140"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js",[],["322","323"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js",["324"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction LoginForm() {\r\n  const { dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/student/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"student\"));\r\n          dispatch({ type: \"USER\", payload: { user: res.data.user , userType: \"student\"} });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          const notify = () => toast(\"Signin Successfull\");\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/student-signup\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",["325"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst EmployerSignup = () => {\r\n  const history = useHistory();\r\n  //listing initial states of the fields present in the form\r\n  const initialState = {\r\n    companyName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 3,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    personName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      companyName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      personName,\r\n      contact,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/employer/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          companyName: companyName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.push(\"/employer-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => {\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the company */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Company Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.companyName.valid &&\r\n                    formValues.companyName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the company name\"\r\n                  name=\"companyName\"\r\n                  value={formValues.companyName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.companyName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.companyName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*Email  */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Password Confirmation */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Person Name */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* contact */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              {/* For Existing user */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/employer-login\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployerSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js",["326"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst StudentSignup = () => {\r\n  const history = useHistory();\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    personName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    degree: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    institutionName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    branch: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    year: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      personName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/student/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          branch: branch.value,\r\n          year: year.value,\r\n          degree: degree.value,\r\n          institutionName: institutionName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.pushState(\"/student-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*  Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.password.valid && formValues.password.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type={formValues.showPassword?\"text\":\"password\"}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={formValues.password.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.password.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.password.errorMessage}\r\n                  </span>\r\n                )}\r\n                <InputGroup.Append>\r\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                        <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                        >\r\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton> \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Confirm Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.degree.valid && formValues.degree.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={formValues.degree.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.institutionName.valid &&\r\n                    formValues.institutionName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={formValues.institutionName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.branch.valid && formValues.branch.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={formValues.branch.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.year.valid && formValues.year.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={formValues.year.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Already a user? */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/student-login\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["327"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form,  InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EmployerSignin() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          // toast(res.data.error);\r\n          console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"employee\"))\r\n          dispatch({ type: \"USER\", payload: {user: res.data.user , userType: \"employee\"} });\r\n          console.log(state);\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          // toast(\"Signin Successfull\");\r\n          const notify = () => toast('Signin Successfull');\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Form.Group\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.5vh\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/employer-signup\">\r\n                    <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                      Don't have an account? Sign up\r\n                    </a>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form.Group>\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerSignin;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js",["328","329","330","331","332","333","334"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Skills from \"./Skills\";\r\nimport Input from \"./Input\";\r\nimport Achievments from \"./Achievments\";\r\nimport Volunteer from \"./Volunteer\";\r\nimport Other from \"./Other\";\r\nimport Project from \"./Project\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport Start from \"./Start\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const initialState = {\r\n    FirstName: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    LastName: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Address: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    GithubLink: {\r\n      value: null,\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    LinkedinLink: {\r\n      value: null,\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    OtherLinks: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Education: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Experience: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Project: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Skills: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Achievments: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    VolunteerExperience: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    Other: {\r\n      value: [],\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  console.log(formValues);\r\n\r\n  const changeValue = (newValue, name) => {\r\n    console.log(newValue);\r\n    const updatedFormValues = { ...formValues };\r\n    // const name = \"OtherLinks\";\r\n    const updatedFormElement = { ...updatedFormValues[name] };\r\n    updatedFormElement.value = newValue;\r\n    updatedFormElement.valid = true;\r\n    updatedFormElement.errorMessage = \"\";\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[name] = updatedFormElement;\r\n\r\n    setFormValues(updatedFormValues);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(typeof formValues.startDate.value);\r\n    // const duration =\r\n    //   new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\r\n    // console.log(duration);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/student/buildprofile\",\r\n      data: {\r\n        Profile: {\r\n          General: {\r\n            FirstName: formValues.FirstName.value,\r\n            LastName: formValues.LastName.value,\r\n            Address: formValues.Address.value,\r\n            GithubLink: formValues.GithubLink.value,\r\n            LinkedInLink: formValues.LinkedinLink.value,\r\n            OtherProfileLink: formValues.OtherLinks.value,\r\n          },\r\n          Education: formValues.Education.value,\r\n          Experience: formValues.Experience.value,\r\n          Project: formValues.Project.value,\r\n          Skills: formValues.Skills.value,\r\n          Achievments: formValues.Achievments.value,\r\n          Other: formValues.Other.value,\r\n          VolunteerExperience: formValues.VolunteerExperience.value,\r\n        },\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pt-5\">\r\n        <Toaster />\r\n        <div className=\"main-box pt-4\">\r\n          <h1 className=\"ProfileBuilderheading\">Student Profile Builder</h1>\r\n          <h6 className=\"inst\">\r\n            Please Enter the details below to complete your student profile:-\r\n          </h6>\r\n          <Start\r\n            General={formValues}\r\n            handleChange={handleChange}\r\n            changeValue={changeValue}\r\n          />\r\n          <Education\r\n            Education={formValues.Education}\r\n            changeValue={changeValue}\r\n          />\r\n          <Experience\r\n            Experience={formValues.Experience}\r\n            changeValue={changeValue}\r\n          />\r\n          <Project Project={formValues.Project} changeValue={changeValue} />\r\n          <Skills Skills={formValues.Skills} changeValue={changeValue} />\r\n          <Achievments\r\n            Achievments={formValues.Achievments}\r\n            changeValue={changeValue}\r\n          />\r\n          <Volunteer\r\n            VolunteerExperience={formValues.VolunteerExperience}\r\n            changeValue={changeValue}\r\n          />\r\n          <Other Others={formValues.Other} changeValue={changeValue} />\r\n          <div className=\"buttonProfileDiv\">\r\n            <Button className=\"buttonProfile\" onClick={submitHandler}>\r\n              <div className=\"btnprofile\">Save Profile</div>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js",["335","336"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateJob = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [job, setJob] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    experience: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-job/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n          setJob(res.data.job);\r\n          console.log(job);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      salary,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      experience,\r\n      stream,\r\n      industry,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-job\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        salary: salary.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        experience: experience.value,\r\n        stream: stream.value,\r\n        industry: industry.value,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {job && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Job\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || job.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Stream\"\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || job.stream}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stream.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stream.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Industry\"\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || job.industry}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.industry.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.industry.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || job.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter salary\"\r\n                  name=\"salary\"\r\n                  value={formValues.salary.value || job.salary}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.salary.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.salary.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || job.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || job.lastDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || job.startDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Experience\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"Number\"\r\n                  placeholder=\"Enter experince\"\r\n                  name=\"experience\"\r\n                  value={formValues.experience.value || job.experience}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.experience.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.experience.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateJob;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js",["337","338"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateInternship = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [internship, setInternship] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stipend: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    endDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-internship/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internship);\r\n          setInternship(res.data.internship);\r\n          console.log(internship);\r\n          // if (internship) {\r\n          // console.log(res.data.internship.description);\r\n          // setInitialValue();\r\n          // setInitialValue(\"description\", res.data.internship.description);\r\n          // setInitialValue(\"location\", res.data.internship.location);\r\n          // setInitialValue(\"stipend\", res.data.internship.stipend);\r\n          // setInitialValue(\"lastDate\", new Date(res.data.internship.lastDate));\r\n          // setInitialValue(\"startDate\", new Date(res.data.internship.startDate));\r\n          // setInitialValue(\"endDate\", res.data.internship.endDate);\r\n          // setInitialValue(\"techstack\", res.data.internship.techstack);\r\n          // }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n    console.log(typeof formValues.startDate.value);\r\n    const duration =\r\n      new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\r\n    console.log(duration);\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      stipend,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      endDate,\r\n      industry,\r\n      stream,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-internship\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        stipend: stipend.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        endDate: endDate.value,\r\n        industry: industry.value,\r\n        stream: stream.value,\r\n        duration: duration,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {internship && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Internship\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || internship.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || internship.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"exampleForm.ControlSelect1\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || internship.industry}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Select Industry</option>\r\n                  <option value=\"IT\">IT</option>\r\n                  <option value=\"Marketing\">Marketing</option>\r\n                  <option value=\"Design\">Design</option>\r\n                  <option value=\"MBA\">MBA</option>\r\n                  <option value=\"Engineering\">Engineering</option>\r\n                  <option value=\"Media\">Media</option>\r\n                  <option value=\"Teaching\">Teaching</option>\r\n                  <option value=\"Finance\">Finance</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || internship.stream}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Select Stream</option>\r\n                  <option value=\"Management\">Management</option>\r\n                  <option value=\"Manufacturing\">Manufacturing</option>\r\n                  <option value=\"Accounts\">Accounts</option>\r\n                  <option value=\"Architecture\">Architecture</option>\r\n                  <option value=\"Machine Learning\">Machine Learning</option>\r\n                  <option value=\"Data Science\">Data Science</option>\r\n                  <option value=\"Development\">Development</option>\r\n                  <option value=\"Design\">Design</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stipend</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter stipend\"\r\n                  name=\"stipend\"\r\n                  value={formValues.stipend.value || internship.stipend}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stipend.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stipend.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || internship.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={\r\n                    formValues.lastDate.value || new Date(internship.lastDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={\r\n                    formValues.startDate.value || new Date(internship.startDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  End Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter end date\"\r\n                  name=\"endDate\"\r\n                  value={\r\n                    formValues.endDate.value || new Date(internship.endDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.endDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.endDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateInternship;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignup.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js",["339","340"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateFresherJob = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [job, setJob] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    experience: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-freshersjob/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n          setJob(res.data.job);\r\n          console.log(job);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      salary,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      stream,\r\n      industry,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-fresherjob\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        salary: salary.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        industry: industry.value,\r\n        stream: stream.value,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {job && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Fresher's Job\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Location\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || job.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Stream\"\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || job.stream}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stream.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stream.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Industry\"\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || job.industry}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.industry.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.industry.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || job.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter salary\"\r\n                  name=\"salary\"\r\n                  value={formValues.salary.value || job.salary}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.salary.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.salary.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || job.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || job.lastDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || job.startDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateFresherJob;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignupEmployer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js",["341","342","343","344","345","346","347"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst AllInternships = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // console.log(internships);\r\n  // console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/all-internships\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          setInternships(res.data.internships);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default AllInternships;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByIndustry.js",["348","349","350","351","352","353","354"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { industry } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/industry-internship/${industry}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByStream.js",["355","356","357","358","359","360","361"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { stream } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/stream-internship/${stream}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByLocation.js",["362","363","364","365","366","367","368"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { location } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/location-internship/${location}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByLoction.js",["369","370","371"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/location`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  //   console.log(internships);\r\n  console.log(internships[0]);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {internship.companyName} */}\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipGroupedByStream.js",["372","373","374"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/stream`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  //   console.log(internships);\r\n  console.log(internships[0]);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {internship.companyName} */}\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js",["375","376"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst AllJobs = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/all-jobs\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.jobs);\r\n\r\n          setJobs(res.data.jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : jobs && !jobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          jobs &&\r\n          jobs.map((job) => {\r\n            return (\r\n              <Col\r\n                key={job._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <JobsCard job={job} key={job._id} userId={state.user._id} />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default AllJobs;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByIndustry.js",["377","378","379","380","381","382"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Dropdown,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/industry\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        // console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((catejob) => (\r\n          <div key={catejob._id}>\r\n            <h1 className=\"parameter\">{catejob._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {catejob.jobs &&\r\n                catejob.jobs.map((job) => {\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js",["383"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst AllFreshersJobs = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/all-freshersjobs\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.freshersjobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, [freshersJobs]);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Fresher Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          freshersJobs &&\r\n          freshersJobs.map((fresher) => {\r\n            return (\r\n              <Col\r\n                key={fresher._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <FresherJobCard\r\n                  fresherjob={fresher}\r\n                  userId={state.user._id}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default AllFreshersJobs;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByIndustry.js",["384","385","386"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/industry`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.internships);\r\n          // setInternships(res.data.internships);\r\n          // console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          window.location.reload(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByLocation.js",["387","388"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/location\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.jobs);\r\n\r\n          setJobs(res.data.jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.jobs &&\r\n                intern.jobs.map((job) => {\r\n                  // console.log(job.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {job.companyName} */}\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByStream.js",["389","390"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/stream\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.jobs);\r\n\r\n          setJobs(res.data.jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.jobs &&\r\n                intern.jobs.map((job) => {\r\n                  // console.log(job.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {job.companyName} */}\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByIndustry.js",["391"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst FresherJobsGroupedByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/freshersjob/industry\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.freshersjobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Fresher Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        freshersJobs &&\r\n        freshersJobs.map((catefresher) => (\r\n          <div key={catefresher._id}>\r\n            <h1 className=\"parameter\">{catefresher._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {catefresher.freshersjobs &&\r\n                catefresher.freshersjobs.map((fresher) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={fresher._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <FresherJobCard\r\n                        fresherjob={fresher}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default FresherJobsGroupedByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js",["392","393","394","395","396","397"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Skills from \"./Skills\";\r\nimport Input from \"./Input\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst Start = ({ General, handleChange,changeValue }) => {\r\n  const [inputFields, setInputFields] = useState([{ ProfileLink: \"\" }]);\r\n  console.log(inputFields);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"OtherLinks\");\r\n  },[inputFields])\r\n\r\n  console.log(General);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i,j) => {\r\n      console.log(i);\r\n\r\n      if (id === j) {\r\n        // console.log(i[j]);\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n\r\n      // setInputFields()\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields((prevInput) => [...prevInput, { ProfileLink: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"form-main\" onSubmit={handleSubmit}>\r\n        <h1 className=\"subHeading\">General</h1>\r\n        <Row className=\"justify-content-between px-3\">\r\n          <div className=\"side\">\r\n            <label className=\"label-text\">\r\n              First Name<span>*</span>\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your first name\"\r\n              className=\"text-long\"\r\n              onChange={(e) => handleChange(e)}\r\n              value={General.FirstName.value}\r\n              name=\"FirstName\"\r\n            ></input>\r\n            <br />\r\n          </div>\r\n\r\n          <div className=\"side\">\r\n            <label className=\"label-text\">\r\n              Last Name<span>*</span>\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your last name\"\r\n              className=\"text-long\"\r\n              onChange={(e) => handleChange(e)}\r\n              value={General.LastName.value}\r\n              name=\"LastName\"\r\n            ></input>\r\n            <br />\r\n          </div>\r\n        </Row>\r\n\r\n        <label className=\"label-text\">\r\n          Studnet Address<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your student address\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={General.Address.value}\r\n          name=\"Address\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          Github Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your github link\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={General.GithubLink.value}\r\n          name=\"GithubLink\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          LinkedIn Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your linkedinlink\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={General.LinkedinLink.value}\r\n          name=\"LinkedinLink\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          Other Profile Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        {/* <input type=\"text\" className=\"text-long\" placeholder=\"Enter your other profile link\"></input> */}\r\n\r\n        {inputFields.map((inputField, i) => (\r\n          <Row key={i} className=\"justify-content-between\">\r\n            <Col className=\"col-md-10 col-12\">\r\n              <input\r\n                name=\"ProfileLink\"\r\n                label=\"Profile Link\"\r\n                value={inputField.ProfileLink}\r\n                className=\"text-long\"\r\n                placeholder=\"Enter your other profile link\"\r\n                onChange={(event) => handleChangeInput(i, event)}\r\n              ></input>\r\n            </Col>\r\n            <Col className=\"col-md-2 d-flex col-12\">\r\n              <IconButton\r\n                disabled={inputFields.length === 1}\r\n                onClick={() => handleRemoveFields(i)}\r\n              >\r\n                <RemoveIcon />\r\n              </IconButton>\r\n              <IconButton onClick={handleAddFields}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        {/* </Row> */}\r\n      </form>\r\n      <hr></hr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js",["398","399","400","401","402"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Experience({Experience, changeValue}) {\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      Company: \"\",\r\n      Title: \"\",\r\n      StartDate: \"\",\r\n      LastDate: \"\",\r\n      Location: \"\",\r\n      Description: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Experience\");\r\n  },[inputFields])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        Company: \"\",\r\n        Title: \"\",\r\n        StartDate: \"\",\r\n        LastDate: \"\",\r\n        Location: \"\",\r\n        Description: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Experience</h2>\r\n      <form className=\"experience\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"Company/Organization\" />\r\n            <br />\r\n            <input\r\n              name=\"Company\"\r\n              label=\"Company/organization\"\r\n              placeholder=\"Enter Company/organization Name\"\r\n              className=\"text-long\"\r\n              value={Experience.Company}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Title\" />\r\n            <br />\r\n            <input\r\n              name=\"Title\"\r\n              label=\"Title\"\r\n              placeholder=\"Enter Title\"\r\n              className=\"text-long\"\r\n              value={Experience.Title}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"StartDate\"\r\n                  type=\"date\"\r\n                  label=\"Start Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={Experience.StartDate}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"LastDate\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={Experience.LastDate}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row >\r\n            <Label value=\"Location\" />\r\n            <br />\r\n            <input\r\n              name=\"Location\"\r\n              label=\"Location\"\r\n              placeholder=\"Enter Location\"\r\n              className=\"text-long\"\r\n              value={Experience.Location}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Description\" />\r\n            <textarea\r\n              name=\"Description\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={Experience.Description}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js",["403","404","405","406","407"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Education({changeValue, Education}) {\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      School: \"\",\r\n      Degree: \"\",\r\n      FieldOfStudy: \"\",\r\n      StartDate: \"\",\r\n      LastDate: \"\",\r\n      Grade: \"\",\r\n      Description: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Education\");\r\n  },[inputFields])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        School: \"\",\r\n        Degree: \"\",\r\n        FieldOfStudy: \"\",\r\n        StartDate: \"\",\r\n        LastDate: \"\",\r\n        Grade: \"\",\r\n        Description: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Education</h2>\r\n      <form className=\"education\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"School\" />\r\n            <br />\r\n            <input\r\n              name=\"school\"\r\n              label=\"School Name\"\r\n              placeholder=\"Ex:Boston University\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Degree\" />\r\n            <br />\r\n            <input\r\n              name=\"degree\"\r\n              label=\"Degree\"\r\n              placeholder=\"Ex:Bachelors\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Field of Study\" />\r\n            <br />\r\n            <input\r\n              name=\"study\"\r\n              label=\"Study \"\r\n              placeholder=\"Ex:Business\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"sd\"\r\n                  type=\"date\"\r\n                  label=\"Star Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"ld\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row>\r\n            <Label value=\"Grade\" />\r\n            <br />\r\n            <input\r\n              name=\"grade\"\r\n              label=\"Grade \"\r\n              placeholder=\"Enter Your Grade\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Description\" />\r\n            <br />\r\n            <textarea\r\n              className=\"textbox\"\r\n              name=\"desc\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Education;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js",["408","409","410","411","412","413"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\nconst Other = ({ Others, changeValue }) => {\r\n  const [inputFields, setInputFields] = useState([{ Other: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Other\");\r\n  }, [inputFields]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i, j) => {\r\n      if (id === j) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { Other: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    let values = [...inputFields];\r\n    values = values.filter((val, j) => id != j);\r\n    // values.splice(\r\n    //   values.findIndex((value) => value.j === id),\r\n    //   1\r\n    // );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <form className=\"Other\">\r\n      <h2 className=\"subHeading\">Other</h2>\r\n      <Label value=\"Other\" />\r\n      <br />\r\n      {inputFields.map((inputField, j) => (\r\n        <div key={j}>\r\n          <input\r\n            name=\"Other\"\r\n            label=\"Other\"\r\n            value={inputField.Other}\r\n            className=\"text-long\"\r\n            placeholder=\"Enter your Other\"\r\n            onChange={(event) => handleChangeInput(j, event)}\r\n          ></input>\r\n          <IconButton\r\n            disabled={Others.length === 1}\r\n            onClick={() => handleRemoveFields(j)}\r\n          >\r\n            <RemoveIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleAddFields}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Other;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js",["414","415","416","417","418"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Project({ Project, changeValue }) {\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      ProjectTitle: \"\",\r\n      ProjectLink: \"\",\r\n      StartDate: \"\",\r\n      LastDate: \"\",\r\n      Description: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Project\");\r\n  }, [inputFields]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        ProjectTitle: \"\",\r\n        ProjectLink: \"\",\r\n        StartDate: \"\",\r\n        LastDate: \"\",\r\n        Description: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Project</h2>\r\n      <form className=\"projects\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"Project-Title\" />\r\n            <br />\r\n            <input\r\n              name=\"ProjectTitle\"\r\n              label=\"Project Name\"\r\n              placeholder=\"Enter Project Title\"\r\n              className=\"text-long\"\r\n              value={Project.ProjectTitle}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Project-Link\" />\r\n            <br />\r\n            <input\r\n              name=\"ProjectLink\"\r\n              label=\"Project Name\"\r\n              placeholder=\"Enter Project Title\"\r\n              className=\"text-long\"\r\n              value={Project.ProjectLink}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"StartDate\"\r\n                  type=\"date\"\r\n                  label=\"Star Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={Project.StartDate}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"LastDate\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={Project.LastDate}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row>\r\n            <Label value=\"Description\" />\r\n            <textarea\r\n              name=\"Description\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={Project.Description}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js",["419","420","421","422","423"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\nconst Achievments = ({Achievments, changeValue}) => {\r\n  const [inputFields, setInputFields] = useState([{ Achievment: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Achievments\");\r\n  },[inputFields])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { Achievment: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <form className=\"skills\">\r\n      <h2 className=\"subHeading\">Achievments</h2>\r\n      <Label value=\"Achievments\" />\r\n      <br />\r\n      {inputFields.map((inputField) => (\r\n        <div key={inputField.id}>\r\n          <input\r\n            name=\"achievments\"\r\n            label=\"achievments\"\r\n            value={inputFields.Achievment}\r\n            className=\"text-long\"\r\n            placeholder=\"Enter your achievments\"\r\n            onChange={(event) => handleChangeInput(inputField.id, event)}\r\n          ></input>\r\n          <IconButton\r\n            disabled={inputFields.length === 1}\r\n            onClick={() => handleRemoveFields(inputField.id)}\r\n          >\r\n            <RemoveIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleAddFields}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Achievments;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js",["424","425","426","427","428"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\nconst Volunteer = ({ VolunteerExperience, changeValue }) => {\r\n  const [inputFields, setInputFields] = useState([{ Volunteer: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"VolunteerExperience\");\r\n  },[inputFields])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { Volunteer: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <form className=\"volunteer\">\r\n      <h2 className=\"subHeading\">Volunteer Experience</h2>\r\n      <Label value=\"Volunteer Experience\" />\r\n      <br />\r\n      {inputFields.map((inputField) => (\r\n        <div key={inputField.id}>\r\n          <input\r\n            name=\"Volunteer\"\r\n            label=\"Volunteer\"\r\n            value={VolunteerExperience.skills}\r\n            className=\"text-long\"\r\n            placeholder=\"Enter your Volunteer Experience\"\r\n            onChange={(event) => handleChangeInput(inputField.id, event)}\r\n          ></input>\r\n          <IconButton\r\n            disabled={inputFields.length === 1}\r\n            onClick={() => handleRemoveFields(inputField.id)}\r\n          >\r\n            <RemoveIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleAddFields}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Volunteer;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js",["429","430","431","432","433"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\nconst Skills = ({ Skills, changeValue }) => {\r\n  const [inputFields, setInputFields] = useState([{ Skill: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    changeValue(inputFields, \"Skills\");\r\n  }, [inputFields]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { Skill: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <form className=\"skills edu\">\r\n      <h2 className=\"subHeading\">Skills</h2>\r\n      <Label value=\"Skills\" />\r\n      <br />\r\n      {inputFields.map((inputField) => (\r\n        <div key={inputField.id}>\r\n          <input\r\n            name=\"Skill\"\r\n            label=\"Skill\"\r\n            value={Skills.Skill}\r\n            className=\"text-long\"\r\n            placeholder=\"Enter your Skills\"\r\n            onChange={(event) => handleChangeInput(inputField.id, event)}\r\n          ></input>\r\n          <IconButton\r\n            disabled={inputFields.length === 1}\r\n            onClick={() => handleRemoveFields(inputField.id)}\r\n          >\r\n            <RemoveIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleAddFields}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\JobsCard\\JobsCard.js",["434","435","436"],"import React, { useContext } from \"react\";\r\nimport \"../InternshipCard/InternshipCard.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { UserContext } from \"../../../App\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst JobsCard = ({ job, userId }) => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  const bookMarkPost = (postId) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `http://localhost:5000/student/bookmarkJob/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInternships(res.data.internships);\r\n          // window.location.reload(false);\r\n          console.log(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n  const GettingMonth = (date) => {\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const time =\r\n      monthNames[new Date(date).getMonth()] +\r\n      \", \" +\r\n      new Date(date).getFullYear();\r\n    return time;\r\n  };\r\n\r\n  const GettingDate = (date) => {\r\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-custom mx-auto\">\r\n      <div className=\"primary-info\">\r\n        {job.role && <div className=\"primary-info-role\">{job.role}</div>}\r\n        {job.companyName && (\r\n          <div className=\"primary-info-company\">{job.companyName}</div>\r\n        )}\r\n        {(job.industry || job.stream) && (\r\n          <div className=\"primary-info-indus-stream\">\r\n            {job.industry}, {job.stream}\r\n          </div>\r\n        )}\r\n        <div className=\"primary-info-table\">\r\n          <ul>\r\n            {job.location && (\r\n              <li>\r\n                <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\r\n                {job.location}\r\n              </li>\r\n            )}\r\n            {job.experience && (\r\n              <li>\r\n                <i class=\"fas fa-briefcase\"></i>\r\n                <span>Experience:</span>\r\n                {job.experience && \"Atleast\"} {job.experience}{\" \"}\r\n                {job.experience === 1 && \"yrs\"} {job.experience > 1 && \"yrs\"}\r\n              </li>\r\n            )}\r\n            {job.salary && (\r\n              <li>\r\n                <i class=\"far fa-money-bill-alt\"></i> <span>Salary:</span>₹\r\n                {job.salary}\r\n              </li>\r\n            )}\r\n            {job.startDate && (\r\n              <li>\r\n                <i className=\"far fa-play-circle\"></i> <span>Start Date:</span>\r\n                {GettingMonth(job.startDate)}\r\n              </li>\r\n            )}\r\n            {job.lastDate && (\r\n              <li>\r\n                <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\r\n                {GettingDate(job.lastDate)}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        {job.techstack && job.techstack.length > 0 && (\r\n          <div className=\"primary-info-techstack\">\r\n            {job.techstack.map((tech) => (\r\n              <div>{tech}</div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"secondary-info\">\r\n        {job.createdBy && userId && userId === job.createdBy._id && (\r\n          <div className=\"dropdown-container\">\r\n            <Dropdown className=\"postOptions\">\r\n              <Dropdown.Toggle\r\n                className=\"postOptionsBtn\"\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"optionMenu\">\r\n                <Dropdown.Item\r\n                  className=\"optionItem\"\r\n                  href={`/update-job/${job._id}`}\r\n                >\r\n                  <Icon.PencilSquare className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => deletePost(job._id)}\r\n                  className=\"optionItem\"\r\n                >\r\n                  <Icon.Trash className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        )}\r\n        {state && state.userType === \"student\" && (\r\n          <div className=\"dropdown-container\">\r\n            <Dropdown className=\"postOptions\">\r\n              <Dropdown.Toggle\r\n                className=\"postOptionsBtn\"\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"optionMenu\">\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    bookMarkPost(job._id);\r\n                    console.log(job._id);\r\n                  }}\r\n                  className=\"optionItem\"\r\n                >\r\n                  <Icon.Bookmark className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        )}\r\n        <div className=\"secondary-info-container\">\r\n          {job.description && (\r\n            <div className=\"secondary-info-description w-100\">\r\n              {job.description}\r\n            </div>\r\n          )}\r\n          <a href=\"#\" className=\"btn btn-custom\">\r\n            Apply Now\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsCard;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\FresherJobCard\\FresherJobCard.js",["437","438","439"],"import React, { useContext } from \"react\";\r\nimport \"../InternshipCard/InternshipCard.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { UserContext } from \"../../../App\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst FresherJobCard = ({ fresherjob, userId }) => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-freshersjob\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  const bookMarkPost = (postId) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `http://localhost:5000/student/bookmarkFresherJob/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInternships(res.data.internships);\r\n          // window.location.reload(false);\r\n          console.log(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  const GettingMonth = (date) => {\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const time =\r\n      monthNames[new Date(date).getMonth()] +\r\n      \", \" +\r\n      new Date(date).getFullYear();\r\n    return time;\r\n  };\r\n\r\n  const GettingDate = (date) => {\r\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-custom mx-auto\">\r\n      <div className=\"primary-info\">\r\n        {fresherjob.role && (\r\n          <div className=\"primary-info-role\">{fresherjob.role}</div>\r\n        )}\r\n        {fresherjob.companyName && (\r\n          <div className=\"primary-info-company\">{fresherjob.companyName}</div>\r\n        )}\r\n        {(fresherjob.industry || fresherjob.stream) && (\r\n          <div className=\"primary-info-indus-stream\">\r\n            {fresherjob.industry}, {fresherjob.stream}\r\n          </div>\r\n        )}\r\n        <div className=\"primary-info-table\">\r\n          <ul>\r\n            {fresherjob.location && (\r\n              <li>\r\n                <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\r\n                {fresherjob.location}\r\n              </li>\r\n            )}\r\n            {fresherjob.salary && (\r\n              <li>\r\n                <i class=\"far fa-money-bill-alt\"></i> <span>Salary:</span>₹\r\n                {fresherjob.salary}\r\n              </li>\r\n            )}\r\n            {fresherjob.startDate && (\r\n              <li>\r\n                <i className=\"far fa-play-circle\"></i> <span>Start Date:</span>\r\n                {GettingMonth(fresherjob.startDate)}\r\n              </li>\r\n            )}\r\n            {fresherjob.lastDate && (\r\n              <li>\r\n                <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\r\n                {GettingDate(fresherjob.lastDate)}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        {fresherjob.techstack && fresherjob.techstack.length > 0 && (\r\n          <div className=\"primary-info-techstack\">\r\n            {fresherjob.techstack.map((tech) => (\r\n              <div>{tech}</div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"secondary-info\">\r\n        {fresherjob.createdBy && userId && userId === fresherjob.createdBy._id && (\r\n          <div className=\"dropdown-container\">\r\n            <Dropdown className=\"postOptions\">\r\n              <Dropdown.Toggle\r\n                className=\"postOptionsBtn\"\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"optionMenu\">\r\n                <Dropdown.Item\r\n                  className=\"optionItem\"\r\n                  href={`/update-fresher/${fresherjob._id}`}\r\n                >\r\n                  <Icon.PencilSquare className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => deletePost(fresherjob._id)}\r\n                  className=\"optionItem\"\r\n                >\r\n                  <Icon.Trash className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        )}\r\n        {state && state.userType === \"student\" && (\r\n          <div className=\"dropdown-container\">\r\n            <Dropdown className=\"postOptions\">\r\n              <Dropdown.Toggle\r\n                className=\"postOptionsBtn\"\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"optionMenu\">\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    bookMarkPost(fresherjob._id);\r\n                    console.log(fresherjob._id);\r\n                  }}\r\n                  className=\"optionItem\"\r\n                >\r\n                  <Icon.Bookmark className=\"optionsMenuIcon\" />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        )}\r\n        <div className=\"secondary-info-container\">\r\n          {fresherjob.description && (\r\n            <div className=\"secondary-info-description w-100\">\r\n              {fresherjob.description}\r\n            </div>\r\n          )}\r\n          <a href=\"#\" className=\"btn btn-custom\">\r\n            Apply Now\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FresherJobCard;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\InternshipCard\\InternshipCard.js",["440"],"import React, { useContext } from \"react\";\r\nimport \"./InternshipCard.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { UserContext } from \"../../../App\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst InternshipCard = ({ internship, deletePost, userId }) => {\r\n  const { state } = useContext(UserContext);\r\n\r\n  const bookMarkPost = (postId) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `http://localhost:5000/student/bookmarkInternship/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInternships(res.data.internships);\r\n          // window.location.reload(false);\r\n          console.log(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  const GettingMonth = (date) => {\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const time =\r\n      monthNames[new Date(date).getMonth()] +\r\n      \", \" +\r\n      new Date(date).getFullYear();\r\n    return time;\r\n  };\r\n\r\n  const GettingDate = (date) => {\r\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\r\n    return time;\r\n  };\r\n\r\n  const GettingDuration = (time) => {\r\n    const t = Math.floor(Number(time) / (3600 * 1000 * 24 * 30));\r\n    console.log(t);\r\n    return t > 1 ? t + \" Months\" : t + \" Month\";\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Toaster/> */}\r\n      <div className=\"card-custom mx-auto\">\r\n        <div className=\"primary-info\">\r\n          {internship.role && (\r\n            <div className=\"primary-info-role\">{internship.role}</div>\r\n          )}\r\n          {internship.companyName && (\r\n            <div className=\"primary-info-company\">{internship.companyName}</div>\r\n          )}\r\n          {(internship.industry || internship.stream) && (\r\n            <div className=\"primary-info-indus-stream\">\r\n              {internship.industry}, {internship.stream}\r\n            </div>\r\n          )}\r\n          <div className=\"primary-info-table\">\r\n            <ul>\r\n              {internship.location && (\r\n                <li>\r\n                  <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\r\n                  {internship.location}\r\n                </li>\r\n              )}\r\n              {internship.startDate && (\r\n                <li>\r\n                  <i className=\"far fa-play-circle\"></i>{\" \"}\r\n                  <span>Start Date:</span>\r\n                  {GettingMonth(internship.startDate)}\r\n                </li>\r\n              )}\r\n              {internship.duration && (\r\n                <li>\r\n                  <i class=\"fas fa-calendar-week\"></i> <span>Duration:</span>\r\n                  {GettingDuration(internship.duration)}\r\n                </li>\r\n              )}\r\n              {internship.stipend && (\r\n                <li>\r\n                  <i class=\"far fa-money-bill-alt\"></i> <span>Stipend:</span>₹\r\n                  {internship.stipend}\r\n                </li>\r\n              )}\r\n              {internship.lastDate && (\r\n                <li>\r\n                  <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\r\n                  {GettingDate(internship.lastDate)}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          {internship.techstack && internship.techstack.length > 0 && (\r\n            <div className=\"primary-info-techstack\">\r\n              {internship.techstack.map((tech) => (\r\n                <div>{tech}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"secondary-info\">\r\n          {internship.createdBy &&\r\n            userId &&\r\n            userId === internship.createdBy._id && (\r\n              <div className=\"dropdown-container\">\r\n                <Dropdown className=\"postOptions\">\r\n                  <Dropdown.Toggle\r\n                    className=\"postOptionsBtn\"\r\n                    variant=\"success\"\r\n                    id=\"dropdown-basic\"\r\n                  >\r\n                    <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu className=\"optionMenu\">\r\n                    <Dropdown.Item\r\n                      className=\"optionItem\"\r\n                      href={`/update-internship/${internship._id}`}\r\n                    >\r\n                      <Icon.PencilSquare className=\"optionsMenuIcon\" />\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={() => deletePost(internship._id)}\r\n                      className=\"optionItem\"\r\n                    >\r\n                      <Icon.Trash className=\"optionsMenuIcon\" />\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            )}\r\n          {state && state.userType === \"student\" && (\r\n            <div className=\"dropdown-container\">\r\n              <Dropdown className=\"postOptions\">\r\n                <Dropdown.Toggle\r\n                  className=\"postOptionsBtn\"\r\n                  variant=\"success\"\r\n                  id=\"dropdown-basic\"\r\n                >\r\n                  <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"optionMenu\">\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      bookMarkPost(internship._id);\r\n                      console.log(internship._id);\r\n                    }}\r\n                    className=\"optionItem\"\r\n                  >\r\n                    <Icon.Bookmark className=\"optionsMenuIcon\" />\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          )}\r\n          <div className=\"secondary-info-container\">\r\n            {internship.description && (\r\n              <div className=\"secondary-info-description w-100\">\r\n                {internship.description}\r\n              </div>\r\n            )}\r\n            <a href=\"#\" className=\"btn btn-custom\">\r\n              Apply Now\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InternshipCard;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByCompany.js",["441","442","443"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByCompany = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { companyName } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-internship/${companyName}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByCompany;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsByCompanyName.js",["444","445"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst JobsByCompanyName = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { companyName } = useParams();\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/job/companyName/${companyName}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.Jobs);\r\n\r\n          setJobs(res.data.Jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : jobs && !jobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          jobs &&\r\n          jobs.map((job) => {\r\n            return (\r\n              <Col\r\n                key={job._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <JobsCard\r\n                  job={job}\r\n                  deletePost={deletePost}\r\n                  key={job._id}\r\n                  userId={state.user._id}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default JobsByCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByLocation.js",["446"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst FresherJobsGroupedByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/freshersjob/location\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.freshersJobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Fresher Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        freshersJobs &&\r\n        freshersJobs.map((catefresher) => (\r\n          <div key={catefresher._id}>\r\n            <h1 className=\"parameter\">{catefresher._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {catefresher.freshersJobs &&\r\n                catefresher.freshersJobs.map((fresher) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={fresher._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <FresherJobCard\r\n                        fresherjob={fresher}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default FresherJobsGroupedByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobByCompanyName.js",["447","448","449"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\nimport { useParams } from \"react-router\";\r\nimport { CompareArrows } from \"@material-ui/icons\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst FreshersJobByCompanyName = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { companyName } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/freshersJob/companyName/${companyName}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.FreshersJobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, [freshersJobs]);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Fresher Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          freshersJobs &&\r\n          freshersJobs.map((fresher) => {\r\n            return (\r\n              <Col\r\n                key={fresher._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <FresherJobCard fresherjob={fresher} userId={state.user._id} />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default FreshersJobByCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipCompanyNames.js",["450","451","452","453","454","455"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nconst InternshipCompanyName = () => {\r\n  const history = useHistory();\r\n  const [names, setNames] = useState();\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-internship`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          //   const notify = () => toast(res.data.error);\r\n          //   notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setNames(res.data.internships);\r\n          console.log(names);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(names);\r\n  return (\r\n    <div>\r\n      <h1 className=\"companyHeading\">Internships</h1>\r\n      <Row>\r\n        {names &&\r\n          names.map((name) => (\r\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\r\n              <div\r\n                className=\"NAME-company\"\r\n                onClick={() =>\r\n                  history.push(`/companyName-internship/${name._id}`)\r\n                }\r\n              >\r\n                {name._id}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InternshipCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByStream.js",["456"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst FresherJobsGroupedByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/freshersjob/stream\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.freshersjobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Fresher Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        freshersJobs &&\r\n        freshersJobs.map((catefresher) => (\r\n          <div key={catefresher._id}>\r\n            <h1 className=\"parameter\">{catefresher._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {catefresher.freshersjobs &&\r\n                catefresher.freshersjobs.map((fresher) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={fresher._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <FresherJobCard\r\n                        fresherjob={fresher}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default FresherJobsGroupedByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobCompanyName.js",["457","458","459","460","461","462"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nconst JobCompanyName = () => {\r\n  const history = useHistory();\r\n  const [names, setNames] = useState();\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-Job`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          //   const notify = () => toast(res.data.error);\r\n          //   notify();\r\n        } else {\r\n          console.log(res.data.Jobs);\r\n          setNames(res.data.Jobs);\r\n          console.log(names);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(names);\r\n  return (\r\n    <div>\r\n      <h1 className=\"companyHeading\">Jobs</h1>\r\n      <Row>\r\n        {names &&\r\n          names.map((name) => (\r\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\r\n              <div\r\n                className=\"NAME-company\"\r\n                onClick={() =>\r\n                  history.push(`/companyName-job/${name._id}`)\r\n                }\r\n              >\r\n                {name._id}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobCompanyName.js",["463","464","465","466","467","468"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nconst FreshersJobCompanyName = () => {\r\n  const history = useHistory();\r\n  const [names, setNames] = useState();\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-freshersjob`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          //   const notify = () => toast(res.data.error);\r\n          //   notify();\r\n        } else {\r\n          console.log(res.data.FreshersJobs);\r\n          setNames(res.data.FreshersJobs);\r\n          console.log(names);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(names);\r\n  return (\r\n    <div>\r\n      <h1 className=\"companyHeading\">Fresher's Jobs</h1>\r\n      <Row>\r\n        {names &&\r\n          names.map((name) => (\r\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\r\n              <div\r\n                className=\"NAME-company\"\r\n                onClick={() =>\r\n                  history.push(`/freshers/companyName/${name._id}`)\r\n                }\r\n              >\r\n                {name._id}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FreshersJobCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\BookmarkInternhsip.js",["469","470"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst BookmarkedInternships = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // console.log(internships);\r\n  // console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/student/getBookmarkedInternships\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internship);\r\n          setInternships(res.data.internship);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          setInternships(res.data.internships);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default BookmarkedInternships;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\BookmarkJob.js",["471","472"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst BookmarkJobs = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/student/getBookmarkedJobs\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n\r\n          setJobs(res.data.job);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : jobs && !jobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          jobs &&\r\n          jobs.map((job) => {\r\n            return (\r\n              <Col\r\n                key={job._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <JobsCard\r\n                  job={job}\r\n                  deletePost={deletePost}\r\n                  key={job._id}\r\n                  userId={state.user._id}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default BookmarkJobs;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\BookmarkFresherJob.js",["473"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\r\n// import { Alert } from \"bootstrap\";\r\n\r\nconst BookmarkFreshersJobs = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [freshersJobs, setFreshersJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-freshersjob\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/student/getBookmarkedFresherJobs\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.freshersjobs);\r\n          setFreshersJobs(res.data.fresherjobs);\r\n          // console.log(freshersJobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, [freshersJobs]);\r\n\r\n  if (freshersJobs && freshersJobs[4]) {\r\n    console.log(freshersJobs[4]);\r\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Fresher Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          freshersJobs &&\r\n          freshersJobs.map((fresher) => {\r\n            return (\r\n              <Col\r\n                key={fresher._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <FresherJobCard\r\n                  fresherjob={fresher}\r\n                  deletePost={deletePost}\r\n                  userId={state.user._id}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default BookmarkFreshersJobs;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\EmployerUpdateForm.js",["474","475","476","477","478"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Form, Card, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst EmployerUpdateForm = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [employer, setEmployer] = useState({\r\n    personName: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n    companyName: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/employerfetch/${state.user._id}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n          setLoading(false);\r\n        } else {\r\n          console.log(res.data)\r\n          setEmployer(res.data.employer);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const submitEmployerDetails = (e) => {\r\n    e.preventDefault();\r\n    const { personName, email, contact, companyName } = employer;\r\n    // console.log(employer);\r\n    axios({\r\n      method: \"PATCH\",\r\n      url: \"http://localhost:5000/employer/update\",\r\n      data: {\r\n        personName: personName,\r\n        email: email,\r\n        contact: contact,\r\n        companyName: companyName,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res.data.user);\r\n        // alert(res.data.message);\r\n        const notify = () => toast(res.data.message);\r\n        notify();\r\n        if (res.data.user) {\r\n          const user = localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(res.data.user)\r\n          );\r\n\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <div style={{ padding: \"4vh 0\" }}>\r\n          <Toaster />\r\n          <Card\r\n            style={{\r\n              width: \"40vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"4vh\",\r\n              marginBottom: \"4vh\",\r\n              backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n            }}\r\n            className=\"register_card_custom\"\r\n          >\r\n            <Card.Header\r\n              style={{\r\n                backgroundColor: \"#6c6c6c\",\r\n                color: \"#6EE2CD\",\r\n                fontFamily: '\"Merriweather\", serif',\r\n                fontSize: \"1.25rem\",\r\n              }}\r\n              as=\"h5\"\r\n            >\r\n              Employer Details Update\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={(e) => submitEmployerDetails(e)}>\r\n                {/* Name of the employee */}\r\n                <Form.Group style={{ textAlign: \"left\" }}>\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                  <Form.Control\r\n                    // className={`${\r\n                    //   !formValues.personName.valid &&\r\n                    //   formValues.personName.touched\r\n                    //     ? \"input-error\"\r\n                    //     : \"\"\r\n                    // }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    name=\"personName\"\r\n                    value={employer.personName}\r\n                    onChange={(e) =>\r\n                      setEmployer({ ...employer, personName: e.target.value })\r\n                    }\r\n                    required\r\n                  />\r\n                  {/* {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )} */}\r\n                </Form.Group>\r\n\r\n                {/* Email address */}\r\n                <Form.Group\r\n                  style={{ textAlign: \"left\" }}\r\n                  controlId=\"formBasicEmail\"\r\n                >\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Email address\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    // className={`${\r\n                    //   !formValues.email.valid && formValues.email.touched\r\n                    //     ? \"input-error\"\r\n                    //     : \"\"\r\n                    // }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    name=\"email\"\r\n                    value={employer.email}\r\n                    onChange={(e) =>\r\n                      setEmployer({ ...employer, email: e.target.value })\r\n                    }\r\n                    required\r\n                  />\r\n                  {/* {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )} */}\r\n                </Form.Group>\r\n\r\n                {/* Contact Number */}\r\n                <Form.Group style={{ textAlign: \"left\" }}>\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Contact\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    // className={`${\r\n                    //   !formValues.contact.valid && formValues.contact.touched\r\n                    //     ? \"input-error\"\r\n                    //     : \"\"\r\n                    // }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"number\"\r\n                    placeholder=\"Enter your contact number\"\r\n                    name=\"contact\"\r\n                    value={employer.contact}\r\n                    onChange={(e) =>\r\n                      setEmployer({ ...employer, contact: e.target.value })\r\n                    }\r\n                    required\r\n                    maxLength=\"10\"\r\n                    minLength=\"10\"\r\n                  />\r\n                  {/* {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )} */}\r\n                </Form.Group>\r\n\r\n                {/* Degree */}\r\n                <Form.Group style={{ textAlign: \"left\" }}>\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Company Name\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    // className={`${\r\n                    //   !formValues.degree.valid && formValues.degree.touched\r\n                    //     ? \"input-error\"\r\n                    //     : \"\"\r\n                    // }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Company Name\"\r\n                    name=\"companyName\"\r\n                    value={employer.companyName}\r\n                    onChange={(e) =>\r\n                      setEmployer({ ...employer, companyName: e.target.value })\r\n                    }\r\n                    required\r\n                  />\r\n                  {/* {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )} */}\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Update Details\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default EmployerUpdateForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\StudentUpdateForm.js",["479","480","481","482"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst StudentUpdateForm = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [student, setStudent] = useState({\r\n    personName: \"\",\r\n    email: \"\",\r\n\r\n    contact: \"\",\r\n    branch: \"\",\r\n    year: \"\",\r\n    degree: \"\",\r\n    institutionName: \"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/student/studentfetch/${state.user._id}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          setStudent(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const submitStudentDetails = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      personName,\r\n      email,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = student;\r\n    console.log(student);\r\n    axios({\r\n      method: \"PATCH\",\r\n      url: \"http://localhost:5000/student/update\",\r\n      data: {\r\n        personName: personName,\r\n        email: email,\r\n        contact: contact,\r\n        branch: branch,\r\n        year: year,\r\n        degree: degree,\r\n        institutionName: institutionName,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.user);\r\n        // alert(res.data.message);\r\n        const notify = () => toast(res.data.message);\r\n        notify();\r\n        if (res.data.user) {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Details Update\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitStudentDetails(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.personName.valid &&\r\n                  //   formValues.personName.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={student.personName}\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, personName: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n                {/* {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.email.valid && formValues.email.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={student.email}\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, email: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n                {/* {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.contact.valid && formValues.contact.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={student.contact}\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, contact: e.target.value })\r\n                  }\r\n                  required\r\n                  maxLength=\"10\"\r\n                  minLength=\"10\"\r\n                />\r\n                {/* {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.degree.valid && formValues.degree.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={student.degree}\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, degree: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n                {/* {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.institutionName.valid &&\r\n                  //   formValues.institutionName.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={student.institutionName}\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, institutionName: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n                {/* {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.branch.valid && formValues.branch.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={student.branch}\r\n                  required\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, branch: e.target.value })\r\n                  }\r\n                />\r\n                {/* {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  // className={`${\r\n                  //   !formValues.year.valid && formValues.year.touched\r\n                  //     ? \"input-error\"\r\n                  //     : \"\"\r\n                  // }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={student.year}\r\n                  required\r\n                  onChange={(e) =>\r\n                    setStudent({ ...student, year: e.target.value })\r\n                  }\r\n                />\r\n                {/* {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )} */}\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Update Details\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentUpdateForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\StudentProfile\\ProfileView.js",["483","484","485","486","487","488","489","490","491","492"],"import React, { useEffect } from \"react\";\r\nimport \"../profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport Start from \"../Start\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport General from \"./components/General\";\r\n\r\nconst ProfileView = () => {\r\n  const [profile, setProfile] = useState();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/student/buildprofile/get`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        // setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.Jobs);\r\n          // res.data.profile.General.OtherProfileLink =\r\n          res.data.profile.General.OtherProfileLink.forEach((link) => {\r\n            link._id = null;\r\n          });\r\n          setProfile(res.data.profile);\r\n          console.log(profile);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(profile);\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Toaster />\r\n      {profile && (\r\n        <div className=\"main-box py-4 profile-box\">\r\n          <h1 className=\"ProfileBuilderheading\">Student Profile</h1>\r\n          <General general={profile.General} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileView;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\StudentProfile\\components\\General.js",["493"],"import React from \"react\";\r\nimport \"../../profile.css\";\r\nimport { useState } from \"react\";\r\n\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst General = ({ general }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"subHeading\">General</h2>\r\n      <Row className=\"justify-content-between px-5 py-3\">\r\n        <Col className=\"col-12 col-md-5 py-3 \">\r\n          <div className=\"div-1\">First Name: </div>\r\n          <div className=\"div-2\">{general.FirstName}</div>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-5 py-3 \">\r\n          <div className=\"div-1\">Last Name: </div>\r\n          <div className=\"div-2\">{general.LastName}</div>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-12 py-3 \">\r\n          <div className=\"div-1\">Address: </div>\r\n          <div className=\"div-2\">{general.Address}</div>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-12 py-3 \">\r\n          <div className=\"div-1\">Github Link: </div>\r\n          <div className=\"div-2\">{general.GithubLink}</div>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-12 py-3 \">\r\n          <div className=\"div-1\">LinkedInLink: </div>\r\n          <div className=\"div-2\">{general.LinkedInLink}</div>\r\n        </Col>\r\n        <div className=\"div-1 pt-3 pb-2 px-3\">Other Profile Link: </div>\r\n        {general.OtherProfileLink &&\r\n          general.OtherProfileLink.map((link) => (\r\n            <Col className=\"col-12 col-md-12 py-3 \">\r\n              <div className=\"div-2\">{link && link.ProfileLink}</div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default General;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\EmployerProfileScreen.js",["494","495"],{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":49,"column":10,"nodeType":"502","messageId":"503","endLine":49,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":84,"column":10,"nodeType":"502","messageId":"503","endLine":84,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":114,"column":10,"nodeType":"502","messageId":"503","endLine":114,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":48,"column":10,"nodeType":"502","messageId":"503","endLine":48,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"505","line":6,"column":8,"nodeType":"502","messageId":"503","endLine":6,"endColumn":18},{"ruleId":"500","severity":1,"message":"506","line":7,"column":8,"nodeType":"502","messageId":"503","endLine":7,"endColumn":18},{"ruleId":"500","severity":1,"message":"507","line":8,"column":8,"nodeType":"502","messageId":"503","endLine":8,"endColumn":15},{"ruleId":"500","severity":1,"message":"508","line":9,"column":8,"nodeType":"502","messageId":"503","endLine":9,"endColumn":13},{"ruleId":"500","severity":1,"message":"509","line":11,"column":8,"nodeType":"502","messageId":"503","endLine":11,"endColumn":13},{"ruleId":"500","severity":1,"message":"501","line":117,"column":10,"nodeType":"502","messageId":"503","endLine":117,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":98,"column":10,"nodeType":"502","messageId":"503","endLine":98,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":124,"column":6,"nodeType":"512","endLine":124,"endColumn":8,"suggestions":"513"},{"ruleId":"500","severity":1,"message":"501","line":98,"column":10,"nodeType":"502","messageId":"503","endLine":98,"endColumn":21},{"ruleId":"510","severity":1,"message":"514","line":135,"column":6,"nodeType":"512","endLine":135,"endColumn":8,"suggestions":"515"},{"ruleId":"500","severity":1,"message":"501","line":98,"column":10,"nodeType":"502","messageId":"503","endLine":98,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":124,"column":6,"nodeType":"512","endLine":124,"endColumn":8,"suggestions":"516"},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"518","line":3,"column":16,"nodeType":"502","messageId":"503","endLine":3,"endColumn":25},{"ruleId":"500","severity":1,"message":"519","line":5,"column":3,"nodeType":"502","messageId":"503","endLine":5,"endColumn":9},{"ruleId":"500","severity":1,"message":"520","line":9,"column":3,"nodeType":"502","messageId":"503","endLine":9,"endColumn":17},{"ruleId":"500","severity":1,"message":"521","line":12,"column":3,"nodeType":"502","messageId":"503","endLine":12,"endColumn":8},{"ruleId":"500","severity":1,"message":"522","line":23,"column":18,"nodeType":"502","messageId":"503","endLine":23,"endColumn":26},{"ruleId":"523","severity":1,"message":"524","line":161,"column":40,"nodeType":"525","messageId":"526","endLine":161,"endColumn":42},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"519","line":5,"column":3,"nodeType":"502","messageId":"503","endLine":5,"endColumn":9},{"ruleId":"500","severity":1,"message":"520","line":9,"column":3,"nodeType":"502","messageId":"503","endLine":9,"endColumn":17},{"ruleId":"500","severity":1,"message":"521","line":12,"column":3,"nodeType":"502","messageId":"503","endLine":12,"endColumn":8},{"ruleId":"500","severity":1,"message":"522","line":25,"column":18,"nodeType":"502","messageId":"503","endLine":25,"endColumn":26},{"ruleId":"510","severity":1,"message":"527","line":58,"column":6,"nodeType":"512","endLine":58,"endColumn":19,"suggestions":"528"},{"ruleId":"523","severity":1,"message":"524","line":173,"column":40,"nodeType":"525","messageId":"526","endLine":173,"endColumn":42},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"519","line":5,"column":3,"nodeType":"502","messageId":"503","endLine":5,"endColumn":9},{"ruleId":"500","severity":1,"message":"520","line":9,"column":3,"nodeType":"502","messageId":"503","endLine":9,"endColumn":17},{"ruleId":"500","severity":1,"message":"521","line":12,"column":3,"nodeType":"502","messageId":"503","endLine":12,"endColumn":8},{"ruleId":"500","severity":1,"message":"522","line":25,"column":18,"nodeType":"502","messageId":"503","endLine":25,"endColumn":26},{"ruleId":"510","severity":1,"message":"529","line":58,"column":6,"nodeType":"512","endLine":58,"endColumn":19,"suggestions":"530"},{"ruleId":"523","severity":1,"message":"524","line":173,"column":40,"nodeType":"525","messageId":"526","endLine":173,"endColumn":42},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"519","line":5,"column":3,"nodeType":"502","messageId":"503","endLine":5,"endColumn":9},{"ruleId":"500","severity":1,"message":"520","line":9,"column":3,"nodeType":"502","messageId":"503","endLine":9,"endColumn":17},{"ruleId":"500","severity":1,"message":"521","line":12,"column":3,"nodeType":"502","messageId":"503","endLine":12,"endColumn":8},{"ruleId":"500","severity":1,"message":"522","line":25,"column":18,"nodeType":"502","messageId":"503","endLine":25,"endColumn":26},{"ruleId":"510","severity":1,"message":"531","line":58,"column":6,"nodeType":"512","endLine":58,"endColumn":19,"suggestions":"532"},{"ruleId":"523","severity":1,"message":"524","line":173,"column":40,"nodeType":"525","messageId":"526","endLine":173,"endColumn":42},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"510","severity":1,"message":"533","line":45,"column":6,"nodeType":"512","endLine":45,"endColumn":8,"suggestions":"534"},{"ruleId":"500","severity":1,"message":"535","line":52,"column":11,"nodeType":"502","messageId":"503","endLine":52,"endColumn":12},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"510","severity":1,"message":"533","line":45,"column":6,"nodeType":"512","endLine":45,"endColumn":8,"suggestions":"536"},{"ruleId":"500","severity":1,"message":"535","line":52,"column":11,"nodeType":"502","messageId":"503","endLine":52,"endColumn":12},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"537","line":69,"column":6,"nodeType":"512","endLine":69,"endColumn":8,"suggestions":"538"},{"ruleId":"500","severity":1,"message":"539","line":4,"column":3,"nodeType":"502","messageId":"503","endLine":4,"endColumn":7},{"ruleId":"500","severity":1,"message":"540","line":6,"column":3,"nodeType":"502","messageId":"503","endLine":6,"endColumn":11},{"ruleId":"500","severity":1,"message":"541","line":7,"column":3,"nodeType":"502","messageId":"503","endLine":7,"endColumn":12},{"ruleId":"500","severity":1,"message":"542","line":8,"column":3,"nodeType":"502","messageId":"503","endLine":8,"endColumn":16},{"ruleId":"500","severity":1,"message":"504","line":15,"column":13,"nodeType":"502","messageId":"503","endLine":15,"endColumn":17},{"ruleId":"500","severity":1,"message":"522","line":21,"column":18,"nodeType":"502","messageId":"503","endLine":21,"endColumn":26},{"ruleId":"500","severity":1,"message":"522","line":17,"column":18,"nodeType":"502","messageId":"503","endLine":17,"endColumn":26},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"510","severity":1,"message":"533","line":45,"column":6,"nodeType":"512","endLine":45,"endColumn":8,"suggestions":"543"},{"ruleId":"500","severity":1,"message":"535","line":49,"column":11,"nodeType":"502","messageId":"503","endLine":49,"endColumn":12},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"537","line":69,"column":6,"nodeType":"512","endLine":69,"endColumn":8,"suggestions":"544"},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"537","line":69,"column":6,"nodeType":"512","endLine":69,"endColumn":8,"suggestions":"545"},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"508","line":9,"column":8,"nodeType":"502","messageId":"503","endLine":9,"endColumn":13},{"ruleId":"500","severity":1,"message":"546","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":14},{"ruleId":"500","severity":1,"message":"509","line":11,"column":8,"nodeType":"502","messageId":"503","endLine":11,"endColumn":13},{"ruleId":"510","severity":1,"message":"547","line":20,"column":5,"nodeType":"512","endLine":20,"endColumn":18,"suggestions":"548"},{"ruleId":"500","severity":1,"message":"549","line":2,"column":8,"nodeType":"502","messageId":"503","endLine":2,"endColumn":17},{"ruleId":"500","severity":1,"message":"550","line":3,"column":8,"nodeType":"502","messageId":"503","endLine":3,"endColumn":17},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":8,"column":8,"nodeType":"502","messageId":"503","endLine":8,"endColumn":12},{"ruleId":"510","severity":1,"message":"547","line":29,"column":5,"nodeType":"512","endLine":29,"endColumn":18,"suggestions":"551"},{"ruleId":"500","severity":1,"message":"549","line":2,"column":8,"nodeType":"502","messageId":"503","endLine":2,"endColumn":17},{"ruleId":"500","severity":1,"message":"550","line":3,"column":8,"nodeType":"502","messageId":"503","endLine":3,"endColumn":17},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":8,"column":8,"nodeType":"502","messageId":"503","endLine":8,"endColumn":12},{"ruleId":"510","severity":1,"message":"547","line":30,"column":5,"nodeType":"512","endLine":30,"endColumn":18,"suggestions":"552"},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"509","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":13},{"ruleId":"510","severity":1,"message":"547","line":17,"column":6,"nodeType":"512","endLine":17,"endColumn":19,"suggestions":"553"},{"ruleId":"500","severity":1,"message":"554","line":19,"column":9,"nodeType":"502","messageId":"503","endLine":19,"endColumn":21},{"ruleId":"523","severity":1,"message":"555","line":41,"column":43,"nodeType":"525","messageId":"526","endLine":41,"endColumn":45},{"ruleId":"500","severity":1,"message":"549","line":2,"column":8,"nodeType":"502","messageId":"503","endLine":2,"endColumn":17},{"ruleId":"500","severity":1,"message":"550","line":3,"column":8,"nodeType":"502","messageId":"503","endLine":3,"endColumn":17},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":8,"column":8,"nodeType":"502","messageId":"503","endLine":8,"endColumn":12},{"ruleId":"510","severity":1,"message":"547","line":28,"column":6,"nodeType":"512","endLine":28,"endColumn":19,"suggestions":"556"},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"509","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":13},{"ruleId":"510","severity":1,"message":"547","line":17,"column":5,"nodeType":"512","endLine":17,"endColumn":18,"suggestions":"557"},{"ruleId":"500","severity":1,"message":"554","line":20,"column":9,"nodeType":"502","messageId":"503","endLine":20,"endColumn":21},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"509","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":13},{"ruleId":"510","severity":1,"message":"547","line":17,"column":5,"nodeType":"512","endLine":17,"endColumn":18,"suggestions":"558"},{"ruleId":"500","severity":1,"message":"554","line":20,"column":9,"nodeType":"502","messageId":"503","endLine":20,"endColumn":21},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"509","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":13},{"ruleId":"510","severity":1,"message":"547","line":17,"column":6,"nodeType":"512","endLine":17,"endColumn":19,"suggestions":"559"},{"ruleId":"500","severity":1,"message":"554","line":19,"column":9,"nodeType":"502","messageId":"503","endLine":19,"endColumn":21},{"ruleId":"500","severity":1,"message":"560","line":7,"column":17,"nodeType":"502","messageId":"503","endLine":7,"endColumn":24},{"ruleId":"500","severity":1,"message":"522","line":10,"column":18,"nodeType":"502","messageId":"503","endLine":10,"endColumn":26},{"ruleId":"561","severity":1,"message":"562","line":215,"column":11,"nodeType":"563","endLine":215,"endColumn":50},{"ruleId":"500","severity":1,"message":"560","line":7,"column":17,"nodeType":"502","messageId":"503","endLine":7,"endColumn":24},{"ruleId":"500","severity":1,"message":"522","line":10,"column":18,"nodeType":"502","messageId":"503","endLine":10,"endColumn":26},{"ruleId":"561","severity":1,"message":"562","line":209,"column":11,"nodeType":"563","endLine":209,"endColumn":50},{"ruleId":"561","severity":1,"message":"562","line":193,"column":13,"nodeType":"563","endLine":193,"endColumn":52},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"522","line":13,"column":18,"nodeType":"502","messageId":"503","endLine":13,"endColumn":26},{"ruleId":"510","severity":1,"message":"564","line":46,"column":6,"nodeType":"512","endLine":46,"endColumn":8,"suggestions":"565"},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"510","severity":1,"message":"566","line":71,"column":6,"nodeType":"512","endLine":71,"endColumn":8,"suggestions":"567"},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"500","severity":1,"message":"568","line":10,"column":10,"nodeType":"502","messageId":"503","endLine":10,"endColumn":23},{"ruleId":"500","severity":1,"message":"522","line":14,"column":18,"nodeType":"502","messageId":"503","endLine":14,"endColumn":26},{"ruleId":"510","severity":1,"message":"569","line":45,"column":6,"nodeType":"512","endLine":45,"endColumn":20,"suggestions":"570"},{"ruleId":"500","severity":1,"message":"571","line":2,"column":17,"nodeType":"502","messageId":"503","endLine":2,"endColumn":27},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"518","line":3,"column":28,"nodeType":"502","messageId":"503","endLine":3,"endColumn":37},{"ruleId":"500","severity":1,"message":"572","line":4,"column":20,"nodeType":"502","messageId":"503","endLine":4,"endColumn":27},{"ruleId":"500","severity":1,"message":"573","line":4,"column":29,"nodeType":"502","messageId":"503","endLine":4,"endColumn":34},{"ruleId":"510","severity":1,"message":"574","line":34,"column":6,"nodeType":"512","endLine":34,"endColumn":8,"suggestions":"575"},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"500","severity":1,"message":"571","line":2,"column":17,"nodeType":"502","messageId":"503","endLine":2,"endColumn":27},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"518","line":3,"column":28,"nodeType":"502","messageId":"503","endLine":3,"endColumn":37},{"ruleId":"500","severity":1,"message":"572","line":4,"column":20,"nodeType":"502","messageId":"503","endLine":4,"endColumn":27},{"ruleId":"500","severity":1,"message":"573","line":4,"column":29,"nodeType":"502","messageId":"503","endLine":4,"endColumn":34},{"ruleId":"510","severity":1,"message":"574","line":34,"column":6,"nodeType":"512","endLine":34,"endColumn":8,"suggestions":"576"},{"ruleId":"500","severity":1,"message":"571","line":2,"column":17,"nodeType":"502","messageId":"503","endLine":2,"endColumn":27},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"518","line":3,"column":28,"nodeType":"502","messageId":"503","endLine":3,"endColumn":37},{"ruleId":"500","severity":1,"message":"572","line":4,"column":20,"nodeType":"502","messageId":"503","endLine":4,"endColumn":27},{"ruleId":"500","severity":1,"message":"573","line":4,"column":29,"nodeType":"502","messageId":"503","endLine":4,"endColumn":34},{"ruleId":"510","severity":1,"message":"574","line":34,"column":6,"nodeType":"512","endLine":34,"endColumn":8,"suggestions":"577"},{"ruleId":"500","severity":1,"message":"522","line":12,"column":18,"nodeType":"502","messageId":"503","endLine":12,"endColumn":26},{"ruleId":"510","severity":1,"message":"533","line":43,"column":6,"nodeType":"512","endLine":43,"endColumn":8,"suggestions":"578"},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"537","line":42,"column":6,"nodeType":"512","endLine":42,"endColumn":8,"suggestions":"579"},{"ruleId":"500","severity":1,"message":"522","line":17,"column":18,"nodeType":"502","messageId":"503","endLine":17,"endColumn":26},{"ruleId":"500","severity":1,"message":"580","line":2,"column":30,"nodeType":"502","messageId":"503","endLine":2,"endColumn":40},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"581","line":42,"column":6,"nodeType":"512","endLine":42,"endColumn":8,"suggestions":"582"},{"ruleId":"500","severity":1,"message":"583","line":68,"column":17,"nodeType":"502","messageId":"503","endLine":68,"endColumn":21},{"ruleId":"500","severity":1,"message":"580","line":2,"column":30,"nodeType":"502","messageId":"503","endLine":2,"endColumn":40},{"ruleId":"500","severity":1,"message":"517","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"500","severity":1,"message":"522","line":11,"column":18,"nodeType":"502","messageId":"503","endLine":11,"endColumn":26},{"ruleId":"510","severity":1,"message":"581","line":46,"column":6,"nodeType":"512","endLine":46,"endColumn":8,"suggestions":"584"},{"ruleId":"500","severity":1,"message":"519","line":4,"column":8,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"504","line":5,"column":8,"nodeType":"502","messageId":"503","endLine":5,"endColumn":12},{"ruleId":"500","severity":1,"message":"505","line":6,"column":8,"nodeType":"502","messageId":"503","endLine":6,"endColumn":18},{"ruleId":"500","severity":1,"message":"506","line":7,"column":8,"nodeType":"502","messageId":"503","endLine":7,"endColumn":18},{"ruleId":"500","severity":1,"message":"507","line":8,"column":8,"nodeType":"502","messageId":"503","endLine":8,"endColumn":15},{"ruleId":"500","severity":1,"message":"585","line":10,"column":8,"nodeType":"502","messageId":"503","endLine":10,"endColumn":13},{"ruleId":"500","severity":1,"message":"586","line":13,"column":10,"nodeType":"502","messageId":"503","endLine":13,"endColumn":20},{"ruleId":"500","severity":1,"message":"587","line":14,"column":10,"nodeType":"502","messageId":"503","endLine":14,"endColumn":13},{"ruleId":"500","severity":1,"message":"588","line":14,"column":15,"nodeType":"502","messageId":"503","endLine":14,"endColumn":18},{"ruleId":"510","severity":1,"message":"589","line":50,"column":6,"nodeType":"512","endLine":50,"endColumn":8,"suggestions":"590"},{"ruleId":"500","severity":1,"message":"591","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":18},{"ruleId":"500","severity":1,"message":"522","line":13,"column":18,"nodeType":"502","messageId":"503","endLine":13,"endColumn":26},{"ruleId":"510","severity":1,"message":"581","line":34,"column":6,"nodeType":"512","endLine":34,"endColumn":8,"suggestions":"592"},"no-native-reassign",["593"],"no-negated-in-lhs",["594"],"no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'IconButton' is defined but never used.","'RemoveIcon' is defined but never used.","'AddIcon' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'job' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["595"],"React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.",["596"],["597"],"'Link' is defined but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'DropdownButton' is defined but never used.","'Modal' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'industry'. Either include it or remove the dependency array.",["598"],"React Hook useEffect has a missing dependency: 'stream'. Either include it or remove the dependency array.",["599"],"React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["600"],"React Hook useEffect has a missing dependency: 'internships'. Either include it or remove the dependency array.",["601"],"'t' is assigned a value but never used.",["602"],"React Hook useEffect has a missing dependency: 'jobs'. Either include it or remove the dependency array.",["603"],"'Card' is defined but never used.","'Dropdown' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.",["604"],["605"],["606"],"'Skills' is defined but never used.","React Hook useEffect has a missing dependency: 'changeValue'. Either include it or remove the dependency array. If 'changeValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["607"],"'Container' is defined but never used.","'TextField' is defined but never used.",["608"],["609"],["610"],"'handleSubmit' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["611"],["612"],["613"],["614"],"'Toaster' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'companyName' and 'internships'. Either include them or remove the dependency array.",["615"],"React Hook useEffect has missing dependencies: 'companyName' and 'jobs'. Either include them or remove the dependency array.",["616"],"'CompareArrows' is defined but never used.","React Hook useEffect has a missing dependency: 'companyName'. Either include it or remove the dependency array.",["617"],"'useContext' is defined but never used.","'Spinner' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'names'. Either include it or remove the dependency array.",["618"],["619"],["620"],["621"],["622"],"'InputGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user._id'. Either include it or remove the dependency array.",["623"],"'user' is assigned a value but never used.",["624"],"'Start' is defined but never used.","'useHistory' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["625"],"'useState' is defined but never used.",["626"],"no-global-assign","no-unsafe-negation",{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"627","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"638","fix":"640"},{"desc":"641","fix":"642"},{"desc":"638","fix":"643"},{"desc":"641","fix":"644"},{"desc":"641","fix":"645"},{"desc":"646","fix":"647"},{"desc":"646","fix":"648"},{"desc":"646","fix":"649"},{"desc":"646","fix":"650"},{"desc":"646","fix":"651"},{"desc":"646","fix":"652"},{"desc":"646","fix":"653"},{"desc":"646","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"661","fix":"663"},{"desc":"661","fix":"664"},{"desc":"638","fix":"665"},{"desc":"641","fix":"666"},{"desc":"667","fix":"668"},{"desc":"667","fix":"669"},{"desc":"670","fix":"671"},{"desc":"667","fix":"672"},"Update the dependencies array to be: [job, postId]",{"range":"673","text":"674"},"Update the dependencies array to be: [internship, postId]",{"range":"675","text":"676"},{"range":"677","text":"674"},"Update the dependencies array to be: [industry, internships]",{"range":"678","text":"679"},"Update the dependencies array to be: [internships, stream]",{"range":"680","text":"681"},"Update the dependencies array to be: [internships, location]",{"range":"682","text":"683"},"Update the dependencies array to be: [internships]",{"range":"684","text":"685"},{"range":"686","text":"685"},"Update the dependencies array to be: [jobs]",{"range":"687","text":"688"},{"range":"689","text":"685"},{"range":"690","text":"688"},{"range":"691","text":"688"},"Update the dependencies array to be: [changeValue, inputFields]",{"range":"692","text":"693"},{"range":"694","text":"693"},{"range":"695","text":"693"},{"range":"696","text":"693"},{"range":"697","text":"693"},{"range":"698","text":"693"},{"range":"699","text":"693"},{"range":"700","text":"693"},"Update the dependencies array to be: [companyName, internships]",{"range":"701","text":"702"},"Update the dependencies array to be: [companyName, jobs]",{"range":"703","text":"704"},"Update the dependencies array to be: [companyName, freshersJobs]",{"range":"705","text":"706"},"Update the dependencies array to be: [names]",{"range":"707","text":"708"},{"range":"709","text":"708"},{"range":"710","text":"708"},{"range":"711","text":"685"},{"range":"712","text":"688"},"Update the dependencies array to be: [state.user._id]",{"range":"713","text":"714"},{"range":"715","text":"714"},"Update the dependencies array to be: [profile]",{"range":"716","text":"717"},{"range":"718","text":"714"},[2938,2940],"[job, postId]",[3535,3537],"[internship, postId]",[2953,2955],[1556,1569],"[industry, internships]",[1548,1561],"[internships, stream]",[1556,1569],"[internships, location]",[1446,1448],"[internships]",[1442,1444],[2061,2063],"[jobs]",[1446,1448],[2079,2081],[2075,2077],[725,738],"[changeValue, inputFields]",[887,900],[906,919],[595,608],[871,884],[614,627],[629,642],[597,610],[1484,1486],"[companyName, internships]",[2176,2178],"[companyName, jobs]",[1548,1562],"[companyName, freshersJobs]",[1070,1072],"[names]",[1042,1044],[1074,1076],[1385,1387],[1266,1268],[1219,1221],"[state.user._id]",[1265,1267],[1602,1604],"[profile]",[1174,1176]]