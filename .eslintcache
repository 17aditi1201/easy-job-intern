[{"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js":"1","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js":"2","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js":"3","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js":"4","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js":"5","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js":"6","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"7","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js":"8","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"9","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"10","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"11","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"12","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"13","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"14","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"15","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js":"16","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js":"17","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js":"18","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js":"19","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignup.js":"20","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js":"21","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignupEmployer.js":"22","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"23","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js":"24","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js":"25","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js":"26","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByIndustry.js":"27","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByStream.js":"28","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByLocation.js":"29","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByLoction.js":"30","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipGroupedByStream.js":"31","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js":"32","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByIndustry.js":"33","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js":"34","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByIndustry.js":"35","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByLocation.js":"36","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByStream.js":"37","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByIndustry.js":"38","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js":"39","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js":"40","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js":"41","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js":"42","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js":"43","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js":"44","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js":"45","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js":"46","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js":"47","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js":"48","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js":"49","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\JobsCard\\JobsCard.js":"50","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\FresherJobCard\\FresherJobCard.js":"51","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\InternshipCard\\InternshipCard.js":"52","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByCompany.js":"53","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsByCompanyName.js":"54","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByLocation.js":"55","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobByCompanyName.js":"56","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipCompanyNames.js":"57","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByStream.js":"58","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobCompanyName.js":"59","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobCompanyName.js":"60","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\BookmarkInternhsip.js":"61","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\BookmarkJob.js":"62","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\BookmarkFresherJob.js":"63"},{"size":517,"mtime":1617712689619,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1617712043731,"results":"66","hashOfConfig":"65"},{"size":13870,"mtime":1622438495652,"results":"67","hashOfConfig":"65"},{"size":212,"mtime":1618028176556,"results":"68","hashOfConfig":"65"},{"size":7852,"mtime":1620708058259,"results":"69","hashOfConfig":"65"},{"size":8399,"mtime":1618294654225,"results":"70","hashOfConfig":"65"},{"size":14275,"mtime":1620708058255,"results":"71","hashOfConfig":"65"},{"size":17613,"mtime":1618294778068,"results":"72","hashOfConfig":"65"},{"size":8548,"mtime":1620709324226,"results":"73","hashOfConfig":"65"},{"size":6937,"mtime":1618146226170,"results":"74","hashOfConfig":"65"},{"size":4007,"mtime":1618146226167,"results":"75","hashOfConfig":"65"},{"size":1754,"mtime":1617712043725,"results":"76","hashOfConfig":"65"},{"size":2196,"mtime":1617712043729,"results":"77","hashOfConfig":"65"},{"size":16211,"mtime":1619197227001,"results":"78","hashOfConfig":"65"},{"size":15266,"mtime":1621367413237,"results":"79","hashOfConfig":"65"},{"size":14311,"mtime":1621369218379,"results":"80","hashOfConfig":"65"},{"size":1253,"mtime":1622371114380,"results":"81","hashOfConfig":"65"},{"size":13806,"mtime":1621367649525,"results":"82","hashOfConfig":"65"},{"size":17448,"mtime":1619196368515,"results":"83","hashOfConfig":"65"},{"size":840,"mtime":1620708058261,"results":"84","hashOfConfig":"65"},{"size":12934,"mtime":1621369394927,"results":"85","hashOfConfig":"65"},{"size":863,"mtime":1620708058262,"results":"86","hashOfConfig":"65"},{"size":7796,"mtime":1622365052651,"results":"87","hashOfConfig":"65"},{"size":10873,"mtime":1622221208367,"results":"88","hashOfConfig":"65"},{"size":602,"mtime":1622221208075,"results":"89","hashOfConfig":"65"},{"size":3927,"mtime":1622438485529,"results":"90","hashOfConfig":"65"},{"size":4118,"mtime":1622221208158,"results":"91","hashOfConfig":"65"},{"size":4108,"mtime":1622221208185,"results":"92","hashOfConfig":"65"},{"size":4118,"mtime":1622221208170,"results":"93","hashOfConfig":"65"},{"size":4512,"mtime":1622221208280,"results":"94","hashOfConfig":"65"},{"size":4506,"mtime":1622221208251,"results":"95","hashOfConfig":"65"},{"size":3544,"mtime":1622438748821,"results":"96","hashOfConfig":"65"},{"size":4979,"mtime":1622221208297,"results":"97","hashOfConfig":"65"},{"size":3048,"mtime":1622437308599,"results":"98","hashOfConfig":"65"},{"size":4439,"mtime":1622221208263,"results":"99","hashOfConfig":"65"},{"size":4920,"mtime":1622221208303,"results":"100","hashOfConfig":"65"},{"size":4914,"mtime":1622221208326,"results":"101","hashOfConfig":"65"},{"size":3385,"mtime":1622437382581,"results":"102","hashOfConfig":"65"},{"size":4317,"mtime":1622372377894,"results":"103","hashOfConfig":"65"},{"size":4882,"mtime":1622373336415,"results":"104","hashOfConfig":"65"},{"size":5270,"mtime":1622372812389,"results":"105","hashOfConfig":"65"},{"size":2078,"mtime":1622373098869,"results":"106","hashOfConfig":"65"},{"size":4329,"mtime":1622373436679,"results":"107","hashOfConfig":"65"},{"size":2116,"mtime":1622373048109,"results":"108","hashOfConfig":"65"},{"size":2130,"mtime":1622373076503,"results":"109","hashOfConfig":"65"},{"size":182,"mtime":1618503616102,"results":"110","hashOfConfig":"65"},{"size":2085,"mtime":1622372998509,"results":"111","hashOfConfig":"65"},{"size":205,"mtime":1618503616103,"results":"112","hashOfConfig":"65"},{"size":1874,"mtime":1618503616116,"results":"113","hashOfConfig":"65"},{"size":7050,"mtime":1622438763973,"results":"114","hashOfConfig":"65"},{"size":6930,"mtime":1622437346299,"results":"115","hashOfConfig":"65"},{"size":6858,"mtime":1622438534431,"results":"116","hashOfConfig":"65"},{"size":4125,"mtime":1622221742044,"results":"117","hashOfConfig":"65"},{"size":4694,"mtime":1622223974235,"results":"118","hashOfConfig":"65"},{"size":3385,"mtime":1622437574651,"results":"119","hashOfConfig":"65"},{"size":3143,"mtime":1622437706816,"results":"120","hashOfConfig":"65"},{"size":1666,"mtime":1622351570801,"results":"121","hashOfConfig":"65"},{"size":3376,"mtime":1622437598017,"results":"122","hashOfConfig":"65"},{"size":1617,"mtime":1622397509025,"results":"123","hashOfConfig":"65"},{"size":1672,"mtime":1622437703963,"results":"124","hashOfConfig":"65"},{"size":3952,"mtime":1622438485534,"results":"125","hashOfConfig":"65"},{"size":3779,"mtime":1622435121908,"results":"126","hashOfConfig":"65"},{"size":3981,"mtime":1622436946487,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1gbhm1z",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"130"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"130"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js",[],["284","285"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js",["286"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction LoginForm() {\r\n  const { dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/student/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"student\"));\r\n          dispatch({ type: \"USER\", payload: { user: res.data.user , userType: \"student\"} });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          const notify = () => toast(\"Signin Successfull\");\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/student-signup\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",["287"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst EmployerSignup = () => {\r\n  const history = useHistory();\r\n  //listing initial states of the fields present in the form\r\n  const initialState = {\r\n    companyName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 3,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    personName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      companyName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      personName,\r\n      contact,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/employer/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          companyName: companyName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.push(\"/employer-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => {\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the company */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Company Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.companyName.valid &&\r\n                    formValues.companyName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the company name\"\r\n                  name=\"companyName\"\r\n                  value={formValues.companyName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.companyName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.companyName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*Email  */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Password Confirmation */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Person Name */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* contact */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              {/* For Existing user */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/employer-login\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployerSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js",["288"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst StudentSignup = () => {\r\n  const history = useHistory();\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    personName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    degree: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    institutionName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    branch: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    year: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      personName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/student/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          branch: branch.value,\r\n          year: year.value,\r\n          degree: degree.value,\r\n          institutionName: institutionName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.pushState(\"/student-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*  Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.password.valid && formValues.password.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type={formValues.showPassword?\"text\":\"password\"}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={formValues.password.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.password.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.password.errorMessage}\r\n                  </span>\r\n                )}\r\n                <InputGroup.Append>\r\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                        <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                        >\r\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton> \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Confirm Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.degree.valid && formValues.degree.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={formValues.degree.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.institutionName.valid &&\r\n                    formValues.institutionName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={formValues.institutionName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.branch.valid && formValues.branch.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={formValues.branch.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.year.valid && formValues.year.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={formValues.year.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Already a user? */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/student-login\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["289"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form,  InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EmployerSignin() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          // toast(res.data.error);\r\n          console.log(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"employee\"))\r\n          dispatch({ type: \"USER\", payload: {user: res.data.user , userType: \"employee\"} });\r\n          console.log(state);\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          // toast(\"Signin Successfull\");\r\n          const notify = () => toast('Signin Successfull');\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Form.Group\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.5vh\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/employer-signup\">\r\n                    <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                      Don't have an account? Sign up\r\n                    </a>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form.Group>\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerSignin;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js",["290","291","292","293","294","295","296","297"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Skills from \"./Skills\";\r\nimport Input from \"./Input\";\r\nimport Achievments from \"./Achievments\";\r\nimport Volunteer from \"./Volunteer\";\r\nimport Other from \"./Other\";\r\nimport Project from \"./Project\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport Start from \"./Start\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n    <div className=\"pt-5\">\r\n      <div className=\"main-box pt-4\">\r\n        <h1 className=\"ProfileBuilderheading\">Student Profile Builder</h1>\r\n        <h6 className=\"inst\">\r\n          Please Enter the details below to complete your student profile:-\r\n        </h6>\r\n        <Start />\r\n        <Education />\r\n        <Experience />\r\n        <Project />\r\n        <Skills />\r\n        <Achievments />\r\n        <Volunteer />\r\n        <Other />\r\n      </div>\r\n      <br />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js",["298","299"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateJob = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [job, setJob] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    experience: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-job/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n          setJob(res.data.job);\r\n          console.log(job);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      salary,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      experience,\r\n      stream,\r\n      industry,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-job\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        salary: salary.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        experience: experience.value,\r\n        stream: stream.value,\r\n        industry: industry.value,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {job && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Job\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || job.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Stream\"\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || job.stream}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stream.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stream.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Industry\"\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || job.industry}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.industry.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.industry.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || job.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter salary\"\r\n                  name=\"salary\"\r\n                  value={formValues.salary.value || job.salary}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.salary.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.salary.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || job.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || job.lastDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || job.startDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Experience\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"Number\"\r\n                  placeholder=\"Enter experince\"\r\n                  name=\"experience\"\r\n                  value={formValues.experience.value || job.experience}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.experience.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.experience.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateJob;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js",["300","301"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateInternship = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [internship, setInternship] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stipend: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    endDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  // const setInitialValue = () => {\r\n  // const updatedFormElementD = { ...updatedFormValues[\"description\"] };\r\n  // const updatedFormElementL = { ...updatedFormValues[\"location\"] };\r\n  // const updatedFormElementS = { ...updatedFormValues[\"stipend\"] };\r\n  // const updatedFormElementTS = { ...updatedFormValues[\"techstack\"] };\r\n  // const updatedFormElementLD = { ...updatedFormValues[\"lastDate\"] };\r\n  // const updatedFormElementSD = { ...updatedFormValues[\"startDate\"] };\r\n  // const updatedFormElementED = { ...updatedFormValues[\"endDate\"] };\r\n  // updatedFormElementD.value =nullnternship.description;\r\n  // updatedFormElementL.value = internship.location;\r\n  // updatedFormElementS.value = internship.stipend;\r\n  // updatedFormElementTS.value = internship.techstack;\r\n  // updatedFormElementLD.value = internship.lastDate;\r\n  // updatedFormElementSD.value = internship.startDate;\r\n  // updatedFormElementED.value = internship.endDate;\r\n  // updatedFormValues[\"description\"] = updatedFormElementD;\r\n  // updatedFormValues[\"location\"] = updatedFormElementL;\r\n  // updatedFormValues[\"stipend\"] = updatedFormElementS;\r\n  // updatedFormValues[\"techstack\"] = updatedFormElementTS;\r\n  // updatedFormValues[\"lastDate\"] = updatedFormElementLD;\r\n  // updatedFormValues[\"startDate\"] = updatedFormElementSD;\r\n  // updatedFormValues[\"endDate\"] = updatedFormElementED;\r\n  // };\r\n  // useEffect(() => {\r\n  //   if (internship) {\r\n  //     setInitialState((prev) => {\r\n  //       return {\r\n  //         ...prev,\r\n  //         description: {\r\n  //           ...prev.description,\r\n  //           value: internship.description,\r\n  //         },\r\n  //         location: {\r\n  //           ...prev.location,\r\n  //           value: internship.location,\r\n  //         },\r\n  //         stipend: {\r\n  //           ...prev.stipend,\r\n  //           value: internship.stipend,\r\n  //         },\r\n  //       };\r\n  //     });\r\n\r\n  //     setFormValues(initialState);\r\n  //   }\r\n  // }, [internship]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-internship/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internship);\r\n          setInternship(res.data.internship);\r\n          console.log(internship);\r\n          // if (internship) {\r\n          // console.log(res.data.internship.description);\r\n          // setInitialValue();\r\n          // setInitialValue(\"description\", res.data.internship.description);\r\n          // setInitialValue(\"location\", res.data.internship.location);\r\n          // setInitialValue(\"stipend\", res.data.internship.stipend);\r\n          // setInitialValue(\"lastDate\", new Date(res.data.internship.lastDate));\r\n          // setInitialValue(\"startDate\", new Date(res.data.internship.startDate));\r\n          // setInitialValue(\"endDate\", res.data.internship.endDate);\r\n          // setInitialValue(\"techstack\", res.data.internship.techstack);\r\n          // }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n    console.log(typeof formValues.startDate.value);\r\n    const duration =\r\n      new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\r\n    console.log(duration);\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      stipend,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      endDate,\r\n      industry,\r\n      stream\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-internship\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        stipend: stipend.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        endDate: endDate.value,\r\n        industry: industry.value,\r\n        stream: stream.value,\r\n        duration: duration,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {internship && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Internship\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || internship.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || internship.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"exampleForm.ControlSelect1\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || internship.industry}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Select Industry</option>\r\n                  <option value=\"IT\">IT</option>\r\n                  <option value=\"Marketing\">Marketing</option>\r\n                  <option value=\"Design\">Design</option>\r\n                  <option value=\"MBA\">MBA</option>\r\n                  <option value=\"Engineering\">Engineering</option>\r\n                  <option value=\"Media\">Media</option>\r\n                  <option value=\"Teaching\">Teaching</option>\r\n                  <option value=\"Finance\">Finance</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || internship.stream}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>Select Stream</option>\r\n                  <option value=\"Management\">Management</option>\r\n                  <option value=\"Manufacturing\">Manufacturing</option>\r\n                  <option value=\"Accounts\">Accounts</option>\r\n                  <option value=\"Architecture\">Architecture</option>\r\n                  <option value=\"Machine Learning\">Machine Learning</option>\r\n                  <option value=\"Data Science\">Data Science</option>\r\n                  <option value=\"Development\">Development</option>\r\n                  <option value=\"Design\">Design</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stipend</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter stipend\"\r\n                  name=\"stipend\"\r\n                  value={formValues.stipend.value || internship.stipend}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stipend.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stipend.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || internship.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={\r\n                    formValues.lastDate.value || new Date(internship.lastDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={\r\n                    formValues.startDate.value || new Date(internship.startDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  End Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter end date\"\r\n                  name=\"endDate\"\r\n                  value={\r\n                    formValues.endDate.value || new Date(internship.endDate)\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.endDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.endDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateInternship;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignup.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js",["302","303"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateFresherJob = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [job, setJob] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stream: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    industry: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    experience: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-freshersjob/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n          setJob(res.data.job);\r\n          console.log(job);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      salary,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      stream,\r\n      industry,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-fresherjob\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        salary: salary.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        industry: industry.value,\r\n        stream: stream.value,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {job && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Fresher's Job\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Location\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || job.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Stream\"\r\n                  name=\"stream\"\r\n                  value={formValues.stream.value || job.stream}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stream.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stream.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Industry\"\r\n                  name=\"industry\"\r\n                  value={formValues.industry.value || job.industry}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.industry.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.industry.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || job.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter salary\"\r\n                  name=\"salary\"\r\n                  value={formValues.salary.value || job.salary}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.salary.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.salary.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || job.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || job.lastDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || job.startDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateFresherJob;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\welcomeSignup\\welcomeSignupEmployer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js",["304","305"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByIndustry.js",["306","307","308"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { industry } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/industry-internship/${industry}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByStream.js",["309","310","311"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { stream } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/stream-internship/${stream}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByLocation.js",["312","313","314"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { location } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/location-internship/${location}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByLoction.js",["315","316","317"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/location`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  //   console.log(internships);\r\n  console.log(internships[0]);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {internship.companyName} */}\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipGroupedByStream.js",["318","319","320"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/stream`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  //   console.log(internships);\r\n  console.log(internships[0]);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {internship.companyName} */}\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js",["321","322"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByIndustry.js",["323","324","325","326","327","328"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Dropdown,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/industry\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          // console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        // console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((catejob) => (\r\n          <div key={catejob._id}>\r\n            <h1 className=\"parameter\">{catejob._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {catejob.jobs &&\r\n                catejob.jobs.map((job) => {\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js",["329"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipsGroupedByIndustry.js",["330","331","332"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsGroupedByIndustry = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //   const { location } = useParams();\r\n\r\n  //   console.log(internships);\r\n  //   console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/internship/industry`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          //   console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          //   console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    // console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    // console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.internships);\r\n          // setInternships(res.data.internships);\r\n          // console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          window.location.reload(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : internships && !internships.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100 \"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No internships available right now\r\n        </Alert>\r\n      ) : (\r\n        internships &&\r\n        internships.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.internships &&\r\n                intern.internships.map((internship) => {\r\n                  // console.log(internship.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={internship._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      <InternshipCard\r\n                        internship={internship}\r\n                        userId={state.user._id}\r\n                        deletePost={deletePost}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n              {/* )} */}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsGroupedByIndustry;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByLocation.js",["333","334"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByLocation = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/location\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.jobs);\r\n\r\n          setJobs(res.data.jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.jobs &&\r\n                intern.jobs.map((job) => {\r\n                  // console.log(job.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {job.companyName} */}\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByLocation;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsGroupedByStream.js",["335","336"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\n\r\nconst JobsGroupedByStream = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/user/job/stream\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.jobs);\r\n\r\n          setJobs(res.data.jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      {loading ? (\r\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n          <Spinner\r\n            animation=\"border\"\r\n            variant=\"light\"\r\n            style={{\r\n              borderColor: \"#515b66\",\r\n              borderRightColor: \"transparent\",\r\n            }}\r\n          />\r\n        </div>\r\n      ) : jobs && !jobs.length > 0 ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          className=\"w-100\"\r\n          style={{\r\n            backgroundColor: \"#343A40\",\r\n            border: \"none\",\r\n            color: \"#ffc107\",\r\n          }}\r\n        >\r\n          No Jobs available right now\r\n        </Alert>\r\n      ) : (\r\n        jobs &&\r\n        jobs.map((intern) => (\r\n          <div key={intern._id}>\r\n            <h1 className=\"parameter\">{intern._id}</h1>\r\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n              {intern.jobs &&\r\n                intern.jobs.map((job) => {\r\n                  // console.log(job.createdBy._id, state.user._id);\r\n                  return (\r\n                    <Col\r\n                      key={job._id}\r\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n                    >\r\n                      {/* {job.companyName} */}\r\n                      <JobsCard\r\n                        job={job}\r\n                        deletePost={deletePost}\r\n                        key={job._id}\r\n                        userId={state.user._id}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JobsGroupedByStream;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByIndustry.js",["337"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js",["338","339","340","341","342"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Label from \"./Label\";\r\nimport Skills from \"./Skills\";\r\nimport Input from \"./Input\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst Start = () => {\r\n  const [inputFields, setInputFields] = useState([{ profileLink: \"\" }]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { profileLink: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"form-main\" onSubmit={handleSubmit}>\r\n        <h1 className=\"subHeading\">General</h1>\r\n        <Row className=\"justify-content-between px-3\">\r\n          <div className=\"side\">\r\n            <label className=\"label-text\">\r\n              First Name<span>*</span>\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your first name\"\r\n              className=\"text-long\"\r\n            ></input>\r\n            <br />\r\n          </div>\r\n\r\n          <div className=\"side\">\r\n            <label className=\"label-text\">\r\n              Last Name<span>*</span>\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your last name\"\r\n              className=\"text-long\"\r\n            ></input>\r\n            <br />\r\n          </div>\r\n        </Row>\r\n\r\n        <label className=\"label-text\">\r\n          Studnet Address<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your student address\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          Github Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your github link\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          LinkedIn Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className=\"text-long\"\r\n          placeholder=\"Enter your linkedinlink\"\r\n        ></input>\r\n        <br />\r\n\r\n        <label className=\"label-text\">\r\n          Other Profile Link<span>*</span>\r\n        </label>\r\n        <br />\r\n        {/* <input type=\"text\" className=\"text-long\" placeholder=\"Enter your other profile link\"></input> */}\r\n\r\n          {inputFields.map((inputField) => (\r\n            <Row key={inputField.id} className=\"justify-content-between\">\r\n              <Col className=\"col-10\">\r\n                <input\r\n                  name=\"profileLink\"\r\n                  label=\"Profile Link\"\r\n                  value={inputField.profileLink}\r\n                  className=\"text-long\"\r\n                  placeholder=\"Enter your other profile link\"\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                ></input>\r\n              </Col>\r\n              <Col className=\"col-2 d-flex\">\r\n                <IconButton\r\n                  disabled={inputFields.length === 1}\r\n                  onClick={() => handleRemoveFields(inputField.id)}\r\n                >\r\n                  <RemoveIcon />\r\n                </IconButton>\r\n                <IconButton onClick={handleAddFields}>\r\n                  <AddIcon />\r\n                </IconButton>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        {/* </Row> */}\r\n      </form>\r\n      <hr></hr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js",["343","344","345","346"],"import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Experience() {\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      company: \"\",\r\n      title: \"\",\r\n      sd: \"\",\r\n      ld: \"\",\r\n      location: \"\",\r\n      desc: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        company: \"\",\r\n        title: \"\",\r\n        sd: \"\",\r\n        ld: \"\",\r\n        location: \"\",\r\n        desc: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Experience</h2>\r\n      <form className=\"experience\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"Company/Organization\" />\r\n            <br />\r\n            <input\r\n              name=\"company\"\r\n              label=\"Company/organization\"\r\n              placeholder=\"Enter Company/organization Name\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Title\" />\r\n            <br />\r\n            <input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              placeholder=\"Enter Title\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"sd\"\r\n                  type=\"date\"\r\n                  label=\"Start Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"ld\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row >\r\n            <Label value=\"Location\" />\r\n            <br />\r\n            <input\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              placeholder=\"Enter Location\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Description\" />\r\n            <textarea\r\n              name=\"desc\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js",["347","348","349","350"],"import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Education() {\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      school: \"\",\r\n      degree: \"\",\r\n      study: \"\",\r\n      sd: \"\",\r\n      ld: \"\",\r\n      grade: \"\",\r\n      desc: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        school: \"\",\r\n        degree: \"\",\r\n        study: \"\",\r\n        sd: \"\",\r\n        ld: \"\",\r\n        grade: \"\",\r\n        desc: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Education</h2>\r\n      <form className=\"education\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"School\" />\r\n            <br />\r\n            <input\r\n              name=\"school\"\r\n              label=\"School Name\"\r\n              placeholder=\"Ex:Boston University\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Degree\" />\r\n            <br />\r\n            <input\r\n              name=\"degree\"\r\n              label=\"Degree\"\r\n              placeholder=\"Ex:Bachelors\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Field of Study\" />\r\n            <br />\r\n            <input\r\n              name=\"study\"\r\n              label=\"Study \"\r\n              placeholder=\"Ex:Business\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"sd\"\r\n                  type=\"date\"\r\n                  label=\"Star Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"ld\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row>\r\n            <Label value=\"Grade\" />\r\n            <br />\r\n            <input\r\n              name=\"grade\"\r\n              label=\"Grade \"\r\n              placeholder=\"Enter Your Grade\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Description\" />\r\n            <br />\r\n            <textarea\r\n              name=\"desc\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Education;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js",["351","352","353","354"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport {  useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\n\r\n\r\nconst Other=()=>\r\n{\r\n    const [inputFields, setInputFields] = useState([\r\n        {  Other:'' },\r\n      ]);\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n      };\r\n\r\n      const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n          if(id === i.id) {\r\n            i[event.target.name] = event.target.value\r\n          }\r\n          return i;\r\n        })\r\n        \r\n        setInputFields(newInputFields);\r\n      }\r\n\r\n      const handleAddFields = () => {\r\n        setInputFields([...inputFields, {   Other:'' }])\r\n      }\r\n\r\n      const handleRemoveFields = id => {\r\n        const values  = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n      }\r\n\r\n      return (\r\n        <form className=\"Other\">\r\n        <h2 className=\"subHeading\">Other</h2>\r\n        <Label value=\"Other\"/><br/>\r\n        { inputFields.map(inputField => (\r\n    <div key={inputField.id}>\r\n      <input\r\n        name=\"Other\"\r\n        label=\"Other\"\r\n        value={inputField.Other}\r\n        className=\"text-long\"\r\n        placeholder=\"Enter your Other\"\r\n        onChange={event => handleChangeInput(inputField.id, event)}\r\n      ></input>\r\n      <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n        <RemoveIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleAddFields}\r\n      >\r\n        <AddIcon />\r\n      </IconButton>\r\n      </div>\r\n     ))}\r\n          \r\n        <hr/>\r\n      </form>\r\n      \r\n\r\n      );}\r\n\r\n      export default Other;","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js",["355","356","357","358"],"import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./profile.css\";\r\nimport Label from \"./Label\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Project() {\r\n  const [inputFields, setInputFields] = useState([\r\n    { id: uuidv4(), project: \"\", link: \"\", sd: \"\", ld: \"\", desc: \"\" },\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      { id: uuidv4(), project: \"\", link: \"\", sd: \"\", ld: \"\", desc: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"subHeading\">Project</h2>\r\n      <form className=\"projects\" onSubmit={handleSubmit}>\r\n        {inputFields.map((inputField) => (\r\n          <div key={inputField.id}>\r\n            <Label value=\"Project-Title\" />\r\n            <br />\r\n            <input\r\n              name=\"project\"\r\n              label=\"Project Name\"\r\n              placeholder=\"Enter Project Title\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Label value=\"Project-Link\" />\r\n            <br />\r\n            <input\r\n              name=\"project\"\r\n              label=\"Project Name\"\r\n              placeholder=\"Enter Project Title\"\r\n              className=\"text-long\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <Row className=\"justify-content-between px-3\">\r\n              <div className=\"side\">\r\n                <Label value=\"Start Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"sd\"\r\n                  type=\"date\"\r\n                  label=\"Star Date\"\r\n                  placeholder=\"Enter Start Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n              <div className=\"byside\">\r\n                <Label value=\"Last Date\" />\r\n                <br />\r\n                <input\r\n                  name=\"ld\"\r\n                  type=\"date\"\r\n                  label=\"Last Date\"\r\n                  placeholder=\"Enter Last Date\"\r\n                  className=\"text-long\"\r\n                  value={inputField.firstName}\r\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\r\n                />\r\n                <br />\r\n              </div>\r\n            </Row>\r\n            <Label value=\"Description\" />\r\n            <textarea\r\n              name=\"desc\"\r\n              rows=\"3\"\r\n              cols=\"82\"\r\n              label=\"Description\"\r\n              variant=\"filled\"\r\n              value={inputField.firstName}\r\n              onChange={(event) => handleChangeInput(inputField.id, event)}\r\n            />\r\n            <br />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.id)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js",["359","360","361","362"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport {  useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\n\r\n\r\nconst Achievments=()=>\r\n{\r\n    const [inputFields, setInputFields] = useState([\r\n        {  skills:'' },\r\n      ]);\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n      };\r\n\r\n      const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n          if(id === i.id) {\r\n            i[event.target.name] = event.target.value\r\n          }\r\n          return i;\r\n        })\r\n        \r\n        setInputFields(newInputFields);\r\n      }\r\n\r\n      const handleAddFields = () => {\r\n        setInputFields([...inputFields, {   skills:'' }])\r\n      }\r\n\r\n      const handleRemoveFields = id => {\r\n        const values  = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n      }\r\n\r\n      return (\r\n        <form className=\"skills\">\r\n        <h2 className=\"subHeading\">Achievments</h2>\r\n        <Label value=\"Achievments\"/><br/>\r\n        { inputFields.map(inputField => (\r\n    <div key={inputField.id}>\r\n      <input\r\n        name=\"achievments\"\r\n        label=\"achievments\"\r\n        value={inputField.skills}\r\n        className=\"text-long\"\r\n        placeholder=\"Enter your achievments\"\r\n        onChange={event => handleChangeInput(inputField.id, event)}\r\n      ></input>\r\n      <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n        <RemoveIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleAddFields}\r\n      >\r\n        <AddIcon />\r\n      </IconButton>\r\n      </div>\r\n     ))}\r\n          \r\n        <hr/>\r\n      </form>\r\n\r\n      );}\r\n\r\n      export default Achievments;","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js",["363","364","365","366"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport {  useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\n\r\n\r\nconst Volunteer=()=>\r\n{\r\n    const [inputFields, setInputFields] = useState([\r\n        {  volunteer:'' },\r\n      ]);\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n      };\r\n\r\n      const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n          if(id === i.id) {\r\n            i[event.target.name] = event.target.value\r\n          }\r\n          return i;\r\n        })\r\n        \r\n        setInputFields(newInputFields);\r\n      }\r\n\r\n      const handleAddFields = () => {\r\n        setInputFields([...inputFields, {   volunteer:'' }])\r\n      }\r\n\r\n      const handleRemoveFields = id => {\r\n        const values  = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n      }\r\n\r\n      return (\r\n        <form className=\"volunteer\">\r\n        <h2 className=\"subHeading\">Volunteer Experience</h2>\r\n        <Label value=\"Volunteer Experience\"/><br/>\r\n        { inputFields.map(inputField => (\r\n    <div key={inputField.id}>\r\n      <input\r\n        name=\"volunteer\"\r\n        label=\"volunteer\"\r\n        value={inputField.skills}\r\n        className=\"text-long\"\r\n        placeholder=\"Enter your Skills\"\r\n        onChange={event => handleChangeInput(inputField.id, event)}\r\n      ></input>\r\n      <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n        <RemoveIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleAddFields}\r\n      >\r\n        <AddIcon />\r\n      </IconButton>\r\n      </div>\r\n     ))}\r\n          \r\n        <hr/>\r\n      </form>\r\n\r\n      );}\r\n\r\n      export default Volunteer;","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js",["367","368","369","370"],"import React from \"react\";\r\nimport \"./profile.css\";\r\nimport {  useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Label from \"./Label\";\r\nimport Input from \"./Input\";\r\n\r\n\r\n\r\nconst Skills=()=>\r\n{\r\n    const [inputFields, setInputFields] = useState([\r\n        {  skills:'' },\r\n      ]);\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n      };\r\n\r\n      const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n          if(id === i.id) {\r\n            i[event.target.name] = event.target.value\r\n          }\r\n          return i;\r\n        })\r\n        \r\n        setInputFields(newInputFields);\r\n      }\r\n\r\n      const handleAddFields = () => {\r\n        setInputFields([...inputFields, {   skills:'' }])\r\n      }\r\n\r\n      const handleRemoveFields = id => {\r\n        const values  = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n      }\r\n\r\n      return (\r\n        <form className=\"skills edu\">\r\n        <h2 className=\"subHeading\">Skills</h2>\r\n        <Label value=\"Skills\"/><br/>\r\n        { inputFields.map(inputField => (\r\n    <div key={inputField.id}>\r\n      <input\r\n        name=\"skills\"\r\n        label=\"skills\"\r\n        value={inputField.skills}\r\n        className=\"text-long\"\r\n        placeholder=\"Enter your Skills\"\r\n        onChange={event => handleChangeInput(inputField.id, event)}\r\n      ></input>\r\n      <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n        <RemoveIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleAddFields}\r\n      >\r\n        <AddIcon />\r\n      </IconButton>\r\n      </div>\r\n     ))}\r\n          \r\n        <hr/>\r\n      </form>\r\n\r\n      );}\r\n\r\n      export default Skills;","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\JobsCard\\JobsCard.js",["371","372","373"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\FresherJobCard\\FresherJobCard.js",["374","375","376"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\UI\\InternshipCard\\InternshipCard.js",["377"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipByCompany.js",["378","379","380"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./AllInternships.css\";\r\nimport { UserContext } from \"../../App\";\r\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\r\n\r\nconst InternshipsByCompany = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [internships, setInternships] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { companyName } = useParams();\r\n\r\n  console.log(internships);\r\n  console.log(state);\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-internship/${companyName}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (internships && internships[4]) {\r\n    console.log(internships[4]);\r\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-internship\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setInternships(res.data.internships);\r\n          console.log(internships);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : internships && !internships.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100 \"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No internships available right now\r\n          </Alert>\r\n        ) : (\r\n          internships &&\r\n          internships.map((internship) => {\r\n            // console.log(internship.createdBy._id, state.user._id);\r\n            return (\r\n              <Col\r\n                key={internship._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <InternshipCard\r\n                  internship={internship}\r\n                  userId={state.user._id}\r\n                  deletePost={deletePost}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default InternshipsByCompany;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobsByCompanyName.js",["381","382"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport \"../Internships/AllInternships.css\";\r\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst JobsByCompanyName = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { companyName } = useParams();\r\n  // useEffect(() => {\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"http://localhost:5000/user/all-jobs\",\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.error) {\r\n  //         console.log(res.data.error);\r\n  //         // alert(res.data.error);\r\n  //         const notify = () => toast(res.data.error);\r\n  //         notify();\r\n  //       } else {\r\n  //         // if (res && res.data) {\r\n  //           console.log(res.data.jobs);\r\n  //           setJobs(res.data.jobs);\r\n  //           console.log(jobs);\r\n  //         // }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error: \", err);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/job/companyName/${companyName}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.Jobs);\r\n\r\n          setJobs(res.data.Jobs);\r\n          console.log(jobs);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  if (jobs && jobs[4]) {\r\n    console.log(jobs[4]);\r\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\r\n    console.log(t);\r\n  }\r\n\r\n  const deletePost = (postId) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/employer/delete-job\",\r\n      data: {\r\n        postId,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // console.log(res.data.jobs);\r\n          // setJobs(res.data.jobs);\r\n          // console.log(jobs);\r\n          window.location.reload(false);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"internshipsOuterContainer\">\r\n      <Toaster />\r\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\r\n        {loading ? (\r\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              variant=\"light\"\r\n              style={{\r\n                borderColor: \"#515b66\",\r\n                borderRightColor: \"transparent\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : jobs && !jobs.length > 0 ? (\r\n          <Alert\r\n            variant=\"danger\"\r\n            className=\"w-100\"\r\n            style={{\r\n              backgroundColor: \"#343A40\",\r\n              border: \"none\",\r\n              color: \"#ffc107\",\r\n            }}\r\n          >\r\n            No Jobs available right now\r\n          </Alert>\r\n        ) : (\r\n          jobs &&\r\n          jobs.map((job) => {\r\n            return (\r\n              <Col\r\n                key={job._id}\r\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\r\n              >\r\n                <JobsCard\r\n                  job={job}\r\n                  deletePost={deletePost}\r\n                  key={job._id}\r\n                  userId={state.user._id}\r\n                />\r\n              </Col>\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default JobsByCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByLocation.js",["383"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobByCompanyName.js",["384","385","386"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\InternshipCompanyNames.js",["387","388","389","390","391","392"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nconst InternshipCompanyName = () => {\r\n  const history = useHistory();\r\n  const [names, setNames] = useState();\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-internship`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          //   const notify = () => toast(res.data.error);\r\n          //   notify();\r\n        } else {\r\n          console.log(res.data.internships);\r\n          setNames(res.data.internships);\r\n          console.log(names);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(names);\r\n  return (\r\n    <div>\r\n      <h1 className=\"companyHeading\">Internships</h1>\r\n      <Row>\r\n        {names &&\r\n          names.map((name) => (\r\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\r\n              <div\r\n                className=\"NAME-company\"\r\n                onClick={() =>\r\n                  history.push(`/companyName-internship/${name._id}`)\r\n                }\r\n              >\r\n                {name._id}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InternshipCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FresherJobsGroupedByStream.js",["393"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\JobCompanyName.js",["394","395","396","397","398","399"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nconst JobCompanyName = () => {\r\n  const history = useHistory();\r\n  const [names, setNames] = useState();\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/user/companyName-Job`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          //   const notify = () => toast(res.data.error);\r\n          //   notify();\r\n        } else {\r\n          console.log(res.data.Jobs);\r\n          setNames(res.data.Jobs);\r\n          console.log(names);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  console.log(names);\r\n  return (\r\n    <div>\r\n      <h1 className=\"companyHeading\">Jobs</h1>\r\n      <Row>\r\n        {names &&\r\n          names.map((name) => (\r\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\r\n              <div\r\n                className=\"NAME-company\"\r\n                onClick={() =>\r\n                  history.push(`/companyName-job/${name._id}`)\r\n                }\r\n              >\r\n                {name._id}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCompanyName;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\FreshersJobCompanyName.js",["400","401","402","403","404","405"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\BookmarkInternhsip.js",["406","407"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\BookmarkJob.js",["408","409"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\BookmarkFresherJob.js",["410"],{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","severity":1,"message":"416","line":49,"column":10,"nodeType":"417","messageId":"418","endLine":49,"endColumn":21},{"ruleId":"415","severity":1,"message":"416","line":84,"column":10,"nodeType":"417","messageId":"418","endLine":84,"endColumn":21},{"ruleId":"415","severity":1,"message":"416","line":114,"column":10,"nodeType":"417","messageId":"418","endLine":114,"endColumn":21},{"ruleId":"415","severity":1,"message":"416","line":48,"column":10,"nodeType":"417","messageId":"418","endLine":48,"endColumn":21},{"ruleId":"415","severity":1,"message":"419","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":18},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"422","line":6,"column":8,"nodeType":"417","messageId":"418","endLine":6,"endColumn":18},{"ruleId":"415","severity":1,"message":"423","line":7,"column":8,"nodeType":"417","messageId":"418","endLine":7,"endColumn":18},{"ruleId":"415","severity":1,"message":"424","line":8,"column":8,"nodeType":"417","messageId":"418","endLine":8,"endColumn":15},{"ruleId":"415","severity":1,"message":"425","line":9,"column":8,"nodeType":"417","messageId":"418","endLine":9,"endColumn":13},{"ruleId":"415","severity":1,"message":"426","line":11,"column":8,"nodeType":"417","messageId":"418","endLine":11,"endColumn":13},{"ruleId":"415","severity":1,"message":"416","line":98,"column":10,"nodeType":"417","messageId":"418","endLine":98,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":124,"column":6,"nodeType":"429","endLine":124,"endColumn":8,"suggestions":"430"},{"ruleId":"415","severity":1,"message":"416","line":98,"column":10,"nodeType":"417","messageId":"418","endLine":98,"endColumn":21},{"ruleId":"427","severity":1,"message":"431","line":182,"column":6,"nodeType":"429","endLine":182,"endColumn":8,"suggestions":"432"},{"ruleId":"415","severity":1,"message":"416","line":98,"column":10,"nodeType":"417","messageId":"418","endLine":98,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":124,"column":6,"nodeType":"429","endLine":124,"endColumn":8,"suggestions":"433"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"435","line":43,"column":6,"nodeType":"429","endLine":43,"endColumn":8,"suggestions":"436"},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"434","line":13,"column":18,"nodeType":"417","messageId":"418","endLine":13,"endColumn":26},{"ruleId":"427","severity":1,"message":"438","line":46,"column":6,"nodeType":"429","endLine":46,"endColumn":8,"suggestions":"439"},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"434","line":13,"column":18,"nodeType":"417","messageId":"418","endLine":13,"endColumn":26},{"ruleId":"427","severity":1,"message":"440","line":46,"column":6,"nodeType":"429","endLine":46,"endColumn":8,"suggestions":"441"},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"434","line":13,"column":18,"nodeType":"417","messageId":"418","endLine":13,"endColumn":26},{"ruleId":"427","severity":1,"message":"442","line":46,"column":6,"nodeType":"429","endLine":46,"endColumn":8,"suggestions":"443"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"435","line":45,"column":6,"nodeType":"429","endLine":45,"endColumn":8,"suggestions":"444"},{"ruleId":"415","severity":1,"message":"445","line":52,"column":11,"nodeType":"417","messageId":"418","endLine":52,"endColumn":12},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"435","line":45,"column":6,"nodeType":"429","endLine":45,"endColumn":8,"suggestions":"446"},{"ruleId":"415","severity":1,"message":"445","line":52,"column":11,"nodeType":"417","messageId":"418","endLine":52,"endColumn":12},{"ruleId":"415","severity":1,"message":"434","line":11,"column":18,"nodeType":"417","messageId":"418","endLine":11,"endColumn":26},{"ruleId":"427","severity":1,"message":"447","line":69,"column":6,"nodeType":"429","endLine":69,"endColumn":8,"suggestions":"448"},{"ruleId":"415","severity":1,"message":"449","line":4,"column":3,"nodeType":"417","messageId":"418","endLine":4,"endColumn":7},{"ruleId":"415","severity":1,"message":"450","line":6,"column":3,"nodeType":"417","messageId":"418","endLine":6,"endColumn":11},{"ruleId":"415","severity":1,"message":"451","line":7,"column":3,"nodeType":"417","messageId":"418","endLine":7,"endColumn":12},{"ruleId":"415","severity":1,"message":"452","line":8,"column":3,"nodeType":"417","messageId":"418","endLine":8,"endColumn":16},{"ruleId":"415","severity":1,"message":"421","line":15,"column":13,"nodeType":"417","messageId":"418","endLine":15,"endColumn":17},{"ruleId":"415","severity":1,"message":"434","line":21,"column":18,"nodeType":"417","messageId":"418","endLine":21,"endColumn":26},{"ruleId":"415","severity":1,"message":"434","line":17,"column":18,"nodeType":"417","messageId":"418","endLine":17,"endColumn":26},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"435","line":45,"column":6,"nodeType":"429","endLine":45,"endColumn":8,"suggestions":"453"},{"ruleId":"415","severity":1,"message":"445","line":49,"column":11,"nodeType":"417","messageId":"418","endLine":49,"endColumn":12},{"ruleId":"415","severity":1,"message":"434","line":11,"column":18,"nodeType":"417","messageId":"418","endLine":11,"endColumn":26},{"ruleId":"427","severity":1,"message":"447","line":69,"column":6,"nodeType":"429","endLine":69,"endColumn":8,"suggestions":"454"},{"ruleId":"415","severity":1,"message":"434","line":11,"column":18,"nodeType":"417","messageId":"418","endLine":11,"endColumn":26},{"ruleId":"427","severity":1,"message":"447","line":69,"column":6,"nodeType":"429","endLine":69,"endColumn":8,"suggestions":"455"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"425","line":9,"column":8,"nodeType":"417","messageId":"418","endLine":9,"endColumn":13},{"ruleId":"415","severity":1,"message":"456","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":14},{"ruleId":"415","severity":1,"message":"426","line":11,"column":8,"nodeType":"417","messageId":"418","endLine":11,"endColumn":13},{"ruleId":"415","severity":1,"message":"457","line":2,"column":8,"nodeType":"417","messageId":"418","endLine":2,"endColumn":17},{"ruleId":"415","severity":1,"message":"458","line":3,"column":8,"nodeType":"417","messageId":"418","endLine":3,"endColumn":17},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":8,"column":8,"nodeType":"417","messageId":"418","endLine":8,"endColumn":12},{"ruleId":"415","severity":1,"message":"457","line":2,"column":8,"nodeType":"417","messageId":"418","endLine":2,"endColumn":17},{"ruleId":"415","severity":1,"message":"458","line":3,"column":8,"nodeType":"417","messageId":"418","endLine":3,"endColumn":17},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":8,"column":8,"nodeType":"417","messageId":"418","endLine":8,"endColumn":12},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"426","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":13},{"ruleId":"415","severity":1,"message":"459","line":20,"column":13,"nodeType":"417","messageId":"418","endLine":20,"endColumn":25},{"ruleId":"415","severity":1,"message":"457","line":2,"column":8,"nodeType":"417","messageId":"418","endLine":2,"endColumn":17},{"ruleId":"415","severity":1,"message":"458","line":3,"column":8,"nodeType":"417","messageId":"418","endLine":3,"endColumn":17},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":8,"column":8,"nodeType":"417","messageId":"418","endLine":8,"endColumn":12},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"426","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":13},{"ruleId":"415","severity":1,"message":"459","line":20,"column":13,"nodeType":"417","messageId":"418","endLine":20,"endColumn":25},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"426","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":13},{"ruleId":"415","severity":1,"message":"459","line":20,"column":13,"nodeType":"417","messageId":"418","endLine":20,"endColumn":25},{"ruleId":"415","severity":1,"message":"420","line":4,"column":8,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"421","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":12},{"ruleId":"415","severity":1,"message":"426","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":13},{"ruleId":"415","severity":1,"message":"459","line":20,"column":13,"nodeType":"417","messageId":"418","endLine":20,"endColumn":25},{"ruleId":"415","severity":1,"message":"460","line":7,"column":17,"nodeType":"417","messageId":"418","endLine":7,"endColumn":24},{"ruleId":"415","severity":1,"message":"434","line":10,"column":18,"nodeType":"417","messageId":"418","endLine":10,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":215,"column":11,"nodeType":"463","endLine":215,"endColumn":50},{"ruleId":"415","severity":1,"message":"460","line":7,"column":17,"nodeType":"417","messageId":"418","endLine":7,"endColumn":24},{"ruleId":"415","severity":1,"message":"434","line":10,"column":18,"nodeType":"417","messageId":"418","endLine":10,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":209,"column":11,"nodeType":"463","endLine":209,"endColumn":50},{"ruleId":"461","severity":1,"message":"462","line":193,"column":13,"nodeType":"463","endLine":193,"endColumn":52},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"434","line":13,"column":18,"nodeType":"417","messageId":"418","endLine":13,"endColumn":26},{"ruleId":"427","severity":1,"message":"464","line":46,"column":6,"nodeType":"429","endLine":46,"endColumn":8,"suggestions":"465"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"466","line":71,"column":6,"nodeType":"429","endLine":71,"endColumn":8,"suggestions":"467"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"415","severity":1,"message":"468","line":10,"column":10,"nodeType":"417","messageId":"418","endLine":10,"endColumn":23},{"ruleId":"415","severity":1,"message":"434","line":14,"column":18,"nodeType":"417","messageId":"418","endLine":14,"endColumn":26},{"ruleId":"427","severity":1,"message":"469","line":45,"column":6,"nodeType":"429","endLine":45,"endColumn":20,"suggestions":"470"},{"ruleId":"415","severity":1,"message":"471","line":2,"column":17,"nodeType":"417","messageId":"418","endLine":2,"endColumn":27},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"472","line":3,"column":28,"nodeType":"417","messageId":"418","endLine":3,"endColumn":37},{"ruleId":"415","severity":1,"message":"473","line":4,"column":20,"nodeType":"417","messageId":"418","endLine":4,"endColumn":27},{"ruleId":"415","severity":1,"message":"474","line":4,"column":29,"nodeType":"417","messageId":"418","endLine":4,"endColumn":34},{"ruleId":"427","severity":1,"message":"475","line":34,"column":6,"nodeType":"429","endLine":34,"endColumn":8,"suggestions":"476"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"415","severity":1,"message":"471","line":2,"column":17,"nodeType":"417","messageId":"418","endLine":2,"endColumn":27},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"472","line":3,"column":28,"nodeType":"417","messageId":"418","endLine":3,"endColumn":37},{"ruleId":"415","severity":1,"message":"473","line":4,"column":20,"nodeType":"417","messageId":"418","endLine":4,"endColumn":27},{"ruleId":"415","severity":1,"message":"474","line":4,"column":29,"nodeType":"417","messageId":"418","endLine":4,"endColumn":34},{"ruleId":"427","severity":1,"message":"475","line":34,"column":6,"nodeType":"429","endLine":34,"endColumn":8,"suggestions":"477"},{"ruleId":"415","severity":1,"message":"471","line":2,"column":17,"nodeType":"417","messageId":"418","endLine":2,"endColumn":27},{"ruleId":"415","severity":1,"message":"437","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"472","line":3,"column":28,"nodeType":"417","messageId":"418","endLine":3,"endColumn":37},{"ruleId":"415","severity":1,"message":"473","line":4,"column":20,"nodeType":"417","messageId":"418","endLine":4,"endColumn":27},{"ruleId":"415","severity":1,"message":"474","line":4,"column":29,"nodeType":"417","messageId":"418","endLine":4,"endColumn":34},{"ruleId":"427","severity":1,"message":"475","line":34,"column":6,"nodeType":"429","endLine":34,"endColumn":8,"suggestions":"478"},{"ruleId":"415","severity":1,"message":"434","line":12,"column":18,"nodeType":"417","messageId":"418","endLine":12,"endColumn":26},{"ruleId":"427","severity":1,"message":"435","line":43,"column":6,"nodeType":"429","endLine":43,"endColumn":8,"suggestions":"479"},{"ruleId":"415","severity":1,"message":"434","line":11,"column":18,"nodeType":"417","messageId":"418","endLine":11,"endColumn":26},{"ruleId":"427","severity":1,"message":"447","line":42,"column":6,"nodeType":"429","endLine":42,"endColumn":8,"suggestions":"480"},{"ruleId":"415","severity":1,"message":"434","line":17,"column":18,"nodeType":"417","messageId":"418","endLine":17,"endColumn":26},"no-native-reassign",["481"],"no-negated-in-lhs",["482"],"no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'RemoveIcon' is defined but never used.","'AddIcon' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'job' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["483"],"React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.",["484"],["485"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'internships'. Either include it or remove the dependency array.",["486"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'industry' and 'internships'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'internships' and 'stream'. Either include them or remove the dependency array.",["488"],"React Hook useEffect has missing dependencies: 'internships' and 'location'. Either include them or remove the dependency array.",["489"],["490"],"'t' is assigned a value but never used.",["491"],"React Hook useEffect has a missing dependency: 'jobs'. Either include it or remove the dependency array.",["492"],"'Card' is defined but never used.","'Dropdown' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.",["493"],["494"],["495"],"'Skills' is defined but never used.","'Container' is defined but never used.","'TextField' is defined but never used.","'handleSubmit' is assigned a value but never used.","'Toaster' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'companyName' and 'internships'. Either include them or remove the dependency array.",["496"],"React Hook useEffect has missing dependencies: 'companyName' and 'jobs'. Either include them or remove the dependency array.",["497"],"'CompareArrows' is defined but never used.","React Hook useEffect has a missing dependency: 'companyName'. Either include it or remove the dependency array.",["498"],"'useContext' is defined but never used.","'useParams' is defined but never used.","'Spinner' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'names'. Either include it or remove the dependency array.",["499"],["500"],["501"],["502"],["503"],"no-global-assign","no-unsafe-negation",{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"504","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"509","fix":"517"},{"desc":"509","fix":"518"},{"desc":"519","fix":"520"},{"desc":"509","fix":"521"},{"desc":"519","fix":"522"},{"desc":"519","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"530","fix":"532"},{"desc":"530","fix":"533"},{"desc":"509","fix":"534"},{"desc":"519","fix":"535"},"Update the dependencies array to be: [job, postId]",{"range":"536","text":"537"},"Update the dependencies array to be: [internship, postId]",{"range":"538","text":"539"},{"range":"540","text":"537"},"Update the dependencies array to be: [internships]",{"range":"541","text":"542"},"Update the dependencies array to be: [industry, internships]",{"range":"543","text":"544"},"Update the dependencies array to be: [internships, stream]",{"range":"545","text":"546"},"Update the dependencies array to be: [internships, location]",{"range":"547","text":"548"},{"range":"549","text":"542"},{"range":"550","text":"542"},"Update the dependencies array to be: [jobs]",{"range":"551","text":"552"},{"range":"553","text":"542"},{"range":"554","text":"552"},{"range":"555","text":"552"},"Update the dependencies array to be: [companyName, internships]",{"range":"556","text":"557"},"Update the dependencies array to be: [companyName, jobs]",{"range":"558","text":"559"},"Update the dependencies array to be: [companyName, freshersJobs]",{"range":"560","text":"561"},"Update the dependencies array to be: [names]",{"range":"562","text":"563"},{"range":"564","text":"563"},{"range":"565","text":"563"},{"range":"566","text":"542"},{"range":"567","text":"552"},[2938,2940],"[job, postId]",[5514,5516],"[internship, postId]",[2953,2955],[1367,1369],"[internships]",[1476,1478],"[industry, internships]",[1468,1470],"[internships, stream]",[1476,1478],"[internships, location]",[1446,1448],[1442,1444],[2061,2063],"[jobs]",[1446,1448],[2079,2081],[2075,2077],[1484,1486],"[companyName, internships]",[2176,2178],"[companyName, jobs]",[1548,1562],"[companyName, freshersJobs]",[1070,1072],"[names]",[1042,1044],[1074,1076],[1385,1387],[1266,1268]]