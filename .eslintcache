[{"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js":"1","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js":"2","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js":"3","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js":"4","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"5","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"6","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js":"7","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js":"8","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"9","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"10","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js":"11","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"12","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"13","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js":"14","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"15","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"16","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js":"17","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js":"18","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"19","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js":"20","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js":"21","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js":"22","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js":"23","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js":"24"},{"size":517,"mtime":1617712689619,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1617712043731,"results":"27","hashOfConfig":"26"},{"size":5400,"mtime":1618153425149,"results":"28","hashOfConfig":"26"},{"size":212,"mtime":1618028176556,"results":"29","hashOfConfig":"26"},{"size":2196,"mtime":1617712043729,"results":"30","hashOfConfig":"26"},{"size":1754,"mtime":1617712043725,"results":"31","hashOfConfig":"26"},{"size":374,"mtime":1617772989927,"results":"32","hashOfConfig":"26"},{"size":10555,"mtime":1618039069289,"results":"33","hashOfConfig":"26"},{"size":11633,"mtime":1618038679891,"results":"34","hashOfConfig":"26"},{"size":11479,"mtime":1618038670691,"results":"35","hashOfConfig":"26"},{"size":8386,"mtime":1618146226185,"results":"36","hashOfConfig":"26"},{"size":7097,"mtime":1618146226182,"results":"37","hashOfConfig":"26"},{"size":14263,"mtime":1618146226175,"results":"38","hashOfConfig":"26"},{"size":17600,"mtime":1618146226187,"results":"39","hashOfConfig":"26"},{"size":6937,"mtime":1618146226170,"results":"40","hashOfConfig":"26"},{"size":4007,"mtime":1618146226167,"results":"41","hashOfConfig":"26"},{"size":7028,"mtime":1618146226178,"results":"42","hashOfConfig":"26"},{"size":10293,"mtime":1618146226180,"results":"43","hashOfConfig":"26"},{"size":8508,"mtime":1618147493821,"results":"44","hashOfConfig":"26"},{"size":4914,"mtime":1618159290519,"results":"45","hashOfConfig":"26"},{"size":3909,"mtime":1618146226165,"results":"46","hashOfConfig":"26"},{"size":3827,"mtime":1618148775740,"results":"47","hashOfConfig":"26"},{"size":1863,"mtime":1617712043732,"results":"48","hashOfConfig":"26"},{"size":14667,"mtime":1618164602228,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1gbhm1z",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js",[],["100","101"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["102"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form,  InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EmployerSignin() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          // toast(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"employee\"))\r\n          dispatch({ type: \"USER\", payload: {user: res.data.user , userType: \"employee\"} });\r\n          console.log(state);\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          // toast(\"Signin Successfull\");\r\n          const notify = () => toast('Signin Successfull');\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Form.Group\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.5vh\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/employer-signup\">\r\n                    <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                      Don't have an account? Sign up\r\n                    </a>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form.Group>\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerSignin;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js",["103","104","105","106","107"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js",["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":48,"column":10,"nodeType":"116","messageId":"117","endLine":48,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":5,"column":3,"nodeType":"116","messageId":"117","endLine":5,"endColumn":9},{"ruleId":"114","severity":1,"message":"119","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":8},{"ruleId":"114","severity":1,"message":"120","line":20,"column":18,"nodeType":"116","messageId":"117","endLine":20,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":105,"column":39,"nodeType":"127","messageId":"128","endLine":105,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":80,"column":10,"nodeType":"116","messageId":"117","endLine":80,"endColumn":21},{"ruleId":"121","severity":1,"message":"129","line":164,"column":6,"nodeType":"123","endLine":164,"endColumn":8,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'internships'. Either include it or remove the dependency array.","ArrayExpression",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [internships]",{"range":"139","text":"140"},"Update the dependencies array to be: [internship, postId]",{"range":"141","text":"142"},[1320,1322],"[internships]",[5176,5178],"[internship, postId]"]