[{"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/index.js":"1","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/reportWebVitals.js":"2","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/App.js":"3","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/reducers/userReducer.js":"4","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/StudentUpdateForm.js":"5","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/navbar/navbar.js":"6","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/login.js":"7","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/home/home.js":"8","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/footer/footer.js":"9","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/EmployerProfileScreen.js":"10","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/employerSignin.js":"11","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/EmployerUpdateForm.js":"12","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Error/Error.js":"13","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/privacy-policy/privacy-policy.js":"14","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/register.js":"15","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/about-us/about-us.js":"16","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/terms-condition/terms-condition.js":"17","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/contact-us/contact-us.js":"18","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/employerSignup.js":"19","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/AllInternships.js":"20","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByLocation.js":"21","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByIndustry.js":"22","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreatFreshersJob.js":"23","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreateInternship.js":"24","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByCompany.js":"25","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipGroupedByStream.js":"26","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreateJob.js":"27","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByStream.js":"28","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipCompanyNames.js":"29","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipsGroupedByIndustry.js":"30","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Profile.js":"31","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/AllJobs.js":"32","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByLocation.js":"33","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/BookmarkInternhsip.js":"34","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobCompanyName.js":"35","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByStream.js":"36","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByIndustry.js":"37","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsByCompanyName.js":"38","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/BookmarkJob.js":"39","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByIndustry.js":"40","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/AllFresherJob.js":"41","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FreshersJobByCompanyName.js":"42","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByLocation.js":"43","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByStream.js":"44","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FreshersJobCompanyName.js":"45","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/welcomeSignup/welcomeSignupEmployer.js":"46","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/BookmarkFresherJob.js":"47","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/welcomeSignup/welcomeSignup.js":"48","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/InternshipUpdate.js":"49","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/ProfileView.js":"50","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipsGroupedByLoction.js":"51","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/FresherJobUpdate.js":"52","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/JobUpdate.js":"53","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Start.js":"54","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/checkValidation.js":"55","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Experience.js":"56","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Project.js":"57","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/General.js":"58","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Education.js":"59","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/InternshipCard/InternshipCard.js":"60","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/FresherJobCard/FresherJobCard.js":"61","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/JobsCard/JobsCard.js":"62","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Label.js":"63","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Input.js":"64","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Other.js":"65","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Education.js":"66","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Experience.js":"67","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Skills.js":"68","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Project.js":"69","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Volunteer.js":"70","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Achievments.js":"71"},{"size":500,"mtime":1621591151549,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":1621591151549,"results":"74","hashOfConfig":"73"},{"size":14196,"mtime":1627530438427,"results":"75","hashOfConfig":"73"},{"size":204,"mtime":1621591151549,"results":"76","hashOfConfig":"73"},{"size":11196,"mtime":1622481821020,"results":"77","hashOfConfig":"73"},{"size":7637,"mtime":1627286825025,"results":"78","hashOfConfig":"73"},{"size":8153,"mtime":1621591151549,"results":"79","hashOfConfig":"73"},{"size":10655,"mtime":1625571066575,"results":"80","hashOfConfig":"73"},{"size":7706,"mtime":1627530438427,"results":"81","hashOfConfig":"73"},{"size":6725,"mtime":1622481821016,"results":"82","hashOfConfig":"73"},{"size":8297,"mtime":1621591151545,"results":"83","hashOfConfig":"73"},{"size":8399,"mtime":1622481821016,"results":"84","hashOfConfig":"73"},{"size":602,"mtime":1622089916695,"results":"85","hashOfConfig":"73"},{"size":1754,"mtime":1621591151545,"results":"86","hashOfConfig":"73"},{"size":17108,"mtime":1621591151549,"results":"87","hashOfConfig":"73"},{"size":3953,"mtime":1625570709160,"results":"88","hashOfConfig":"73"},{"size":2196,"mtime":1621591151549,"results":"89","hashOfConfig":"73"},{"size":6706,"mtime":1621591151545,"results":"90","hashOfConfig":"73"},{"size":13858,"mtime":1621591151545,"results":"91","hashOfConfig":"73"},{"size":3797,"mtime":1622456657948,"results":"92","hashOfConfig":"73"},{"size":3983,"mtime":1622192321173,"results":"93","hashOfConfig":"73"},{"size":3983,"mtime":1622192321173,"results":"94","hashOfConfig":"73"},{"size":13846,"mtime":1621591151545,"results":"95","hashOfConfig":"73"},{"size":15700,"mtime":1621591151545,"results":"96","hashOfConfig":"73"},{"size":3990,"mtime":1622456657948,"results":"97","hashOfConfig":"73"},{"size":4360,"mtime":1622192321173,"results":"98","hashOfConfig":"73"},{"size":14770,"mtime":1621591151545,"results":"99","hashOfConfig":"73"},{"size":3973,"mtime":1622192321173,"results":"100","hashOfConfig":"73"},{"size":1607,"mtime":1622456657948,"results":"101","hashOfConfig":"73"},{"size":4296,"mtime":1622192321173,"results":"102","hashOfConfig":"73"},{"size":7091,"mtime":1622485189351,"results":"103","hashOfConfig":"73"},{"size":3423,"mtime":1622456657948,"results":"104","hashOfConfig":"73"},{"size":4754,"mtime":1622192321173,"results":"105","hashOfConfig":"73"},{"size":3822,"mtime":1622456657948,"results":"106","hashOfConfig":"73"},{"size":1558,"mtime":1622456657948,"results":"107","hashOfConfig":"73"},{"size":4748,"mtime":1622192321173,"results":"108","hashOfConfig":"73"},{"size":4804,"mtime":1622192321173,"results":"109","hashOfConfig":"73"},{"size":4533,"mtime":1622456657948,"results":"110","hashOfConfig":"73"},{"size":3647,"mtime":1622456657948,"results":"111","hashOfConfig":"73"},{"size":3281,"mtime":1622456657948,"results":"112","hashOfConfig":"73"},{"size":2941,"mtime":1622456657948,"results":"113","hashOfConfig":"73"},{"size":3046,"mtime":1622456657948,"results":"114","hashOfConfig":"73"},{"size":3281,"mtime":1622456657948,"results":"115","hashOfConfig":"73"},{"size":3272,"mtime":1622456657948,"results":"116","hashOfConfig":"73"},{"size":1613,"mtime":1622456657948,"results":"117","hashOfConfig":"73"},{"size":830,"mtime":1621591151549,"results":"118","hashOfConfig":"73"},{"size":3842,"mtime":1622456657948,"results":"119","hashOfConfig":"73"},{"size":807,"mtime":1621591151549,"results":"120","hashOfConfig":"73"},{"size":15004,"mtime":1622456657952,"results":"121","hashOfConfig":"73"},{"size":2290,"mtime":1622518298455,"results":"122","hashOfConfig":"73"},{"size":4366,"mtime":1622192321173,"results":"123","hashOfConfig":"73"},{"size":12519,"mtime":1621591151545,"results":"124","hashOfConfig":"73"},{"size":13369,"mtime":1621591151545,"results":"125","hashOfConfig":"73"},{"size":4978,"mtime":1622485189351,"results":"126","hashOfConfig":"73"},{"size":1808,"mtime":1621591151549,"results":"127","hashOfConfig":"73"},{"size":1427,"mtime":1622518298455,"results":"128","hashOfConfig":"73"},{"size":1369,"mtime":1622518298455,"results":"129","hashOfConfig":"73"},{"size":1564,"mtime":1622485189351,"results":"130","hashOfConfig":"73"},{"size":1583,"mtime":1622518298455,"results":"131","hashOfConfig":"73"},{"size":6655,"mtime":1622456657952,"results":"132","hashOfConfig":"73"},{"size":6712,"mtime":1622456657952,"results":"133","hashOfConfig":"73"},{"size":6826,"mtime":1622456657952,"results":"134","hashOfConfig":"73"},{"size":194,"mtime":1621591151545,"results":"135","hashOfConfig":"73"},{"size":174,"mtime":1621591151545,"results":"136","hashOfConfig":"73"},{"size":2112,"mtime":1622481821020,"results":"137","hashOfConfig":"73"},{"size":5296,"mtime":1622518298455,"results":"138","hashOfConfig":"73"},{"size":4892,"mtime":1622481821020,"results":"139","hashOfConfig":"73"},{"size":2099,"mtime":1622481821020,"results":"140","hashOfConfig":"73"},{"size":4490,"mtime":1622481821020,"results":"141","hashOfConfig":"73"},{"size":2201,"mtime":1622481821020,"results":"142","hashOfConfig":"73"},{"size":2159,"mtime":1622481821020,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5zmik6",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/index.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/reportWebVitals.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/App.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/reducers/userReducer.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/StudentUpdateForm.js",["337","338","339","340"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./register.css\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nconst StudentUpdateForm = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [student, setStudent] = useState({\n    personName: \"\",\n    email: \"\",\n\n    contact: \"\",\n    branch: \"\",\n    year: \"\",\n    degree: \"\",\n    institutionName: \"\",\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/student/studentfetch/${state.user._id}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          setStudent(res.data);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  const submitStudentDetails = (e) => {\n    e.preventDefault();\n    const {\n      personName,\n      email,\n      contact,\n      branch,\n      year,\n      degree,\n      institutionName,\n    } = student;\n    console.log(student);\n    axios({\n      method: \"PATCH\",\n      url: \"http://localhost:5000/student/update\",\n      data: {\n        personName: personName,\n        email: email,\n        contact: contact,\n        branch: branch,\n        year: year,\n        degree: degree,\n        institutionName: institutionName,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res.data.user);\n        // alert(res.data.message);\n        const notify = () => toast(res.data.message);\n        notify();\n        if (res.data.user) {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // setFormValues(initialState);\n  };\n\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n        <Toaster />\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#6EE2CD\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Student Details Update\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitStudentDetails(e)}>\n              {/* Name of the student */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.personName.valid &&\n                  //   formValues.personName.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  name=\"personName\"\n                  value={student.personName}\n                  onChange={(e) =>\n                    setStudent({ ...student, personName: e.target.value })\n                  }\n                  required\n                />\n                {/* {formValues.personName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.personName.errorMessage}\n                  </span>\n                )} */}\n              </Form.Group>\n\n              {/* Email address */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.email.valid && formValues.email.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={student.email}\n                  onChange={(e) =>\n                    setStudent({ ...student, email: e.target.value })\n                  }\n                  required\n                />\n                {/* {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )} */}\n              </Form.Group>\n\n              {/* Contact Number */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.contact.valid && formValues.contact.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"number\"\n                  placeholder=\"Enter your contact number\"\n                  name=\"contact\"\n                  value={student.contact}\n                  onChange={(e) =>\n                    setStudent({ ...student, contact: e.target.value })\n                  }\n                  required\n                  maxLength=\"10\"\n                  minLength=\"10\"\n                />\n                {/* {formValues.contact.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.contact.errorMessage}\n                  </span>\n                )} */}\n              </Form.Group>\n\n              {/* Degree */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which degree you are pursuing?\n                </Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.degree.valid && formValues.degree.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter complete name of your degree\"\n                  name=\"degree\"\n                  value={student.degree}\n                  onChange={(e) =>\n                    setStudent({ ...student, degree: e.target.value })\n                  }\n                  required\n                />\n                {/* {formValues.degree.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.degree.errorMessage}\n                  </span>\n                )} */}\n              </Form.Group>\n\n              {/* College Name */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicName\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  College Name\n                </Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.institutionName.valid &&\n                  //   formValues.institutionName.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Your college name\"\n                  name=\"institutionName\"\n                  value={student.institutionName}\n                  onChange={(e) =>\n                    setStudent({ ...student, institutionName: e.target.value })\n                  }\n                  required\n                />\n                {/* {formValues.institutionName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.institutionName.errorMessage}\n                  </span>\n                )} */}\n              </Form.Group>\n\n              {/* Branch of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Field of study\n                </Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.branch.valid && formValues.branch.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your field of study\"\n                  name=\"branch\"\n                  value={student.branch}\n                  required\n                  onChange={(e) =>\n                    setStudent({ ...student, branch: e.target.value })\n                  }\n                />\n                {/* {formValues.branch.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.branch.errorMessage}\n                  </span>\n                )} */}\n              </Form.Group>\n\n              {/* Year of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which year of college you are in?\n                </Form.Label>\n                <Form.Control\n                  // className={`${\n                  //   !formValues.year.valid && formValues.year.touched\n                  //     ? \"input-error\"\n                  //     : \"\"\n                  // }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your college year\"\n                  name=\"year\"\n                  value={student.year}\n                  required\n                  onChange={(e) =>\n                    setStudent({ ...student, year: e.target.value })\n                  }\n                />\n                {/* {formValues.year.errorMessage && (\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\n                )} */}\n              </Form.Group>\n\n              <Button\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Update Details\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\nexport default StudentUpdateForm;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/navbar/navbar.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/login.js",["341"],"import React, { useContext, useState } from \"react\";\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport axios from \"axios\";\nimport \"./register.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { UserContext } from \"../../App\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nfunction LoginForm() {\n  const { dispatch } = useContext(UserContext);\n  const history = useHistory();\n\n  //creating a dicitionary for every field of the form\n  const initialState = {\n    email: {\n      //value of the input field\n      value: \"\",\n      //rules to check while validating the input\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      //error messages to show in case any validation rule is not followed\n      errorMessage: \"\",\n      // boolean value to check if the whole input field is valid or not\n      valid: false,\n      //boolean value to check if the input field is touched or not\n      touched: false,\n    },\n\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    showPassword: false,\n  };\n  const [formValues, setFormValues] = useState(initialState);\n\n  const [formIsValid ,setFormIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitSignin = (e) => {\n    e.preventDefault();\n    const { email, password } = formValues;\n    axios\n      .post(\"http://localhost:5000/student/signin\", {\n        email: email.value,\n        password: password.value,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          localStorage.setItem(\"jwt\", res.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n          localStorage.setItem(\"type\", JSON.stringify(\"student\"));\n          dispatch({ type: \"USER\", payload: { user: res.data.user , userType: \"student\"} });\n          console.log(\n            \"Token: \",\n            res.data.token,\n            \"User Details: \",\n            res.data.user\n          );\n          // alert(\"Signin Successfull\");\n          const notify = () => toast(\"Signin Successfull\");\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n    setFormValues(initialState);\n  };\n\n  const togglePasswordVisiblity = () => {\n    // to handle visibility of passsword\n\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\n  };\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n        <Toaster />\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Student Signin\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignin(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                    type={formValues.showPassword ? \"text\" : \"password\"}\n                    className={`${\n                      !formValues.password.valid && formValues.password.touched\n                        ? \"input-error\"\n                        : \"\"\n                    }`}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={formValues.password.value}\n                    onChange={handleChange}\n                  />\n                  {formValues.password.errorMessage && (\n                    <span className=\"error\">\n                      {formValues.password.errorMessage}\n                    </span>\n                  )}\n                  <InputGroup.Append>\n                    <InputGroup.Text\n                      style={{\n                        borderColor: \"#ffc107\",\n                        color: \"#000000\",\n                        height: \"37px\",\n                        width: \"28px\",\n                        paddingLeft: \"1px\",\n                        paddingRight: \"1px\",\n                      }}\n                    >\n                      <IconButton\n                        style={{ width: \"25px\" }}\n                        onClick={togglePasswordVisiblity}\n                      >\n                        {formValues.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n              <Form.Group\n                style={{\n                  textAlign: \"left\",\n                  fontSize: \"1.5vh\",\n                  marginTop: \"10px\",\n                }}\n              >\n                <Link to=\"/student-signup\">\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\n                    Don't have an account? Sign up\n                  </a>\n                </Link>\n              </Form.Group>\n\n              <Button\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Signin\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n}\nexport default LoginForm;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/home/home.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/footer/footer.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/EmployerProfileScreen.js",["342","343"],"import axios from \"axios\";\nimport React, { useEffect, useContext, useState } from \"react\";\n\nimport { Spinner, Alert } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\nimport \"./EmployerProfileScreen.css\";\n\nconst EmployerProfileScreen = ({ history }) => {\n  const { state, dispatch } = useContext(UserContext);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log(state.user._id);\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/employer/employerfetch/${state.user._id}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setLoading(false);\n        console.log(e);\n      });\n  }, []);\n  \n  const deleteaccount = () => {\n    axios({\n      method: \"delete\",\n      url: `http://localhost:5000/employer/deleteEmployer`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"jwt\");\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"w-100 h-100\">\n      {loading ? (\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          variant=\"primary\"\n          className=\"mt-5\"\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : (\n        <div\n          className=\"row\"\n          style={{\n            fontFamily: \"Arial, Helvetica, sans-serif\",\n          }}\n        >\n          <div className=\"col-lg-4 col-md-12\">\n            <div\n              className=\"employer-main-profile\"\n              style={{ borderRight: \"1px solid yellow\" }}\n            >\n              <div\n                className=\"container\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  opacity: 1,\n                  width: \"75%\",\n                }}\n              >\n                <h2 className=\"employer-profile-heading mb-5\">My Profile</h2>\n                <div className=\"employer-secondary-profile\">\n                  <ul>\n                    <li>\n                      <span>\n                        <i class=\"fas fa-user\"></i> Name :{\" \"}\n                      </span>\n                      {data.employer.personName && data.employer.personName}\n                    </li>\n                    <li>\n                      <span>\n                        <i class=\"fas fa-id-card\"></i> Contact :{\" \"}\n                      </span>\n                      {data.employer.contact && data.employer.contact}\n                    </li>\n                    <li>\n                      <span>\n                        <i class=\"fas fa-envelope\"></i> Email :{\" \"}\n                      </span>\n                      {data.employer.email}\n                    </li>\n                    <li>\n                      <span>\n                        <i class=\"fas fa-building\"></i> Company Name :{\" \"}\n                      </span>\n                      {data.employer.companyName}\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"employer-secondary-profile-buttons mt-5\">\n                  <Link\n                    to=\"/employer-update\"\n                    className=\"btn btn-outline-primary btn-block\"\n                  >\n                    Edit Account\n                  </Link>\n                  <div\n                    className=\"btn btn-outline-danger btn-block\"\n                    onClick={deleteaccount}\n                  >\n                    Delete Account\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-8 col-md-12 mt-5\">\n            <div className=\"row w-100 mb-5\">\n              <h3 className=\"mx-auto employer-profile-heading\">\n                My Created InternShips\n              </h3>\n            </div>\n            <div className=\"row w-100 mb-5\">\n              {data.internships.length > 0 ? (\n                data.internships.map((intern) => (\n                  <div className=\"col-lg-6 col-md-12\">\n                    <InternshipCard\n                      internship={intern}\n                      userId={state.user._id}\n                      key={intern._id}\n                    />\n                  </div>\n                ))\n              ) : (\n                <Alert className=\"w-100\" variant=\"primary\">\n                  No internship created by you\n                </Alert>\n              )}\n            </div>\n            <div className=\"row w-100 mb-5 \">\n              <h3 className=\"mx-auto employer-profile-heading\">\n                My Created Jobs\n              </h3>\n            </div>\n            <div className=\"row w-100 mb-5\">\n              {data.jobs.length > 0 ? (\n                data.jobs.map((intern) => (\n                  <div className=\"col-lg-6 col-md-12\">\n                    <JobsCard\n                      job={intern}\n                      userId={state.user._id}\n                      key={intern._id}\n                    />\n                  </div>\n                ))\n              ) : (\n                <Alert className=\"w-100\" variant=\"primary\">\n                  No jobs created by you\n                </Alert>\n              )}\n            </div>\n            <div className=\"row w-100 mb-5\">\n              <h3 className=\"mx-auto employer-profile-heading\">\n                My Created FresherJobs\n              </h3>\n            </div>\n            <div className=\"row w-100 mb-5\">\n              {data.fresherJobs.length > 0 ? (\n                data.fresherJobs.map((intern) => (\n                  <div className=\"col-lg-6 col-md-12\">\n                    <FresherJobCard\n                      fresherjob={intern}\n                      userId={state.user._id}\n                      key={intern._id}\n                    />\n                  </div>\n                ))\n              ) : (\n                <Alert className=\"w-100\" variant=\"primary\">\n                  No fresherJobs created by you\n                </Alert>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(EmployerProfileScreen);\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/employerSignin.js",["344"],"import React, { useContext, useState } from \"react\";\nimport { Button, Card, Form,  InputGroup } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport axios from \"axios\";\nimport \"./employer.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { UserContext } from \"../../App\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nfunction EmployerSignin() {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n\n  const initialState = {\n    email: {\n      //value of the input field\n      value: \"\",\n      //rules to check while validating the input\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      //error messages to show in case any validation rule is not followed\n      errorMessage: \"\",\n      // boolean value to check if the whole input field is valid or not\n      valid: false,\n      //boolean value to check if the input field is touched or not\n      touched: false,\n    },\n\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    showPassword: false,\n  };\n  const [formValues, setFormValues] = useState(initialState);\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitSignin = (e) => {\n    e.preventDefault();\n    const { email, password } = formValues;\n    axios\n      .post(\"http://localhost:5000/employer/signin\", {\n        email: email.value,\n        password: password.value,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          // toast(res.data.error);\n          console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          localStorage.setItem(\"jwt\", res.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n          localStorage.setItem(\"type\", JSON.stringify(\"employee\"))\n          dispatch({ type: \"USER\", payload: {user: res.data.user , userType: \"employee\"} });\n          console.log(state);\n          console.log(\n            \"Token: \",\n            res.data.token,\n            \"User Details: \",\n            res.data.user\n          );\n          // alert(\"Signin Successfull\");\n          // toast(\"Signin Successfull\");\n          const notify = () => toast('Signin Successfull');\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n    setFormValues(initialState);\n  };\n\n  const togglePasswordVisiblity = () => {\n    // to handle visibility of passsword\n\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\n  };\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n      <Toaster />\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className=\"employer_form_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Employer Signin\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignin(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n\n                <InputGroup>\n                  <Form.Control\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                    type={formValues.showPassword ? \"text\" : \"password\"}\n                    className={`${\n                      !formValues.password.valid && formValues.password.touched\n                        ? \"input-error\"\n                        : \"\"\n                    }`}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={formValues.password.value}\n                    onChange={handleChange}\n                  />\n                  {formValues.password.errorMessage && (\n                    <span className=\"error\">\n                      {formValues.password.errorMessage}\n                    </span>\n                  )}\n                  <InputGroup.Append>\n                    <InputGroup.Text\n                      style={{\n                        borderColor: \"#ffc107\",\n                        color: \"#000000\",\n                        height: \"37px\",\n                        width: \"28px\",\n                        paddingLeft: \"1px\",\n                        paddingRight: \"1px\",\n                      }}\n                    >\n                      <IconButton\n                        style={{ width: \"25px\" }}\n                        onClick={togglePasswordVisiblity}\n                      >\n                        {formValues.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Group\n                  style={{\n                    textAlign: \"left\",\n                    fontSize: \"1.5vh\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <Link to=\"/employer-signup\">\n                    <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\n                      Don't have an account? Sign up\n                    </a>\n                  </Link>\n                </Form.Group>\n              </Form.Group>\n              <Button\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Signin\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default EmployerSignin;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/EmployerUpdateForm.js",["345","346","347","348","349"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Form, Card, InputGroup, Spinner } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./employer.css\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nconst EmployerUpdateForm = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [employer, setEmployer] = useState({\n    personName: \"\",\n    email: \"\",\n    contact: \"\",\n    companyName: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/employer/employerfetch/${state.user._id}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n          setLoading(false);\n        } else {\n          console.log(res.data)\n          setEmployer(res.data.employer);\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n        setLoading(false);\n      });\n  }, []);\n\n  const submitEmployerDetails = (e) => {\n    e.preventDefault();\n    const { personName, email, contact, companyName } = employer;\n    // console.log(employer);\n    axios({\n      method: \"PATCH\",\n      url: \"http://localhost:5000/employer/update\",\n      data: {\n        personName: personName,\n        email: email,\n        contact: contact,\n        companyName: companyName,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        // console.log(res.data.user);\n        // alert(res.data.message);\n        const notify = () => toast(res.data.message);\n        notify();\n        if (res.data.user) {\n          const user = localStorage.setItem(\n            \"user\",\n            JSON.stringify(res.data.user)\n          );\n\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // setFormValues(initialState);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : (\n        <div style={{ padding: \"4vh 0\" }}>\n          <Toaster />\n          <Card\n            style={{\n              width: \"40vw\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: \"4vh\",\n              marginBottom: \"4vh\",\n              backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n            }}\n            className=\"register_card_custom\"\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#6c6c6c\",\n                color: \"#6EE2CD\",\n                fontFamily: '\"Merriweather\", serif',\n                fontSize: \"1.25rem\",\n              }}\n              as=\"h5\"\n            >\n              Employer Details Update\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={(e) => submitEmployerDetails(e)}>\n                {/* Name of the employee */}\n                <Form.Group style={{ textAlign: \"left\" }}>\n                  <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                  <Form.Control\n                    // className={`${\n                    //   !formValues.personName.valid &&\n                    //   formValues.personName.touched\n                    //     ? \"input-error\"\n                    //     : \"\"\n                    // }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"text\"\n                    placeholder=\"Enter your name\"\n                    name=\"personName\"\n                    value={employer.personName}\n                    onChange={(e) =>\n                      setEmployer({ ...employer, personName: e.target.value })\n                    }\n                    required\n                  />\n                  {/* {formValues.personName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.personName.errorMessage}\n                  </span>\n                )} */}\n                </Form.Group>\n\n                {/* Email address */}\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicEmail\"\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Email address\n                  </Form.Label>\n                  <Form.Control\n                    // className={`${\n                    //   !formValues.email.valid && formValues.email.touched\n                    //     ? \"input-error\"\n                    //     : \"\"\n                    // }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    name=\"email\"\n                    value={employer.email}\n                    onChange={(e) =>\n                      setEmployer({ ...employer, email: e.target.value })\n                    }\n                    required\n                  />\n                  {/* {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )} */}\n                </Form.Group>\n\n                {/* Contact Number */}\n                <Form.Group style={{ textAlign: \"left\" }}>\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Contact\n                  </Form.Label>\n                  <Form.Control\n                    // className={`${\n                    //   !formValues.contact.valid && formValues.contact.touched\n                    //     ? \"input-error\"\n                    //     : \"\"\n                    // }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"number\"\n                    placeholder=\"Enter your contact number\"\n                    name=\"contact\"\n                    value={employer.contact}\n                    onChange={(e) =>\n                      setEmployer({ ...employer, contact: e.target.value })\n                    }\n                    required\n                    maxLength=\"10\"\n                    minLength=\"10\"\n                  />\n                  {/* {formValues.contact.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.contact.errorMessage}\n                  </span>\n                )} */}\n                </Form.Group>\n\n                {/* Degree */}\n                <Form.Group style={{ textAlign: \"left\" }}>\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Company Name\n                  </Form.Label>\n                  <Form.Control\n                    // className={`${\n                    //   !formValues.degree.valid && formValues.degree.touched\n                    //     ? \"input-error\"\n                    //     : \"\"\n                    // }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"text\"\n                    placeholder=\"Enter Company Name\"\n                    name=\"companyName\"\n                    value={employer.companyName}\n                    onChange={(e) =>\n                      setEmployer({ ...employer, companyName: e.target.value })\n                    }\n                    required\n                  />\n                  {/* {formValues.degree.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.degree.errorMessage}\n                  </span>\n                )} */}\n                </Form.Group>\n\n                <Button\n                  style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                >\n                  Update Details\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      )}\n    </>\n  );\n};\nexport default EmployerUpdateForm;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Error/Error.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/privacy-policy/privacy-policy.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student/register.js",["350"],"import React, { useState } from \"react\";\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport \"./register.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst StudentSignup = () => {\n  const history = useHistory();\n  //creating a dicitionary for every field of the form\n  const initialState = {\n    personName: {\n      //value of the input field\n      value: \"\",\n      //rules to check while validating the input\n      validation: {\n        required: true,\n        minLength: 5,\n      },\n      //error messages to show in case any validation rule is not followed\n      errorMessage: \"\",\n      // boolean value to check if the whole input field is valid or not\n      valid: false,\n      //boolean value to check if the input field is touched or not\n      touched: false,\n    },\n    email: {\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    passwordConfirmation: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n        checkPassword: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    showPassword: false,\n    contact: {\n      value: \"\",\n      validation: {\n        required: true,\n        Length: 10,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    degree: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    institutionName: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    branch: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    year: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [signupError, setSignupError] = useState(null);\n\n  const [formIsValid ,setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const passwordIsValidChecker = () => {\n    const { password, passwordConfirmation } = formValues;\n    return password.value === passwordConfirmation.value;\n  };\n\n  const submitSignup = (e) => {\n    const {\n      personName,\n      email,\n      password,\n      passwordConfirmation,\n      contact,\n      branch,\n      year,\n      degree,\n      institutionName,\n    } = formValues;\n\n    e.preventDefault();\n    if (!passwordIsValidChecker()) {\n      setSignupError(\"Passwords do not match\");\n      return;\n    } else {\n      axios\n        .post(\"http://localhost:5000/student/signup\", {\n          personName: personName.value,\n          email: email.value,\n          password: password.value,\n          contact: contact.value,\n          passwordConfirmation: passwordConfirmation.value,\n          branch: branch.value,\n          year: year.value,\n          degree: degree.value,\n          institutionName: institutionName.value,\n        })\n        .then((res) => {\n          console.log(res.data.user);\n          // alert(res.data.message);\n          const notify = () => toast(res.data.message);\n          notify();\n          if(res.data.user){\n            history.pushState(\"/student-login\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setFormValues(initialState);\n  };\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \n    \n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\n    \n  };\n\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n      <Toaster />\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#6EE2CD\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Student Signup\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignup(e)}>\n              {/* Name of the student */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.personName.valid &&\n                    formValues.personName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  name=\"personName\"\n                  value={formValues.personName.value}\n                  onChange={handleChange}\n                />\n                {formValues.personName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.personName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Email address */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              {/*  Password */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n                <InputGroup>\n                <Form.Control\n                  className={`${\n                    !formValues.password.valid && formValues.password.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type={formValues.showPassword?\"text\":\"password\"}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={formValues.password.value}\n                  onChange={handleChange}\n                />\n                {formValues.password.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.password.errorMessage}\n                  </span>\n                )}\n                <InputGroup.Append>\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\n                        <IconButton style={{width: \"25px\"}}\n                          onClick={togglePasswordVisiblity}\n                        >\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton> \n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n\n              {/* Confirm Password */}\n              <Form.Group\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Confirm Password\n                </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    className={`${\n                      !formValues.passwordConfirmation.valid &&\n                      formValues.passwordConfirmation.touched\n                        ? \"input-error\"\n                        : \"\"\n                    }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"password\"\n                    placeholder=\"Re-enter Password\"\n                    name=\"passwordConfirmation\"\n                    value={formValues.passwordConfirmation.value}\n                    onChange={handleChange}\n                  />\n                  {formValues.passwordConfirmation.errorMessage && (\n                    <span className=\"error\">\n                      {formValues.passwordConfirmation.errorMessage}\n                    </span>\n                  )}\n                  <InputGroup.Append>\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\n                      <IconButton style={{width: \"25px\"}}\n                          onClick={togglePasswordVisiblity}\n                      >\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton> \n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n\n              {/* Contact Number */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.contact.valid && formValues.contact.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"number\"\n                  placeholder=\"Enter your contact number\"\n                  name=\"contact\"\n                  value={formValues.contact.value}\n                  onChange={handleChange}\n                />\n                {formValues.contact.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.contact.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Degree */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which degree you are pursuing?\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.degree.valid && formValues.degree.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter complete name of your degree\"\n                  name=\"degree\"\n                  value={formValues.degree.value}\n                  onChange={handleChange}\n                />\n                {formValues.degree.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.degree.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* College Name */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicName\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  College Name\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.institutionName.valid &&\n                    formValues.institutionName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Your college name\"\n                  name=\"institutionName\"\n                  value={formValues.institutionName.value}\n                  onChange={handleChange}\n                />\n                {formValues.institutionName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.institutionName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Branch of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Field of study\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.branch.valid && formValues.branch.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your field of study\"\n                  name=\"branch\"\n                  value={formValues.branch.value}\n                  onChange={handleChange}\n                />\n                {formValues.branch.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.branch.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Year of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which year of college you are in?\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.year.valid && formValues.year.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your college year\"\n                  name=\"year\"\n                  value={formValues.year.value}\n                  onChange={handleChange}\n                />\n                {formValues.year.errorMessage && (\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              {/* Already a user? */}\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\n                <Link to=\"/student-login\">\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\n                    Already have an account? Sign in\n                  </a>\n                </Link>\n              </Form.Group>\n\n              {signupError ? (\n                <Form.Text\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\n                  className=\"text-danger\"\n                >\n                  {signupError}\n                </Form.Text>\n              ) : null}\n              <Button\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Register\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\nexport default StudentSignup;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/about-us/about-us.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/terms-condition/terms-condition.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/contact-us/contact-us.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/employer/employerSignup.js",["351"],"import React, { useState } from \"react\";\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport \"./employer.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst EmployerSignup = () => {\n  const history = useHistory();\n  //listing initial states of the fields present in the form\n  const initialState = {\n    companyName: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 3,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    email: {\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    passwordConfirmation: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n        checkPassword: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    showPassword: false,\n\n    contact: {\n      value: \"\",\n      validation: {\n        required: true,\n        Length: 10,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    personName: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 5,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [signupError, setSignupError] = useState(null);\n\n  const [formIsValid ,setFormIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const passwordIsValidChecker = () => {\n    const { password, passwordConfirmation } = formValues;\n    return password.value === passwordConfirmation.value;\n  };\n\n  const submitSignup = (e) => {\n    const {\n      companyName,\n      email,\n      password,\n      passwordConfirmation,\n      personName,\n      contact,\n    } = formValues;\n\n    e.preventDefault();\n    if (!passwordIsValidChecker()) {\n      setSignupError(\"Passwords do not match\");\n      return;\n    } else {\n      axios\n        .post(\"http://localhost:5000/employer/signup\", {\n          personName: personName.value,\n          email: email.value,\n          password: password.value,\n          contact: contact.value,\n          passwordConfirmation: passwordConfirmation.value,\n          companyName: companyName.value,\n        })\n        .then((res) => {\n          console.log(res.data.user);\n          // alert(res.data.message);\n          const notify = () => toast(res.data.message);\n          notify();\n          if(res.data.user){\n            history.push(\"/employer-login\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setFormValues(initialState);\n  };\n  const togglePasswordVisiblity = () => {\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\n  };\n\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n        <Toaster />\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n          }}\n          className=\"employer_form_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#6EE2CD\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Employer Signup\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignup(e)}>\n              {/* Name of the company */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Company Name\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.companyName.valid &&\n                    formValues.companyName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter the company name\"\n                  name=\"companyName\"\n                  value={formValues.companyName.value}\n                  onChange={handleChange}\n                />\n                {formValues.companyName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.companyName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/*Email  */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              {/* Password */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    className={`${\n                      !formValues.password.valid && formValues.password.touched\n                        ? \"input-error\"\n                        : \"\"\n                    }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type={formValues.showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={formValues.password.value}\n                    onChange={handleChange}\n                  />\n                  {formValues.password.errorMessage && (\n                    <span className=\"error\">\n                      {formValues.password.errorMessage}\n                    </span>\n                  )}\n                  <InputGroup.Append>\n                    <InputGroup.Text\n                      style={{\n                        borderColor: \"#6EE2CD\",\n                        color: \"#000000\",\n                        height: \"37px\",\n                        width: \"28px\",\n                        paddingLeft: \"1px\",\n                        paddingRight: \"1px\",\n                      }}\n                    >\n                      <IconButton\n                        style={{ width: \"25px\" }}\n                        onClick={togglePasswordVisiblity}\n                      >\n                        {formValues.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n              {/* Password Confirmation */}\n              <Form.Group\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Confirm Password\n                </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    className={`${\n                      !formValues.passwordConfirmation.valid &&\n                      formValues.passwordConfirmation.touched\n                        ? \"input-error\"\n                        : \"\"\n                    }`}\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"password\"\n                    placeholder=\"Re-enter Password\"\n                    name=\"passwordConfirmation\"\n                    value={formValues.passwordConfirmation.value}\n                    onChange={handleChange}\n                  />\n                  {formValues.passwordConfirmation.errorMessage && (\n                    <span className=\"error\">\n                      {formValues.passwordConfirmation.errorMessage}\n                    </span>\n                  )}\n                  <InputGroup.Append>\n                    <InputGroup.Text\n                      style={{\n                        borderColor: \"#6EE2CD\",\n                        color: \"#000000\",\n                        height: \"37px\",\n                        width: \"28px\",\n                        paddingLeft: \"1px\",\n                        paddingRight: \"1px\",\n                      }}\n                    >\n                      <IconButton\n                        style={{ width: \"25px\" }}\n                        onClick={togglePasswordVisiblity}\n                      >\n                        {formValues.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n              {/* Person Name */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.personName.valid &&\n                    formValues.personName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  name=\"personName\"\n                  value={formValues.personName.value}\n                  onChange={handleChange}\n                />\n                {formValues.personName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.personName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* contact */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.contact.valid && formValues.contact.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"number\"\n                  placeholder=\"Enter your contact number\"\n                  name=\"contact\"\n                  value={formValues.contact.value}\n                  onChange={handleChange}\n                />\n                {formValues.contact.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.contact.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n              {/* For Existing user */}\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\n                <Link to=\"/employer-login\">\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\n                    Already have an account? Sign in\n                  </a>\n                </Link>\n              </Form.Group>\n\n              {signupError ? (\n                <Form.Text\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\n                  className=\"text-danger\"\n                >\n                  {signupError}\n                </Form.Text>\n              ) : null}\n              <Button\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Register\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default EmployerSignup;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/AllInternships.js",["352","353"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst AllInternships = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // console.log(internships);\n  // console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/all-internships\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          setInternships(res.data.internships);\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default AllInternships;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByLocation.js",["354","355","356"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsByLocation = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { location } = useParams();\n\n  console.log(internships);\n  console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/location-internship/${location}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default InternshipsByLocation;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByIndustry.js",["357","358","359"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsByIndustry = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { industry } = useParams();\n\n  console.log(internships);\n  console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/industry-internship/${industry}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default InternshipsByIndustry;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreatFreshersJob.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreateInternship.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByCompany.js",["360","361","362"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsByCompany = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { companyName } = useParams();\n\n  console.log(internships);\n  console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/companyName-internship/${companyName}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default InternshipsByCompany;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipGroupedByStream.js",["363","364","365"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsGroupedByStream = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  //   const { location } = useParams();\n\n  //   console.log(internships);\n  //   console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/internship/stream`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          //   console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          //   console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  //   console.log(internships);\n  console.log(internships[0]);\n\n  if (internships && internships[4]) {\n    // console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    // console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : internships && !internships.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100 \"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No internships available right now\n        </Alert>\n      ) : (\n        internships &&\n        internships.map((intern) => (\n          <div key={intern._id}>\n            <h1 className=\"parameter\">{intern._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {intern.internships &&\n                intern.internships.map((internship) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={internship._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      {/* {internship.companyName} */}\n                      <InternshipCard\n                        internship={internship}\n                        userId={state.user._id}\n                        deletePost={deletePost}\n                      />\n                    </Col>\n                  );\n                })}\n              {/* )} */}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default InternshipsGroupedByStream;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/CreateNew/CreateJob.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipByStream.js",["366","367","368"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsByStream = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { stream } = useParams();\n\n  console.log(internships);\n  console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/stream-internship/${stream}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default InternshipsByStream;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipCompanyNames.js",["369","370","371","372","373","374"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nconst InternshipCompanyName = () => {\n  const history = useHistory();\n  const [names, setNames] = useState();\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/companyName-internship`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          //   const notify = () => toast(res.data.error);\n          //   notify();\n        } else {\n          console.log(res.data.internships);\n          setNames(res.data.internships);\n          console.log(names);\n        }\n      })\n      .catch((err) => {\n        // setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  console.log(names);\n  return (\n    <div>\n      <h1 className=\"companyHeading\">Internships</h1>\n      <Row>\n        {names &&\n          names.map((name) => (\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\n              <div\n                className=\"NAME-company\"\n                onClick={() =>\n                  history.push(`/companyName-internship/${name._id}`)\n                }\n              >\n                {name._id}\n              </div>\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default InternshipCompanyName;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipsGroupedByIndustry.js",["375","376","377"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsGroupedByIndustry = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  //   const { location } = useParams();\n\n  //   console.log(internships);\n  //   console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/internship/industry`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          //   console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          //   console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    // console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    // console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.internships);\n          // setInternships(res.data.internships);\n          // console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n          window.location.reload(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : internships && !internships.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100 \"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No internships available right now\n        </Alert>\n      ) : (\n        internships &&\n        internships.map((intern) => (\n          <div key={intern._id}>\n            <h1 className=\"parameter\">{intern._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {intern.internships &&\n                intern.internships.map((internship) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={internship._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      <InternshipCard\n                        internship={internship}\n                        userId={state.user._id}\n                        deletePost={deletePost}\n                      />\n                    </Col>\n                  );\n                })}\n              {/* )} */}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default InternshipsGroupedByIndustry;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Profile.js",["378","379","380","381","382","383","384"],"import React from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Skills from \"./Skills\";\nimport Input from \"./Input\";\nimport Achievments from \"./Achievments\";\nimport Volunteer from \"./Volunteer\";\nimport Other from \"./Other\";\nimport Project from \"./Project\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport Start from \"./Start\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory } from \"react-router\";\n\nconst Profile = () => {\n  const history = useHistory();\n  const initialState = {\n    FirstName: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    LastName: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Address: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    GithubLink: {\n      value: null,\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    LinkedinLink: {\n      value: null,\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    OtherLinks: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Education: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Experience: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Project: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Skills: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Achievments: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    VolunteerExperience: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    Other: {\n      value: [],\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  console.log(formValues);\n\n  const changeValue = (newValue, name) => {\n    console.log(newValue);\n    const updatedFormValues = { ...formValues };\n    // const name = \"OtherLinks\";\n    const updatedFormElement = { ...updatedFormValues[name] };\n    updatedFormElement.value = newValue;\n    updatedFormElement.valid = true;\n    updatedFormElement.errorMessage = \"\";\n    updatedFormElement.touched = true;\n    updatedFormValues[name] = updatedFormElement;\n\n    setFormValues(updatedFormValues);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // console.log(typeof formValues.startDate.value);\n    // const duration =\n    //   new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\n    // console.log(duration);\n\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/student/buildprofile\",\n      data: {\n        Profile: {\n          General: {\n            FirstName: formValues.FirstName.value,\n            LastName: formValues.LastName.value,\n            Address: formValues.Address.value,\n            GithubLink: formValues.GithubLink.value,\n            LinkedInLink: formValues.LinkedinLink.value,\n            OtherProfileLink: formValues.OtherLinks.value,\n          },\n          Education: formValues.Education.value,\n          Experience: formValues.Experience.value,\n          Project: formValues.Project.value,\n          Skills: formValues.Skills.value,\n          Achievments: formValues.Achievments.value,\n          Other: formValues.Other.value,\n          VolunteerExperience: formValues.VolunteerExperience.value,\n        },\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInitialValue(description, )\n          const notify = () => toast(res.data.message);\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n\n    setFormValues(initialState);\n  };\n\n  return (\n    <>\n      <div className=\"pt-5\">\n        <Toaster />\n        <div className=\"main-box pt-4\">\n          <h1 className=\"ProfileBuilderheading\">Student Profile Builder</h1>\n          <h6 className=\"inst\">\n            Please Enter the details below to complete your student profile:-\n          </h6>\n          <Start\n            General={formValues}\n            handleChange={handleChange}\n            changeValue={changeValue}\n          />\n          <Education\n            Education={formValues.Education}\n            changeValue={changeValue}\n          />\n          <Experience\n            Experience={formValues.Experience}\n            changeValue={changeValue}\n          />\n          <Project Project={formValues.Project} changeValue={changeValue} />\n          <Skills Skills={formValues.Skills} changeValue={changeValue} />\n          <Achievments\n            Achievments={formValues.Achievments}\n            changeValue={changeValue}\n          />\n          <Volunteer\n            VolunteerExperience={formValues.VolunteerExperience}\n            changeValue={changeValue}\n          />\n          <Other Others={formValues.Other} changeValue={changeValue} />\n          <div className=\"buttonProfileDiv\">\n            <Button className=\"buttonProfile\" onClick={submitHandler}>\n              <div className=\"btnprofile\">Save Profile</div>\n            </Button>\n          </div>\n        </div>\n        <br />\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/AllJobs.js",["385","386"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\n\nconst AllJobs = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:5000/user/all-jobs\",\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.error) {\n  //         console.log(res.data.error);\n  //         // alert(res.data.error);\n  //         const notify = () => toast(res.data.error);\n  //         notify();\n  //       } else {\n  //         // if (res && res.data) {\n  //           console.log(res.data.jobs);\n  //           setJobs(res.data.jobs);\n  //           console.log(jobs);\n  //         // }\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error: \", err);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/all-jobs\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.jobs);\n\n          setJobs(res.data.jobs);\n          console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : jobs && !jobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Jobs available right now\n          </Alert>\n        ) : (\n          jobs &&\n          jobs.map((job) => {\n            return (\n              <Col\n                key={job._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <JobsCard job={job} key={job._id} userId={state.user._id} />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default AllJobs;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByLocation.js",["387","388"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\n\nconst JobsGroupedByLocation = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:5000/user/all-jobs\",\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.error) {\n  //         console.log(res.data.error);\n  //         // alert(res.data.error);\n  //         const notify = () => toast(res.data.error);\n  //         notify();\n  //       } else {\n  //         // if (res && res.data) {\n  //           console.log(res.data.jobs);\n  //           setJobs(res.data.jobs);\n  //           console.log(jobs);\n  //         // }\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error: \", err);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/job/location\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.jobs);\n\n          setJobs(res.data.jobs);\n          console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : jobs && !jobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Jobs available right now\n        </Alert>\n      ) : (\n        jobs &&\n        jobs.map((intern) => (\n          <div key={intern._id}>\n            <h1 className=\"parameter\">{intern._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {intern.jobs &&\n                intern.jobs.map((job) => {\n                  // console.log(job.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={job._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      {/* {job.companyName} */}\n                      <JobsCard\n                        job={job}\n                        deletePost={deletePost}\n                        key={job._id}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default JobsGroupedByLocation;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/BookmarkInternhsip.js",["389","390"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst BookmarkedInternships = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // console.log(internships);\n  // console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/student/getBookmarkedInternships\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internship);\n          setInternships(res.data.internship);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (internships && internships[4]) {\n    console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          setInternships(res.data.internships);\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : internships && !internships.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100 \"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No internships available right now\n          </Alert>\n        ) : (\n          internships &&\n          internships.map((internship) => {\n            // console.log(internship.createdBy._id, state.user._id);\n            return (\n              <Col\n                key={internship._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <InternshipCard\n                  internship={internship}\n                  userId={state.user._id}\n                  deletePost={deletePost}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default BookmarkedInternships;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobCompanyName.js",["391","392","393","394","395","396"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nconst JobCompanyName = () => {\n  const history = useHistory();\n  const [names, setNames] = useState();\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/companyName-Job`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          //   const notify = () => toast(res.data.error);\n          //   notify();\n        } else {\n          console.log(res.data.Jobs);\n          setNames(res.data.Jobs);\n          console.log(names);\n        }\n      })\n      .catch((err) => {\n        // setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  console.log(names);\n  return (\n    <div>\n      <h1 className=\"companyHeading\">Jobs</h1>\n      <Row>\n        {names &&\n          names.map((name) => (\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\n              <div\n                className=\"NAME-company\"\n                onClick={() =>\n                  history.push(`/companyName-job/${name._id}`)\n                }\n              >\n                {name._id}\n              </div>\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default JobCompanyName;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByStream.js",["397","398"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\n\nconst JobsGroupedByStream = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:5000/user/all-jobs\",\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.error) {\n  //         console.log(res.data.error);\n  //         // alert(res.data.error);\n  //         const notify = () => toast(res.data.error);\n  //         notify();\n  //       } else {\n  //         // if (res && res.data) {\n  //           console.log(res.data.jobs);\n  //           setJobs(res.data.jobs);\n  //           console.log(jobs);\n  //         // }\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error: \", err);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/job/stream\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.jobs);\n\n          setJobs(res.data.jobs);\n          console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : jobs && !jobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Jobs available right now\n        </Alert>\n      ) : (\n        jobs &&\n        jobs.map((intern) => (\n          <div key={intern._id}>\n            <h1 className=\"parameter\">{intern._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {intern.jobs &&\n                intern.jobs.map((job) => {\n                  // console.log(job.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={job._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      {/* {job.companyName} */}\n                      <JobsCard\n                        job={job}\n                        deletePost={deletePost}\n                        key={job._id}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default JobsGroupedByStream;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsGroupedByIndustry.js",["399","400","401","402","403","404"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Dropdown,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\nimport * as Icon from \"react-bootstrap-icons\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\n\nconst JobsGroupedByIndustry = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:5000/user/all-jobs\",\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.error) {\n  //         console.log(res.data.error);\n  //         // alert(res.data.error);\n  //         const notify = () => toast(res.data.error);\n  //         notify();\n  //       } else {\n  //         // if (res && res.data) {\n  //           console.log(res.data.jobs);\n  //           setJobs(res.data.jobs);\n  //           console.log(jobs);\n  //         // }\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error: \", err);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/job/industry\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          setJobs(res.data.jobs);\n          // console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        // console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : jobs && !jobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Jobs available right now\n        </Alert>\n      ) : (\n        jobs &&\n        jobs.map((catejob) => (\n          <div key={catejob._id}>\n            <h1 className=\"parameter\">{catejob._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {catejob.jobs &&\n                catejob.jobs.map((job) => {\n                  return (\n                    <Col\n                      key={job._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      <JobsCard\n                        job={job}\n                        deletePost={deletePost}\n                        key={job._id}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default JobsGroupedByIndustry;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/JobsByCompanyName.js",["405","406"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\nimport { useParams } from \"react-router\";\n\nconst JobsByCompanyName = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { companyName } = useParams();\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: \"http://localhost:5000/user/all-jobs\",\n  //     headers: {\n  //       Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.error) {\n  //         console.log(res.data.error);\n  //         // alert(res.data.error);\n  //         const notify = () => toast(res.data.error);\n  //         notify();\n  //       } else {\n  //         // if (res && res.data) {\n  //           console.log(res.data.jobs);\n  //           setJobs(res.data.jobs);\n  //           console.log(jobs);\n  //         // }\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error: \", err);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/job/companyName/${companyName}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.Jobs);\n\n          setJobs(res.data.Jobs);\n          console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : jobs && !jobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Jobs available right now\n          </Alert>\n        ) : (\n          jobs &&\n          jobs.map((job) => {\n            return (\n              <Col\n                key={job._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <JobsCard\n                  job={job}\n                  deletePost={deletePost}\n                  key={job._id}\n                  userId={state.user._id}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default JobsByCompanyName;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Jobs/BookmarkJob.js",["407","408"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport JobsCard from \"../../utils/UI/JobsCard/JobsCard\";\n\nconst BookmarkJobs = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/student/getBookmarkedJobs\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.job);\n\n          setJobs(res.data.job);\n          console.log(jobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (jobs && jobs[4]) {\n    console.log(jobs[4]);\n    const t = new Date(jobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : jobs && !jobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Jobs available right now\n          </Alert>\n        ) : (\n          jobs &&\n          jobs.map((job) => {\n            return (\n              <Col\n                key={job._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <JobsCard\n                  job={job}\n                  deletePost={deletePost}\n                  key={job._id}\n                  userId={state.user._id}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default BookmarkJobs;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByIndustry.js",["409"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\n// import { Alert } from \"bootstrap\";\n\nconst FresherJobsGroupedByIndustry = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/freshersjob/industry\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.freshersjobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Fresher Jobs available right now\n        </Alert>\n      ) : (\n        freshersJobs &&\n        freshersJobs.map((catefresher) => (\n          <div key={catefresher._id}>\n            <h1 className=\"parameter\">{catefresher._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {catefresher.freshersjobs &&\n                catefresher.freshersjobs.map((fresher) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={fresher._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      <FresherJobCard\n                        fresherjob={fresher}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default FresherJobsGroupedByIndustry;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/AllFresherJob.js",["410"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\n// import { Alert } from \"bootstrap\";\n\nconst AllFreshersJobs = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n\n\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/all-freshersjobs\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.freshersjobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, [freshersJobs]);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  \n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Fresher Jobs available right now\n          </Alert>\n        ) : (\n          freshersJobs &&\n          freshersJobs.map((fresher) => {\n            return (\n              <Col\n                key={fresher._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <FresherJobCard\n                  fresherjob={fresher}\n                  userId={state.user._id}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default AllFreshersJobs;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FreshersJobByCompanyName.js",["411","412","413"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\nimport { useParams } from \"react-router\";\nimport { CompareArrows } from \"@material-ui/icons\";\n// import { Alert } from \"bootstrap\";\n\nconst FreshersJobByCompanyName = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { companyName } = useParams();\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/freshersJob/companyName/${companyName}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.FreshersJobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, [freshersJobs]);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Fresher Jobs available right now\n          </Alert>\n        ) : (\n          freshersJobs &&\n          freshersJobs.map((fresher) => {\n            return (\n              <Col\n                key={fresher._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <FresherJobCard fresherjob={fresher} userId={state.user._id} />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default FreshersJobByCompanyName;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByLocation.js",["414"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\n// import { Alert } from \"bootstrap\";\n\nconst FresherJobsGroupedByLocation = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/freshersjob/location\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.freshersJobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Fresher Jobs available right now\n        </Alert>\n      ) : (\n        freshersJobs &&\n        freshersJobs.map((catefresher) => (\n          <div key={catefresher._id}>\n            <h1 className=\"parameter\">{catefresher._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {catefresher.freshersJobs &&\n                catefresher.freshersJobs.map((fresher) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={fresher._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      <FresherJobCard\n                        fresherjob={fresher}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default FresherJobsGroupedByLocation;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FresherJobsGroupedByStream.js",["415"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\n// import { Alert } from \"bootstrap\";\n\nconst FresherJobsGroupedByStream = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/user/freshersjob/stream\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.freshersjobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : freshersJobs && !freshersJobs.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100\"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No Fresher Jobs available right now\n        </Alert>\n      ) : (\n        freshersJobs &&\n        freshersJobs.map((catefresher) => (\n          <div key={catefresher._id}>\n            <h1 className=\"parameter\">{catefresher._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {catefresher.freshersjobs &&\n                catefresher.freshersjobs.map((fresher) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={fresher._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      <FresherJobCard\n                        fresherjob={fresher}\n                        userId={state.user._id}\n                      />\n                    </Col>\n                  );\n                })}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default FresherJobsGroupedByStream;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/FreshersJobCompanyName.js",["416","417","418","419","420","421"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nconst FreshersJobCompanyName = () => {\n  const history = useHistory();\n  const [names, setNames] = useState();\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/companyName-freshersjob`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          //   const notify = () => toast(res.data.error);\n          //   notify();\n        } else {\n          console.log(res.data.FreshersJobs);\n          setNames(res.data.FreshersJobs);\n          console.log(names);\n        }\n      })\n      .catch((err) => {\n        // setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  console.log(names);\n  return (\n    <div>\n      <h1 className=\"companyHeading\">Fresher's Jobs</h1>\n      <Row>\n        {names &&\n          names.map((name) => (\n            <Col className=\"col-10 col-md-6 COMPANYNAME\">\n              <div\n                className=\"NAME-company\"\n                onClick={() =>\n                  history.push(`/freshers/companyName/${name._id}`)\n                }\n              >\n                {name._id}\n              </div>\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default FreshersJobCompanyName;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/welcomeSignup/welcomeSignupEmployer.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/FreshersJob/BookmarkFresherJob.js",["422"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { UserContext } from \"../../App\";\n\nimport \"../Internships/AllInternships.css\";\nimport FresherJobCard from \"../../utils/UI/FresherJobCard/FresherJobCard\";\n// import { Alert } from \"bootstrap\";\n\nconst BookmarkFreshersJobs = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [freshersJobs, setFreshersJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-freshersjob\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n\n\n\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/student/getBookmarkedFresherJobs\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.freshersjobs);\n          setFreshersJobs(res.data.fresherjobs);\n          // console.log(freshersJobs);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, [freshersJobs]);\n\n  if (freshersJobs && freshersJobs[4]) {\n    console.log(freshersJobs[4]);\n    const t = new Date(freshersJobs[4].startDate).toString(\"YYYY-MM-DD\");\n    console.log(t);\n  }\n\n  \n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n      <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n        {loading ? (\n          <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              variant=\"light\"\n              style={{\n                borderColor: \"#515b66\",\n                borderRightColor: \"transparent\",\n              }}\n            />\n          </div>\n        ) : freshersJobs && !freshersJobs.length > 0 ? (\n          <Alert\n            variant=\"danger\"\n            className=\"w-100\"\n            style={{\n              backgroundColor: \"#343A40\",\n              border: \"none\",\n              color: \"#ffc107\",\n            }}\n          >\n            No Fresher Jobs available right now\n          </Alert>\n        ) : (\n          freshersJobs &&\n          freshersJobs.map((fresher) => {\n            return (\n              <Col\n                key={fresher._id}\n                className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n              >\n                <FresherJobCard\n                  fresherjob={fresher}\n                  deletePost={deletePost}\n                  userId={state.user._id}\n                />\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </div>\n  );\n};\nexport default BookmarkFreshersJobs;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/welcomeSignup/welcomeSignup.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/InternshipUpdate.js",["423","424"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\n\nconst UpdateInternship = () => {\n  const history = useHistory();\n  const postId = useParams().id;\n  const [internship, setInternship] = useState();\n\n  const initialState = {\n    description: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    location: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    stipend: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    techstack: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    lastDate: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    startDate: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    endDate: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    industry: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    stream: {\n      value: null,\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/employer/get-internship/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internship);\n          setInternship(res.data.internship);\n          console.log(internship);\n          // if (internship) {\n          // console.log(res.data.internship.description);\n          // setInitialValue();\n          // setInitialValue(\"description\", res.data.internship.description);\n          // setInitialValue(\"location\", res.data.internship.location);\n          // setInitialValue(\"stipend\", res.data.internship.stipend);\n          // setInitialValue(\"lastDate\", new Date(res.data.internship.lastDate));\n          // setInitialValue(\"startDate\", new Date(res.data.internship.startDate));\n          // setInitialValue(\"endDate\", res.data.internship.endDate);\n          // setInitialValue(\"techstack\", res.data.internship.techstack);\n          // }\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitInternship = (e) => {\n    e.preventDefault();\n    console.log(typeof formValues.startDate.value);\n    const duration =\n      new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\n    console.log(duration);\n\n    const {\n      description,\n      location,\n      stipend,\n      techstack,\n      lastDate,\n      startDate,\n      endDate,\n      industry,\n      stream,\n    } = formValues;\n\n    axios({\n      method: \"patch\",\n      url: \"http://localhost:5000/employer/update-internship\",\n      data: {\n        postId,\n        description: description.value,\n        location: location.value,\n        stipend: stipend.value,\n        techstack: techstack.value,\n        lastDate: lastDate.value,\n        startDate: startDate.value,\n        endDate: endDate.value,\n        industry: industry.value,\n        stream: stream.value,\n        duration: duration,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInitialValue(description, )\n          const notify = () => toast(res.data.message);\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n\n    setFormValues(initialState);\n  };\n\n  return (\n    <div style={{ padding: \"4vh 0\" }}>\n      <Toaster />\n      {internship && (\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Update Internship\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitInternship(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Company Name\"\n                  name=\"location\"\n                  value={formValues.location.value || internship.location}\n                  onChange={handleChange}\n                />\n                {formValues.location.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.location.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Internship Description\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter description\"\n                  name=\"description\"\n                  value={formValues.description.value || internship.description}\n                  onChange={handleChange}\n                />\n                {formValues.description.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.description.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"exampleForm.ControlSelect1\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  name=\"industry\"\n                  value={formValues.industry.value || internship.industry}\n                  onChange={handleChange}\n                >\n                  <option>Select Industry</option>\n                  <option value=\"IT\">IT</option>\n                  <option value=\"Marketing\">Marketing</option>\n                  <option value=\"Design\">Design</option>\n                  <option value=\"MBA\">MBA</option>\n                  <option value=\"Engineering\">Engineering</option>\n                  <option value=\"Media\">Media</option>\n                  <option value=\"Teaching\">Teaching</option>\n                  <option value=\"Finance\">Finance</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  name=\"stream\"\n                  value={formValues.stream.value || internship.stream}\n                  onChange={handleChange}\n                >\n                  <option>Select Stream</option>\n                  <option value=\"Management\">Management</option>\n                  <option value=\"Manufacturing\">Manufacturing</option>\n                  <option value=\"Accounts\">Accounts</option>\n                  <option value=\"Architecture\">Architecture</option>\n                  <option value=\"Machine Learning\">Machine Learning</option>\n                  <option value=\"Data Science\">Data Science</option>\n                  <option value=\"Development\">Development</option>\n                  <option value=\"Design\">Design</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stipend</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter stipend\"\n                  name=\"stipend\"\n                  value={formValues.stipend.value || internship.stipend}\n                  onChange={handleChange}\n                />\n                {formValues.stipend.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.stipend.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  TechStack\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter techstack\"\n                  name=\"techstack\"\n                  value={formValues.techstack.value || internship.techstack}\n                  onChange={handleChange}\n                />\n                {formValues.techstack.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.techstack.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Last Date\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"date\"\n                  placeholder=\"Enter last date\"\n                  name=\"lastDate\"\n                  value={\n                    formValues.lastDate.value || new Date(internship.lastDate)\n                  }\n                  onChange={handleChange}\n                />\n                {formValues.lastDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.lastDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Start Month\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"month\"\n                  placeholder=\"Enter start date\"\n                  name=\"startDate\"\n                  value={\n                    formValues.startDate.value || new Date(internship.startDate)\n                  }\n                  onChange={handleChange}\n                />\n                {formValues.startDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.startDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  End Month\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"month\"\n                  placeholder=\"Enter end date\"\n                  name=\"endDate\"\n                  value={\n                    formValues.endDate.value || new Date(internship.endDate)\n                  }\n                  onChange={handleChange}\n                />\n                {formValues.endDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.endDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {\n                <Button\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                  // disabled={!formIsValid}\n                >\n                  Update\n                </Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateInternship;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/ProfileView.js",["425","426","427","428","429","430","431","432","433","434"],"import React, { useEffect } from \"react\";\nimport \"../profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport Start from \"../Start\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory } from \"react-router\";\nimport { Col, Row } from \"react-bootstrap\";\nimport General from \"./components/General\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport Project from \"./components/Project\";\n\nconst ProfileView = () => {\n  const [profile, setProfile] = useState();\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/student/buildprofile/get`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        // setLoading(false);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.Jobs);\n          // res.data.profile.General.OtherProfileLink =\n          res.data.profile.General.OtherProfileLink.forEach((link) => {\n            link._id = null;\n          });\n          setProfile(res.data.profile);\n          console.log(profile);\n        }\n      })\n      .catch((err) => {\n        // setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  console.log(profile);\n\n  return (\n    <div className=\"pt-5\">\n      <Toaster />\n      {profile && (\n        <div className=\"main-box py-4 profile-box\">\n          <h1 className=\"ProfileBuilderheading\">Student Profile</h1>\n          {profile.General && <General general={profile.General} />}\n          {profile.Education && <Education Education={profile.Education} />}\n          {profile.Experience && <Experience Experience={profile.Education} />}\n          {profile.Project && <Project Project={profile.Project} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileView;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/Internships/InternshipsGroupedByLoction.js",["435","436","437"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Row, Spinner, Alert } from \"react-bootstrap\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport \"./AllInternships.css\";\nimport { UserContext } from \"../../App\";\nimport InternshipCard from \"../../utils/UI/InternshipCard/InternshipCard\";\n\nconst InternshipsGroupedByLocation = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [internships, setInternships] = useState([]);\n  const [loading, setLoading] = useState(true);\n  //   const { location } = useParams();\n\n  //   console.log(internships);\n  //   console.log(state);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/user/internship/location`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        setLoading(false);\n        if (res.data.error) {\n          //   console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          //   console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  //   console.log(internships);\n  console.log(internships[0]);\n\n  if (internships && internships[4]) {\n    // console.log(internships[4]);\n    const t = new Date(internships[4].startDate).toString(\"YYYY-MM-DD\");\n    // console.log(t);\n  }\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-internship\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        // console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.internships);\n          setInternships(res.data.internships);\n          console.log(internships);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <div className=\"internshipsOuterContainer\">\n      <Toaster />\n\n      {loading ? (\n        <div className=\"h-100 w-100 d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            variant=\"light\"\n            style={{\n              borderColor: \"#515b66\",\n              borderRightColor: \"transparent\",\n            }}\n          />\n        </div>\n      ) : internships && !internships.length > 0 ? (\n        <Alert\n          variant=\"danger\"\n          className=\"w-100 \"\n          style={{\n            backgroundColor: \"#343A40\",\n            border: \"none\",\n            color: \"#ffc107\",\n          }}\n        >\n          No internships available right now\n        </Alert>\n      ) : (\n        internships &&\n        internships.map((intern) => (\n          <div key={intern._id}>\n            <h1 className=\"parameter\">{intern._id}</h1>\n            <Row className=\"justify-content-xl-start justify-content-lg-around justify-content-sm-center\">\n              {intern.internships &&\n                intern.internships.map((internship) => {\n                  // console.log(internship.createdBy._id, state.user._id);\n                  return (\n                    <Col\n                      key={internship._id}\n                      className=\"col-xl-4 col-lg-5 col-md-6 col-sm-11 col-12 colPost\"\n                    >\n                      {/* {internship.companyName} */}\n                      <InternshipCard\n                        internship={internship}\n                        userId={state.user._id}\n                        deletePost={deletePost}\n                      />\n                    </Col>\n                  );\n                })}\n              {/* )} */}\n            </Row>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\nexport default InternshipsGroupedByLocation;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/FresherJobUpdate.js",["438","439"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\n\nconst UpdateFresherJob = () => {\n  const history = useHistory();\n  const postId = useParams().id;\n  const [job, setJob] = useState();\n\n  const initialState = {\n    description: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    location: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    stream: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    industry: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    salary: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    techstack: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    lastDate: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    startDate: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    experience: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/employer/get-freshersjob/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.job);\n          setJob(res.data.job);\n          console.log(job);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitInternship = (e) => {\n    e.preventDefault();\n\n    const {\n      description,\n      location,\n      salary,\n      techstack,\n      lastDate,\n      startDate,\n      stream,\n      industry,\n    } = formValues;\n\n    axios({\n      method: \"patch\",\n      url: \"http://localhost:5000/employer/update-fresherjob\",\n      data: {\n        postId,\n        description: description.value,\n        location: location.value,\n        salary: salary.value,\n        techstack: techstack.value,\n        lastDate: lastDate.value,\n        startDate: startDate.value,\n        industry: industry.value,\n        stream: stream.value,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInitialValue(description, )\n          const notify = () => toast(res.data.message);\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n\n    setFormValues(initialState);\n  };\n\n  return (\n    <div style={{ padding: \"4vh 0\" }}>\n      <Toaster />\n      {job && (\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Update Fresher's Job\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitInternship(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Location\"\n                  name=\"location\"\n                  value={formValues.location.value || job.location}\n                  onChange={handleChange}\n                />\n                {formValues.location.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.location.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Stream\"\n                  name=\"stream\"\n                  value={formValues.stream.value || job.stream}\n                  onChange={handleChange}\n                />\n                {formValues.stream.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.stream.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Industry\"\n                  name=\"industry\"\n                  value={formValues.industry.value || job.industry}\n                  onChange={handleChange}\n                />\n                {formValues.industry.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.industry.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Internship Description\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter description\"\n                  name=\"description\"\n                  value={formValues.description.value || job.description}\n                  onChange={handleChange}\n                />\n                {formValues.description.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.description.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter salary\"\n                  name=\"salary\"\n                  value={formValues.salary.value || job.salary}\n                  onChange={handleChange}\n                />\n                {formValues.salary.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.salary.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  TechStack\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter techstack\"\n                  name=\"techstack\"\n                  value={formValues.techstack.value || job.techstack}\n                  onChange={handleChange}\n                />\n                {formValues.techstack.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.techstack.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Last Date\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"date\"\n                  placeholder=\"Enter last date\"\n                  name=\"lastDate\"\n                  value={formValues.lastDate.value || job.lastDate}\n                  onChange={handleChange}\n                />\n                {formValues.lastDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.lastDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Start Month\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"month\"\n                  placeholder=\"Enter start date\"\n                  name=\"startDate\"\n                  value={formValues.startDate.value || job.startDate}\n                  onChange={handleChange}\n                />\n                {formValues.startDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.startDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {\n                <Button\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                  // disabled={!formIsValid}\n                >\n                  Update\n                </Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateFresherJob;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/UpdateForm/JobUpdate.js",["440","441"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\n\nconst UpdateJob = () => {\n  const history = useHistory();\n  const postId = useParams().id;\n  const [job, setJob] = useState();\n\n  const initialState = {\n    description: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    location: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    stream: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    industry: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    salary: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    techstack: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    lastDate: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    startDate: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    experience: {\n      value: null,\n      //   validation: {\n      //     required: true,\n      //   },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://localhost:5000/employer/get-job/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          console.log(res.data.job);\n          setJob(res.data.job);\n          console.log(job);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitInternship = (e) => {\n    e.preventDefault();\n\n    const {\n      description,\n      location,\n      salary,\n      techstack,\n      lastDate,\n      startDate,\n      experience,\n      stream,\n      industry,\n    } = formValues;\n\n    axios({\n      method: \"patch\",\n      url: \"http://localhost:5000/employer/update-job\",\n      data: {\n        postId,\n        description: description.value,\n        location: location.value,\n        salary: salary.value,\n        techstack: techstack.value,\n        lastDate: lastDate.value,\n        startDate: startDate.value,\n        experience: experience.value,\n        stream: stream.value,\n        industry: industry.value,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInitialValue(description, )\n          const notify = () => toast(res.data.message);\n          notify();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n\n    setFormValues(initialState);\n  };\n\n  return (\n    <div style={{ padding: \"4vh 0\" }}>\n      <Toaster />\n      {job && (\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Update Job\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitInternship(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Company Name\"\n                  name=\"location\"\n                  value={formValues.location.value || job.location}\n                  onChange={handleChange}\n                />\n                {formValues.location.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.location.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stream</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Stream\"\n                  name=\"stream\"\n                  value={formValues.stream.value || job.stream}\n                  onChange={handleChange}\n                />\n                {formValues.stream.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.stream.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Industry</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter Industry\"\n                  name=\"industry\"\n                  value={formValues.industry.value || job.industry}\n                  onChange={handleChange}\n                />\n                {formValues.industry.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.industry.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Internship Description\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter description\"\n                  name=\"description\"\n                  value={formValues.description.value || job.description}\n                  onChange={handleChange}\n                />\n                {formValues.description.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.description.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter salary\"\n                  name=\"salary\"\n                  value={formValues.salary.value || job.salary}\n                  onChange={handleChange}\n                />\n                {formValues.salary.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.salary.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  TechStack\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter techstack\"\n                  name=\"techstack\"\n                  value={formValues.techstack.value || job.techstack}\n                  onChange={handleChange}\n                />\n                {formValues.techstack.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.techstack.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Last Date\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"date\"\n                  placeholder=\"Enter last date\"\n                  name=\"lastDate\"\n                  value={formValues.lastDate.value || job.lastDate}\n                  onChange={handleChange}\n                />\n                {formValues.lastDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.lastDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Start Month\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"month\"\n                  placeholder=\"Enter start date\"\n                  name=\"startDate\"\n                  value={formValues.startDate.value || job.startDate}\n                  onChange={handleChange}\n                />\n                {formValues.startDate.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.startDate.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Experience\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"Number\"\n                  placeholder=\"Enter experince\"\n                  name=\"experience\"\n                  value={formValues.experience.value || job.experience}\n                  onChange={handleChange}\n                />\n                {formValues.experience.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.experience.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {\n                <Button\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                  // disabled={!formIsValid}\n                >\n                  Update\n                </Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateJob;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Start.js",["442","443","444","445","446","447"],"import React, { useEffect } from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Skills from \"./Skills\";\nimport Input from \"./Input\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Start = ({ General, handleChange,changeValue }) => {\n  const [inputFields, setInputFields] = useState([{ ProfileLink: \"\" }]);\n  console.log(inputFields);\n\n  useEffect(() => {\n    changeValue(inputFields, \"OtherLinks\");\n  },[inputFields])\n\n  console.log(General);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i,j) => {\n      console.log(i);\n\n      if (id === j) {\n        // console.log(i[j]);\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n\n      // setInputFields()\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields((prevInput) => [...prevInput, { ProfileLink: \"\" }]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n  return (\n    <>\n      <form className=\"form-main\" onSubmit={handleSubmit}>\n        <h1 className=\"subHeading\">General</h1>\n        <Row className=\"justify-content-between px-3\">\n          <div className=\"side\">\n            <label className=\"label-text\">\n              First Name<span>*</span>\n            </label>\n            <br />\n            <input\n              type=\"text\"\n              placeholder=\"Enter your first name\"\n              className=\"text-long\"\n              onChange={(e) => handleChange(e)}\n              value={General.FirstName.value}\n              name=\"FirstName\"\n            ></input>\n            <br />\n          </div>\n\n          <div className=\"side\">\n            <label className=\"label-text\">\n              Last Name<span>*</span>\n            </label>\n            <br />\n            <input\n              type=\"text\"\n              placeholder=\"Enter your last name\"\n              className=\"text-long\"\n              onChange={(e) => handleChange(e)}\n              value={General.LastName.value}\n              name=\"LastName\"\n            ></input>\n            <br />\n          </div>\n        </Row>\n\n        <label className=\"label-text\">\n          Studnet Address<span>*</span>\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          className=\"text-long\"\n          placeholder=\"Enter your student address\"\n          onChange={(e) => handleChange(e)}\n          value={General.Address.value}\n          name=\"Address\"\n        ></input>\n        <br />\n\n        <label className=\"label-text\">\n          Github Link<span>*</span>\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          className=\"text-long\"\n          placeholder=\"Enter your github link\"\n          onChange={(e) => handleChange(e)}\n          value={General.GithubLink.value}\n          name=\"GithubLink\"\n        ></input>\n        <br />\n\n        <label className=\"label-text\">\n          LinkedIn Link<span>*</span>\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          className=\"text-long\"\n          placeholder=\"Enter your linkedinlink\"\n          onChange={(e) => handleChange(e)}\n          value={General.LinkedinLink.value}\n          name=\"LinkedinLink\"\n        ></input>\n        <br />\n\n        <label className=\"label-text\">\n          Other Profile Link<span>*</span>\n        </label>\n        <br />\n        {/* <input type=\"text\" className=\"text-long\" placeholder=\"Enter your other profile link\"></input> */}\n\n        {inputFields.map((inputField, i) => (\n          <Row key={i} className=\"justify-content-between\">\n            <Col className=\"col-md-10 col-12\">\n              <input\n                name=\"ProfileLink\"\n                label=\"Profile Link\"\n                value={inputField.ProfileLink}\n                className=\"text-long\"\n                placeholder=\"Enter your other profile link\"\n                onChange={(event) => handleChangeInput(i, event)}\n              ></input>\n            </Col>\n            <Col className=\"col-md-2 d-flex col-12\">\n              <IconButton\n                disabled={inputFields.length === 1}\n                onClick={() => handleRemoveFields(i)}\n              >\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={handleAddFields}>\n                <AddIcon />\n              </IconButton>\n            </Col>\n          </Row>\n        ))}\n        {/* </Row> */}\n      </form>\n      <hr></hr>\n    </>\n  );\n};\n\nexport default Start;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/checkValidation.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Experience.js",["448"],"import React from \"react\";\nimport \"../../profile.css\";\nimport { useState } from \"react\";\n\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Experience = ({ Experience }) => {\n  return (\n    <React.Fragment>\n      <h2 className=\"subHeading\">Experience</h2>\n      {Experience && Experience.map(edu => <Row className=\"justify-content-between px-5 py-3\">\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Company </div>\n          <div className=\"div-2\">{edu.Company}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Title: </div>\n          <div className=\"div-2\">{edu.Title}</div>\n        </Col>\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">StartDate </div>\n          <div className=\"div-2\">{edu.StartDate}</div>\n        </Col>\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">EndDate: </div>\n          <div className=\"div-2\">{edu.EndDate}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Location: </div>\n          <div className=\"div-2\">{edu.Location}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Description: </div>\n          <div className=\"div-2\">{edu.Description}</div>\n        </Col>\n      </Row>)}\n    </React.Fragment>\n  );\n};\n\nexport default Experience;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Project.js",["449"],"import React from \"react\";\nimport \"../../profile.css\";\nimport { useState } from \"react\";\n\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Project = ({ Project }) => {\n  return (\n    <React.Fragment>\n      <h2 className=\"subHeading\">Project</h2>\n      {Project &&\n        Project.map((edu) => (\n          <Row className=\"justify-content-between px-5 py-3\">\n            <Col className=\"col-12 col-md-12 py-3 \">\n              <div className=\"div-1\">Company </div>\n              <div className=\"div-2\">{edu.ProjectTitle}</div>\n            </Col>\n            <Col className=\"col-12 col-md-12 py-3 \">\n              <div className=\"div-1\">Title: </div>\n              <div className=\"div-2\">{edu.ProjectLink}</div>\n            </Col>\n            <Col className=\"col-12 col-md-5 py-3 \">\n              <div className=\"div-1\">StartDate </div>\n              <div className=\"div-2\">{edu.StartDate}</div>\n            </Col>\n            <Col className=\"col-12 col-md-5 py-3 \">\n              <div className=\"div-1\">EndDate: </div>\n              <div className=\"div-2\">{edu.EndDate}</div>\n            </Col>\n\n            <Col className=\"col-12 col-md-12 py-3 \">\n              <div className=\"div-1\">Description: </div>\n              <div className=\"div-2\">{edu.Description}</div>\n            </Col>\n          </Row>\n        ))}\n    </React.Fragment>\n  );\n};\n\nexport default Project;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/General.js",["450"],"import React from \"react\";\nimport \"../../profile.css\";\nimport { useState } from \"react\";\n\nimport { Col, Row } from \"react-bootstrap\";\n\nconst General = ({ general }) => {\n  return (\n    <React.Fragment>\n      <h2 className=\"subHeading\">General</h2>\n      <Row className=\"justify-content-between px-5 py-3\">\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">First Name: </div>\n          <div className=\"div-2\">{general.FirstName}</div>\n        </Col>\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">Last Name: </div>\n          <div className=\"div-2\">{general.LastName}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Address: </div>\n          <div className=\"div-2\">{general.Address}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Github Link: </div>\n          <div className=\"div-2\">{general.GithubLink}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">LinkedInLink: </div>\n          <div className=\"div-2\">{general.LinkedInLink}</div>\n        </Col>\n        <div className=\"div-1 pt-3 pb-2 px-3\">Other Profile Link: </div>\n        {general.OtherProfileLink &&\n          general.OtherProfileLink.map((link) => (\n            <Col className=\"col-12 col-md-12 py-3 \">\n              <div className=\"div-2\">{link && link.ProfileLink}</div>\n            </Col>\n          ))}\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default General;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/StudentProfile/components/Education.js",["451"],"import React from \"react\";\nimport \"../../profile.css\";\nimport { useState } from \"react\";\n\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Education = ({ Education }) => {\n  return (\n    <React.Fragment>\n      <h2 className=\"subHeading\">Education</h2>\n      <Row className=\"justify-content-between px-5 py-3\">\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">School </div>\n          <div className=\"div-2\">{Education.School}</div>\n        </Col>\n        <Col className=\"col-12 col-md-5 py-3 \">\n          <div className=\"div-1\">Degree: </div>\n          <div className=\"div-2\">{Education.Degree}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">FieldOfStudy: </div>\n          <div className=\"div-2\">{Education.FieldOfStudy}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">Github Link: </div>\n          <div className=\"div-2\">{Education.GithubLink}</div>\n        </Col>\n        <Col className=\"col-12 col-md-12 py-3 \">\n          <div className=\"div-1\">LinkedInLink: </div>\n          <div className=\"div-2\">{Education.LinkedInLink}</div>\n        </Col>\n        <div className=\"div-1 pt-3 pb-2 px-3\">Other Profile Link: </div>\n        {Education.OtherProfileLink &&\n          Education.OtherProfileLink.map((link) => (\n            <Col className=\"col-12 col-md-12 py-3 \">\n              <div className=\"div-2\">{link && link.ProfileLink}</div>\n            </Col>\n          ))}\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Education;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/InternshipCard/InternshipCard.js",["452"],"import React, { useContext } from \"react\";\nimport \"./InternshipCard.css\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { UserContext } from \"../../../App\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\nconst InternshipCard = ({ internship, deletePost, userId }) => {\n  const { state } = useContext(UserContext);\n\n  const bookMarkPost = (postId) => {\n    axios({\n      method: \"post\",\n      url: `http://localhost:5000/student/bookmarkInternship/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInternships(res.data.internships);\n          // window.location.reload(false);\n          console.log(res.data.message);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const GettingMonth = (date) => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const time =\n      monthNames[new Date(date).getMonth()] +\n      \", \" +\n      new Date(date).getFullYear();\n    return time;\n  };\n\n  const GettingDate = (date) => {\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\n    return time;\n  };\n\n  const GettingDuration = (time) => {\n    const t = Math.floor(Number(time) / (3600 * 1000 * 24 * 30));\n    console.log(t);\n    return t > 1 ? t + \" Months\" : t + \" Month\";\n  };\n  return (\n    <React.Fragment>\n      {/* <Toaster/> */}\n      <div className=\"card-custom mx-auto\">\n        <div className=\"primary-info\">\n          {internship.role && (\n            <div className=\"primary-info-role\">{internship.role}</div>\n          )}\n          {internship.companyName && (\n            <div className=\"primary-info-company\">{internship.companyName}</div>\n          )}\n          {(internship.industry || internship.stream) && (\n            <div className=\"primary-info-indus-stream\">\n              {internship.industry}, {internship.stream}\n            </div>\n          )}\n          <div className=\"primary-info-table\">\n            <ul>\n              {internship.location && (\n                <li>\n                  <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\n                  {internship.location}\n                </li>\n              )}\n              {internship.startDate && (\n                <li>\n                  <i className=\"far fa-play-circle\"></i>{\" \"}\n                  <span>Start Date:</span>\n                  {GettingMonth(internship.startDate)}\n                </li>\n              )}\n              {internship.duration && (\n                <li>\n                  <i class=\"fas fa-calendar-week\"></i> <span>Duration:</span>\n                  {GettingDuration(internship.duration)}\n                </li>\n              )}\n              {internship.stipend && (\n                <li>\n                  <i class=\"far fa-money-bill-alt\"></i> <span>Stipend:</span>₹\n                  {internship.stipend}\n                </li>\n              )}\n              {internship.lastDate && (\n                <li>\n                  <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\n                  {GettingDate(internship.lastDate)}\n                </li>\n              )}\n            </ul>\n          </div>\n          {internship.techstack && internship.techstack.length > 0 && (\n            <div className=\"primary-info-techstack\">\n              {internship.techstack.map((tech) => (\n                <div>{tech}</div>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"secondary-info\">\n          {internship.createdBy &&\n            userId &&\n            userId === internship.createdBy._id && (\n              <div className=\"dropdown-container\">\n                <Dropdown className=\"postOptions\">\n                  <Dropdown.Toggle\n                    className=\"postOptionsBtn\"\n                    variant=\"success\"\n                    id=\"dropdown-basic\"\n                  >\n                    <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className=\"optionMenu\">\n                    <Dropdown.Item\n                      className=\"optionItem\"\n                      href={`/update-internship/${internship._id}`}\n                    >\n                      <Icon.PencilSquare className=\"optionsMenuIcon\" />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() => deletePost(internship._id)}\n                      className=\"optionItem\"\n                    >\n                      <Icon.Trash className=\"optionsMenuIcon\" />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            )}\n          {state && state.userType === \"student\" && (\n            <div className=\"dropdown-container\">\n              <Dropdown className=\"postOptions\">\n                <Dropdown.Toggle\n                  className=\"postOptionsBtn\"\n                  variant=\"success\"\n                  id=\"dropdown-basic\"\n                >\n                  <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"optionMenu\">\n                  <Dropdown.Item\n                    onClick={() => {\n                      bookMarkPost(internship._id);\n                      console.log(internship._id);\n                    }}\n                    className=\"optionItem\"\n                  >\n                    <Icon.Bookmark className=\"optionsMenuIcon\" />\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          )}\n          <div className=\"secondary-info-container\">\n            {internship.description && (\n              <div className=\"secondary-info-description w-100\">\n                {internship.description}\n              </div>\n            )}\n            <a href=\"#\" className=\"btn btn-custom\">\n              Apply Now\n            </a>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default InternshipCard;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/FresherJobCard/FresherJobCard.js",["453","454","455"],"import React, { useContext } from \"react\";\nimport \"../InternshipCard/InternshipCard.css\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { UserContext } from \"../../../App\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst FresherJobCard = ({ fresherjob, userId }) => {\n  const { state, dispatch } = useContext(UserContext);\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-freshersjob\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const bookMarkPost = (postId) => {\n    axios({\n      method: \"post\",\n      url: `http://localhost:5000/student/bookmarkFresherJob/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInternships(res.data.internships);\n          // window.location.reload(false);\n          console.log(res.data.message);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const GettingMonth = (date) => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const time =\n      monthNames[new Date(date).getMonth()] +\n      \", \" +\n      new Date(date).getFullYear();\n    return time;\n  };\n\n  const GettingDate = (date) => {\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\n    return time;\n  };\n\n  return (\n    <div className=\"card-custom mx-auto\">\n      <div className=\"primary-info\">\n        {fresherjob.role && (\n          <div className=\"primary-info-role\">{fresherjob.role}</div>\n        )}\n        {fresherjob.companyName && (\n          <div className=\"primary-info-company\">{fresherjob.companyName}</div>\n        )}\n        {(fresherjob.industry || fresherjob.stream) && (\n          <div className=\"primary-info-indus-stream\">\n            {fresherjob.industry}, {fresherjob.stream}\n          </div>\n        )}\n        <div className=\"primary-info-table\">\n          <ul>\n            {fresherjob.location && (\n              <li>\n                <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\n                {fresherjob.location}\n              </li>\n            )}\n            {fresherjob.salary && (\n              <li>\n                <i class=\"far fa-money-bill-alt\"></i> <span>Salary:</span>₹\n                {fresherjob.salary}\n              </li>\n            )}\n            {fresherjob.startDate && (\n              <li>\n                <i className=\"far fa-play-circle\"></i> <span>Start Date:</span>\n                {GettingMonth(fresherjob.startDate)}\n              </li>\n            )}\n            {fresherjob.lastDate && (\n              <li>\n                <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\n                {GettingDate(fresherjob.lastDate)}\n              </li>\n            )}\n          </ul>\n        </div>\n        {fresherjob.techstack && fresherjob.techstack.length > 0 && (\n          <div className=\"primary-info-techstack\">\n            {fresherjob.techstack.map((tech) => (\n              <div>{tech}</div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"secondary-info\">\n        {fresherjob.createdBy && userId && userId === fresherjob.createdBy._id && (\n          <div className=\"dropdown-container\">\n            <Dropdown className=\"postOptions\">\n              <Dropdown.Toggle\n                className=\"postOptionsBtn\"\n                variant=\"success\"\n                id=\"dropdown-basic\"\n              >\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"optionMenu\">\n                <Dropdown.Item\n                  className=\"optionItem\"\n                  href={`/update-fresher/${fresherjob._id}`}\n                >\n                  <Icon.PencilSquare className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => deletePost(fresherjob._id)}\n                  className=\"optionItem\"\n                >\n                  <Icon.Trash className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        )}\n        {state && state.userType === \"student\" && (\n          <div className=\"dropdown-container\">\n            <Dropdown className=\"postOptions\">\n              <Dropdown.Toggle\n                className=\"postOptionsBtn\"\n                variant=\"success\"\n                id=\"dropdown-basic\"\n              >\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"optionMenu\">\n                <Dropdown.Item\n                  onClick={() => {\n                    bookMarkPost(fresherjob._id);\n                    console.log(fresherjob._id);\n                  }}\n                  className=\"optionItem\"\n                >\n                  <Icon.Bookmark className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        )}\n        <div className=\"secondary-info-container\">\n          {fresherjob.description && (\n            <div className=\"secondary-info-description w-100\">\n              {fresherjob.description}\n            </div>\n          )}\n          <a href=\"#\" className=\"btn btn-custom\">\n            Apply Now\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FresherJobCard;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/utils/UI/JobsCard/JobsCard.js",["456","457","458"],"import React, { useContext } from \"react\";\nimport \"../InternshipCard/InternshipCard.css\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { UserContext } from \"../../../App\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst JobsCard = ({ job, userId }) => {\n  const { state, dispatch } = useContext(UserContext);\n\n  const deletePost = (postId) => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/employer/delete-job\",\n      data: {\n        postId,\n      },\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          // alert(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // console.log(res.data.jobs);\n          // setJobs(res.data.jobs);\n          // console.log(jobs);\n          window.location.reload(false);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const bookMarkPost = (postId) => {\n    axios({\n      method: \"post\",\n      url: `http://localhost:5000/student/bookmarkJob/${postId}`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          // console.log(res.data.error);\n          const notify = () => toast(res.data.error);\n          notify();\n        } else {\n          // setInternships(res.data.internships);\n          // window.location.reload(false);\n          console.log(res.data.message);\n          const notify = () => toast(res.data.message);\n          notify();\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n  const GettingMonth = (date) => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const time =\n      monthNames[new Date(date).getMonth()] +\n      \", \" +\n      new Date(date).getFullYear();\n    return time;\n  };\n\n  const GettingDate = (date) => {\n    const time = new Date(date).getDate() + \" \" + GettingMonth(date);\n    return time;\n  };\n\n  return (\n    <div className=\"card-custom mx-auto\">\n      <div className=\"primary-info\">\n        {job.role && <div className=\"primary-info-role\">{job.role}</div>}\n        {job.companyName && (\n          <div className=\"primary-info-company\">{job.companyName}</div>\n        )}\n        {(job.industry || job.stream) && (\n          <div className=\"primary-info-indus-stream\">\n            {job.industry}, {job.stream}\n          </div>\n        )}\n        <div className=\"primary-info-table\">\n          <ul>\n            {job.location && (\n              <li>\n                <i class=\"fas fa-map-marker-alt\"></i> <span>Location:</span>\n                {job.location}\n              </li>\n            )}\n            {job.experience && (\n              <li>\n                <i class=\"fas fa-briefcase\"></i>\n                <span>Experience:</span>\n                {job.experience && \"Atleast\"} {job.experience}{\" \"}\n                {job.experience === 1 && \"yrs\"} {job.experience > 1 && \"yrs\"}\n              </li>\n            )}\n            {job.salary && (\n              <li>\n                <i class=\"far fa-money-bill-alt\"></i> <span>Salary:</span>₹\n                {job.salary}\n              </li>\n            )}\n            {job.startDate && (\n              <li>\n                <i className=\"far fa-play-circle\"></i> <span>Start Date:</span>\n                {GettingMonth(job.startDate)}\n              </li>\n            )}\n            {job.lastDate && (\n              <li>\n                <i class=\"fas fa-hourglass-start\"></i> <span>Apply By:</span>\n                {GettingDate(job.lastDate)}\n              </li>\n            )}\n          </ul>\n        </div>\n        {job.techstack && job.techstack.length > 0 && (\n          <div className=\"primary-info-techstack\">\n            {job.techstack.map((tech) => (\n              <div>{tech}</div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"secondary-info\">\n        {job.createdBy && userId && userId === job.createdBy._id && (\n          <div className=\"dropdown-container\">\n            <Dropdown className=\"postOptions\">\n              <Dropdown.Toggle\n                className=\"postOptionsBtn\"\n                variant=\"success\"\n                id=\"dropdown-basic\"\n              >\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"optionMenu\">\n                <Dropdown.Item\n                  className=\"optionItem\"\n                  href={`/update-job/${job._id}`}\n                >\n                  <Icon.PencilSquare className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => deletePost(job._id)}\n                  className=\"optionItem\"\n                >\n                  <Icon.Trash className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        )}\n        {state && state.userType === \"student\" && (\n          <div className=\"dropdown-container\">\n            <Dropdown className=\"postOptions\">\n              <Dropdown.Toggle\n                className=\"postOptionsBtn\"\n                variant=\"success\"\n                id=\"dropdown-basic\"\n              >\n                <Icon.ThreeDotsVertical style={{ fontSize: \"1.4rem\" }} />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"optionMenu\">\n                <Dropdown.Item\n                  onClick={() => {\n                    bookMarkPost(job._id);\n                    console.log(job._id);\n                  }}\n                  className=\"optionItem\"\n                >\n                  <Icon.Bookmark className=\"optionsMenuIcon\" />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        )}\n        <div className=\"secondary-info-container\">\n          {job.description && (\n            <div className=\"secondary-info-description w-100\">\n              {job.description}\n            </div>\n          )}\n          <a href=\"#\" className=\"btn btn-custom\">\n            Apply Now\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobsCard;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Label.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Input.js",[],"/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Other.js",["459","460","461","462","463","464"],"import React, { useEffect } from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Input from \"./Input\";\n\nconst Other = ({ Others, changeValue }) => {\n  const [inputFields, setInputFields] = useState([{ Other: \"\" }]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Other\");\n  }, [inputFields]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i, j) => {\n      if (id === j) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { Other: \"\" }]);\n  };\n\n  const handleRemoveFields = (id) => {\n    let values = [...inputFields];\n    values = values.filter((val, j) => id != j);\n    // values.splice(\n    //   values.findIndex((value) => value.j === id),\n    //   1\n    // );\n    setInputFields(values);\n  };\n\n  return (\n    <form className=\"Other\">\n      <h2 className=\"subHeading\">Other</h2>\n      <Label value=\"Other\" />\n      <br />\n      {inputFields.map((inputField, j) => (\n        <div key={j}>\n          <input\n            name=\"Other\"\n            label=\"Other\"\n            value={inputField.Other}\n            className=\"text-long\"\n            placeholder=\"Enter your Other\"\n            onChange={(event) => handleChangeInput(j, event)}\n          ></input>\n          <IconButton\n            disabled={Others.length === 1}\n            onClick={() => handleRemoveFields(j)}\n          >\n            <RemoveIcon />\n          </IconButton>\n          <IconButton onClick={handleAddFields}>\n            <AddIcon />\n          </IconButton>\n        </div>\n      ))}\n\n      <hr />\n    </form>\n  );\n};\n\nexport default Other;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Education.js",["465","466","467","468","469"],"import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./profile.css\";\nimport Label from \"./Label\";\nimport { Row } from \"react-bootstrap\";\n\nfunction Education({changeValue, Education}) {\n  const [inputFields, setInputFields] = useState([\n    {\n      id: uuidv4(),\n      School: \"\",\n      Degree: \"\",\n      FieldOfStudy: \"\",\n      StartDate: \"\",\n      LastDate: \"\",\n      Grade: \"\",\n      Description: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Education\");\n  },[inputFields])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        id: uuidv4(),\n        School: \"\",\n        Degree: \"\",\n        FieldOfStudy: \"\",\n        StartDate: \"\",\n        LastDate: \"\",\n        Grade: \"\",\n        Description: \"\",\n      },\n    ]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <>\n      <h2 className=\"subHeading\">Education</h2>\n      <form className=\"education\" onSubmit={handleSubmit}>\n        {inputFields.map((inputField) => (\n          <div key={inputField.id}>\n            <Label value=\"School\" />\n            <br />\n            <input\n              name=\"school\"\n              label=\"School Name\"\n              placeholder=\"Ex:Boston University\"\n              className=\"text-long\"\n              value={Education.School}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Degree\" />\n            <br />\n            <input\n              name=\"degree\"\n              label=\"Degree\"\n              placeholder=\"Ex:Bachelors\"\n              className=\"text-long\"\n              value={Education.Degree}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Field of Study\" />\n            <br />\n            <input\n              name=\"FieldOfStudy\"\n              label=\"Study \"\n              placeholder=\"Ex:Business\"\n              className=\"text-long\"\n              value={Education.FieldOfStudy}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Row className=\"justify-content-between px-3\">\n              <div className=\"side\">\n                <Label value=\"Start Date\" />\n                <br />\n                <input\n                  name=\"sd\"\n                  type=\"date\"\n                  label=\"Star Date\"\n                  placeholder=\"Enter Start Date\"\n                  className=\"text-long\"\n                  value={Education.StartDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n              <div className=\"byside\">\n                <Label value=\"Last Date\" />\n                <br />\n                <input\n                  name=\"ld\"\n                  type=\"date\"\n                  label=\"Last Date\"\n                  placeholder=\"Enter Last Date\"\n                  className=\"text-long\"\n                  value={Education.LastDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n            </Row>\n            <Label value=\"Grade\" />\n            <br />\n            <input\n              name=\"grade\"\n              label=\"Grade \"\n              placeholder=\"Enter Your Grade\"\n              className=\"text-long\"\n              value={inputField.firstName}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Description\" />\n            <br />\n            <textarea\n              className=\"textbox\"\n              name=\"desc\"\n              rows=\"3\"\n              cols=\"82\"\n              label=\"Description\"\n              variant=\"filled\"\n              value={inputField.firstName}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <IconButton\n              disabled={inputFields.length === 1}\n              onClick={() => handleRemoveFields(inputField.id)}\n            >\n              <RemoveIcon />\n            </IconButton>\n            <IconButton onClick={handleAddFields}>\n              <AddIcon />\n            </IconButton>\n          </div>\n        ))}\n      </form>\n      <hr />\n    </>\n  );\n}\n\nexport default Education;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Experience.js",["470","471","472","473","474"],"import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./profile.css\";\nimport Label from \"./Label\";\nimport { Row } from \"react-bootstrap\";\n\nfunction Experience({Experience, changeValue}) {\n  const [inputFields, setInputFields] = useState([\n    {\n      id: uuidv4(),\n      Company: \"\",\n      Title: \"\",\n      StartDate: \"\",\n      LastDate: \"\",\n      Location: \"\",\n      Description: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Experience\");\n  },[inputFields])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        id: uuidv4(),\n        Company: \"\",\n        Title: \"\",\n        StartDate: \"\",\n        LastDate: \"\",\n        Location: \"\",\n        Description: \"\",\n      },\n    ]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <>\n      <h2 className=\"subHeading\">Experience</h2>\n      <form className=\"experience\" onSubmit={handleSubmit}>\n        {inputFields.map((inputField) => (\n          <div key={inputField.id}>\n            <Label value=\"Company/Organization\" />\n            <br />\n            <input\n              name=\"Company\"\n              label=\"Company/organization\"\n              placeholder=\"Enter Company/organization Name\"\n              className=\"text-long\"\n              value={Experience.Company}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Title\" />\n            <br />\n            <input\n              name=\"Title\"\n              label=\"Title\"\n              placeholder=\"Enter Title\"\n              className=\"text-long\"\n              value={Experience.Title}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Row className=\"justify-content-between px-3\">\n              <div className=\"side\">\n                <Label value=\"Start Date\" />\n                <br />\n                <input\n                  name=\"StartDate\"\n                  type=\"date\"\n                  label=\"Start Date\"\n                  placeholder=\"Enter Start Date\"\n                  className=\"text-long\"\n                  value={Experience.StartDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n              <div className=\"byside\">\n                <Label value=\"Last Date\" />\n                <br />\n                <input\n                  name=\"LastDate\"\n                  type=\"date\"\n                  label=\"Last Date\"\n                  placeholder=\"Enter Last Date\"\n                  className=\"text-long\"\n                  value={Experience.LastDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n            </Row >\n            <Label value=\"Location\" />\n            <br />\n            <input\n              name=\"Location\"\n              label=\"Location\"\n              placeholder=\"Enter Location\"\n              className=\"text-long\"\n              value={Experience.Location}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Description\" />\n            <textarea\n              name=\"Description\"\n              rows=\"3\"\n              cols=\"82\"\n              label=\"Description\"\n              variant=\"filled\"\n              value={Experience.Description}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <IconButton\n              disabled={inputFields.length === 1}\n              onClick={() => handleRemoveFields(inputField.id)}\n            >\n              <RemoveIcon />\n            </IconButton>\n            <IconButton onClick={handleAddFields}>\n              <AddIcon />\n            </IconButton>\n          </div>\n        ))}\n      </form>\n      <hr />\n    </>\n  );\n}\n\nexport default Experience;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Skills.js",["475","476","477","478","479"],"import React, { useEffect } from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Input from \"./Input\";\n\nconst Skills = ({ Skills, changeValue }) => {\n  const [inputFields, setInputFields] = useState([{ Skill: \"\" }]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Skills\");\n  }, [inputFields]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { Skill: \"\" }]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <form className=\"skills edu\">\n      <h2 className=\"subHeading\">Skills</h2>\n      <Label value=\"Skills\" />\n      <br />\n      {inputFields.map((inputField) => (\n        <div key={inputField.id}>\n          <input\n            name=\"Skill\"\n            label=\"Skill\"\n            value={Skills.Skill}\n            className=\"text-long\"\n            placeholder=\"Enter your Skills\"\n            onChange={(event) => handleChangeInput(inputField.id, event)}\n          ></input>\n          <IconButton\n            disabled={inputFields.length === 1}\n            onClick={() => handleRemoveFields(inputField.id)}\n          >\n            <RemoveIcon />\n          </IconButton>\n          <IconButton onClick={handleAddFields}>\n            <AddIcon />\n          </IconButton>\n        </div>\n      ))}\n\n      <hr />\n    </form>\n  );\n};\n\nexport default Skills;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Project.js",["480","481","482","483","484"],"import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./profile.css\";\nimport Label from \"./Label\";\nimport { Row } from \"react-bootstrap\";\n\nfunction Project({ Project, changeValue }) {\n  const [inputFields, setInputFields] = useState([\n    {\n      id: uuidv4(),\n      ProjectTitle: \"\",\n      ProjectLink: \"\",\n      StartDate: \"\",\n      LastDate: \"\",\n      Description: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Project\");\n  }, [inputFields]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        id: uuidv4(),\n        ProjectTitle: \"\",\n        ProjectLink: \"\",\n        StartDate: \"\",\n        LastDate: \"\",\n        Description: \"\",\n      },\n    ]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <>\n      <h2 className=\"subHeading\">Project</h2>\n      <form className=\"projects\" onSubmit={handleSubmit}>\n        {inputFields.map((inputField) => (\n          <div key={inputField.id}>\n            <Label value=\"Project-Title\" />\n            <br />\n            <input\n              name=\"ProjectTitle\"\n              label=\"Project Name\"\n              placeholder=\"Enter Project Title\"\n              className=\"text-long\"\n              value={Project.ProjectTitle}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Label value=\"Project-Link\" />\n            <br />\n            <input\n              name=\"ProjectLink\"\n              label=\"Project Name\"\n              placeholder=\"Enter Project Title\"\n              className=\"text-long\"\n              value={Project.ProjectLink}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <Row className=\"justify-content-between px-3\">\n              <div className=\"side\">\n                <Label value=\"Start Date\" />\n                <br />\n                <input\n                  name=\"StartDate\"\n                  type=\"date\"\n                  label=\"Star Date\"\n                  placeholder=\"Enter Start Date\"\n                  className=\"text-long\"\n                  value={Project.StartDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n              <div className=\"byside\">\n                <Label value=\"Last Date\" />\n                <br />\n                <input\n                  name=\"LastDate\"\n                  type=\"date\"\n                  label=\"Last Date\"\n                  placeholder=\"Enter Last Date\"\n                  className=\"text-long\"\n                  value={Project.LastDate}\n                  onChange={(event) => handleChangeInput(inputField.id, event)}\n                />\n                <br />\n              </div>\n            </Row>\n            <Label value=\"Description\" />\n            <textarea\n              name=\"Description\"\n              rows=\"3\"\n              cols=\"82\"\n              label=\"Description\"\n              variant=\"filled\"\n              value={Project.Description}\n              onChange={(event) => handleChangeInput(inputField.id, event)}\n            />\n            <br />\n            <IconButton\n              disabled={inputFields.length === 1}\n              onClick={() => handleRemoveFields(inputField.id)}\n            >\n              <RemoveIcon />\n            </IconButton>\n            <IconButton onClick={handleAddFields}>\n              <AddIcon />\n            </IconButton>\n          </div>\n        ))}\n      </form>\n      <hr />\n    </>\n  );\n}\n\nexport default Project;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Volunteer.js",["485","486","487","488","489"],"import React, { useEffect } from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Input from \"./Input\";\n\nconst Volunteer = ({ VolunteerExperience, changeValue }) => {\n  const [inputFields, setInputFields] = useState([{ Volunteer: \"\" }]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"VolunteerExperience\");\n  },[inputFields])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { Volunteer: \"\" }]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <form className=\"volunteer\">\n      <h2 className=\"subHeading\">Volunteer Experience</h2>\n      <Label value=\"Volunteer Experience\" />\n      <br />\n      {inputFields.map((inputField) => (\n        <div key={inputField.id}>\n          <input\n            name=\"Volunteer\"\n            label=\"Volunteer\"\n            value={VolunteerExperience.skills}\n            className=\"text-long\"\n            placeholder=\"Enter your Volunteer Experience\"\n            onChange={(event) => handleChangeInput(inputField.id, event)}\n          ></input>\n          <IconButton\n            disabled={inputFields.length === 1}\n            onClick={() => handleRemoveFields(inputField.id)}\n          >\n            <RemoveIcon />\n          </IconButton>\n          <IconButton onClick={handleAddFields}>\n            <AddIcon />\n          </IconButton>\n        </div>\n      ))}\n\n      <hr />\n    </form>\n  );\n};\n\nexport default Volunteer;\n","/home/pankajkumarbij/projects/MERN Projects/easy-job-intern/src/components/student-profile/Achievments.js",["490","491","492","493","494"],"import React, { useEffect } from \"react\";\nimport \"./profile.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Label from \"./Label\";\nimport Input from \"./Input\";\n\nconst Achievments = ({Achievments, changeValue}) => {\n  const [inputFields, setInputFields] = useState([{ Achievment: \"\" }]);\n\n  useEffect(() => {\n    changeValue(inputFields, \"Achievments\");\n  },[inputFields])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map((i) => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n      return i;\n    });\n\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { Achievment: \"\" }]);\n  };\n\n  const handleRemoveFields = (id) => {\n    const values = [...inputFields];\n    values.splice(\n      values.findIndex((value) => value.id === id),\n      1\n    );\n    setInputFields(values);\n  };\n\n  return (\n    <form className=\"skills\">\n      <h2 className=\"subHeading\">Achievments</h2>\n      <Label value=\"Achievments\" />\n      <br />\n      {inputFields.map((inputField) => (\n        <div key={inputField.id}>\n          <input\n            name=\"achievments\"\n            label=\"achievments\"\n            value={inputFields.Achievment}\n            className=\"text-long\"\n            placeholder=\"Enter your achievments\"\n            onChange={(event) => handleChangeInput(inputField.id, event)}\n          ></input>\n          <IconButton\n            disabled={inputFields.length === 1}\n            onClick={() => handleRemoveFields(inputField.id)}\n          >\n            <RemoveIcon />\n          </IconButton>\n          <IconButton onClick={handleAddFields}>\n            <AddIcon />\n          </IconButton>\n        </div>\n      ))}\n\n      <hr />\n    </form>\n  );\n};\n\nexport default Achievments;\n",{"ruleId":"495","severity":1,"message":"496","line":2,"column":30,"nodeType":"497","messageId":"498","endLine":2,"endColumn":40},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":46,"column":6,"nodeType":"503","endLine":46,"endColumn":8,"suggestions":"504"},{"ruleId":"495","severity":1,"message":"505","line":49,"column":10,"nodeType":"497","messageId":"498","endLine":49,"endColumn":21},{"ruleId":"495","severity":1,"message":"500","line":13,"column":18,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":34,"column":6,"nodeType":"503","endLine":34,"endColumn":8,"suggestions":"506"},{"ruleId":"495","severity":1,"message":"505","line":48,"column":10,"nodeType":"497","messageId":"498","endLine":48,"endColumn":21},{"ruleId":"495","severity":1,"message":"496","line":2,"column":30,"nodeType":"497","messageId":"498","endLine":2,"endColumn":40},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":47,"column":6,"nodeType":"503","endLine":47,"endColumn":8,"suggestions":"507"},{"ruleId":"495","severity":1,"message":"508","line":73,"column":17,"nodeType":"497","messageId":"498","endLine":73,"endColumn":21},{"ruleId":"495","severity":1,"message":"505","line":114,"column":10,"nodeType":"497","messageId":"498","endLine":114,"endColumn":21},{"ruleId":"495","severity":1,"message":"505","line":84,"column":10,"nodeType":"497","messageId":"498","endLine":84,"endColumn":21},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"509","line":43,"column":6,"nodeType":"503","endLine":43,"endColumn":8,"suggestions":"510"},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":13,"column":18,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"501","severity":1,"message":"511","line":46,"column":6,"nodeType":"503","endLine":46,"endColumn":8,"suggestions":"512"},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":13,"column":18,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"501","severity":1,"message":"513","line":46,"column":6,"nodeType":"503","endLine":46,"endColumn":8,"suggestions":"514"},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":13,"column":18,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"501","severity":1,"message":"515","line":46,"column":6,"nodeType":"503","endLine":46,"endColumn":8,"suggestions":"516"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"509","line":45,"column":6,"nodeType":"503","endLine":45,"endColumn":8,"suggestions":"517"},{"ruleId":"495","severity":1,"message":"518","line":52,"column":11,"nodeType":"497","messageId":"498","endLine":52,"endColumn":12},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"500","line":13,"column":18,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"501","severity":1,"message":"519","line":46,"column":6,"nodeType":"503","endLine":46,"endColumn":8,"suggestions":"520"},{"ruleId":"495","severity":1,"message":"521","line":2,"column":17,"nodeType":"497","messageId":"498","endLine":2,"endColumn":27},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"522","line":3,"column":28,"nodeType":"497","messageId":"498","endLine":3,"endColumn":37},{"ruleId":"495","severity":1,"message":"523","line":4,"column":20,"nodeType":"497","messageId":"498","endLine":4,"endColumn":27},{"ruleId":"495","severity":1,"message":"524","line":4,"column":29,"nodeType":"497","messageId":"498","endLine":4,"endColumn":34},{"ruleId":"501","severity":1,"message":"525","line":34,"column":6,"nodeType":"503","endLine":34,"endColumn":8,"suggestions":"526"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"509","line":45,"column":6,"nodeType":"503","endLine":45,"endColumn":8,"suggestions":"527"},{"ruleId":"495","severity":1,"message":"518","line":49,"column":11,"nodeType":"497","messageId":"498","endLine":49,"endColumn":12},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"529","line":6,"column":8,"nodeType":"497","messageId":"498","endLine":6,"endColumn":18},{"ruleId":"495","severity":1,"message":"530","line":7,"column":8,"nodeType":"497","messageId":"498","endLine":7,"endColumn":18},{"ruleId":"495","severity":1,"message":"531","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":15},{"ruleId":"495","severity":1,"message":"532","line":9,"column":8,"nodeType":"497","messageId":"498","endLine":9,"endColumn":13},{"ruleId":"495","severity":1,"message":"533","line":11,"column":8,"nodeType":"497","messageId":"498","endLine":11,"endColumn":13},{"ruleId":"495","severity":1,"message":"505","line":117,"column":10,"nodeType":"497","messageId":"498","endLine":117,"endColumn":21},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"534","line":69,"column":6,"nodeType":"503","endLine":69,"endColumn":8,"suggestions":"535"},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"534","line":69,"column":6,"nodeType":"503","endLine":69,"endColumn":8,"suggestions":"536"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"509","line":43,"column":6,"nodeType":"503","endLine":43,"endColumn":8,"suggestions":"537"},{"ruleId":"495","severity":1,"message":"521","line":2,"column":17,"nodeType":"497","messageId":"498","endLine":2,"endColumn":27},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"522","line":3,"column":28,"nodeType":"497","messageId":"498","endLine":3,"endColumn":37},{"ruleId":"495","severity":1,"message":"523","line":4,"column":20,"nodeType":"497","messageId":"498","endLine":4,"endColumn":27},{"ruleId":"495","severity":1,"message":"524","line":4,"column":29,"nodeType":"497","messageId":"498","endLine":4,"endColumn":34},{"ruleId":"501","severity":1,"message":"525","line":34,"column":6,"nodeType":"503","endLine":34,"endColumn":8,"suggestions":"538"},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"534","line":69,"column":6,"nodeType":"503","endLine":69,"endColumn":8,"suggestions":"539"},{"ruleId":"495","severity":1,"message":"540","line":4,"column":3,"nodeType":"497","messageId":"498","endLine":4,"endColumn":7},{"ruleId":"495","severity":1,"message":"541","line":6,"column":3,"nodeType":"497","messageId":"498","endLine":6,"endColumn":11},{"ruleId":"495","severity":1,"message":"542","line":7,"column":3,"nodeType":"497","messageId":"498","endLine":7,"endColumn":12},{"ruleId":"495","severity":1,"message":"543","line":8,"column":3,"nodeType":"497","messageId":"498","endLine":8,"endColumn":16},{"ruleId":"495","severity":1,"message":"528","line":15,"column":13,"nodeType":"497","messageId":"498","endLine":15,"endColumn":17},{"ruleId":"495","severity":1,"message":"500","line":21,"column":18,"nodeType":"497","messageId":"498","endLine":21,"endColumn":26},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"544","line":71,"column":6,"nodeType":"503","endLine":71,"endColumn":8,"suggestions":"545"},{"ruleId":"495","severity":1,"message":"500","line":11,"column":18,"nodeType":"497","messageId":"498","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"534","line":42,"column":6,"nodeType":"503","endLine":42,"endColumn":8,"suggestions":"546"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"495","severity":1,"message":"500","line":17,"column":18,"nodeType":"497","messageId":"498","endLine":17,"endColumn":26},{"ruleId":"495","severity":1,"message":"547","line":10,"column":10,"nodeType":"497","messageId":"498","endLine":10,"endColumn":23},{"ruleId":"495","severity":1,"message":"500","line":14,"column":18,"nodeType":"497","messageId":"498","endLine":14,"endColumn":26},{"ruleId":"501","severity":1,"message":"548","line":45,"column":6,"nodeType":"503","endLine":45,"endColumn":20,"suggestions":"549"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"495","severity":1,"message":"521","line":2,"column":17,"nodeType":"497","messageId":"498","endLine":2,"endColumn":27},{"ruleId":"495","severity":1,"message":"499","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"522","line":3,"column":28,"nodeType":"497","messageId":"498","endLine":3,"endColumn":37},{"ruleId":"495","severity":1,"message":"523","line":4,"column":20,"nodeType":"497","messageId":"498","endLine":4,"endColumn":27},{"ruleId":"495","severity":1,"message":"524","line":4,"column":29,"nodeType":"497","messageId":"498","endLine":4,"endColumn":34},{"ruleId":"501","severity":1,"message":"525","line":34,"column":6,"nodeType":"503","endLine":34,"endColumn":8,"suggestions":"550"},{"ruleId":"495","severity":1,"message":"500","line":17,"column":18,"nodeType":"497","messageId":"498","endLine":17,"endColumn":26},{"ruleId":"495","severity":1,"message":"505","line":98,"column":10,"nodeType":"497","messageId":"498","endLine":98,"endColumn":21},{"ruleId":"501","severity":1,"message":"551","line":135,"column":6,"nodeType":"503","endLine":135,"endColumn":8,"suggestions":"552"},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"529","line":6,"column":8,"nodeType":"497","messageId":"498","endLine":6,"endColumn":18},{"ruleId":"495","severity":1,"message":"530","line":7,"column":8,"nodeType":"497","messageId":"498","endLine":7,"endColumn":18},{"ruleId":"495","severity":1,"message":"531","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":15},{"ruleId":"495","severity":1,"message":"554","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":13},{"ruleId":"495","severity":1,"message":"555","line":13,"column":10,"nodeType":"497","messageId":"498","endLine":13,"endColumn":20},{"ruleId":"495","severity":1,"message":"556","line":14,"column":10,"nodeType":"497","messageId":"498","endLine":14,"endColumn":13},{"ruleId":"495","severity":1,"message":"557","line":14,"column":15,"nodeType":"497","messageId":"498","endLine":14,"endColumn":18},{"ruleId":"501","severity":1,"message":"558","line":53,"column":6,"nodeType":"503","endLine":53,"endColumn":8,"suggestions":"559"},{"ruleId":"495","severity":1,"message":"500","line":12,"column":18,"nodeType":"497","messageId":"498","endLine":12,"endColumn":26},{"ruleId":"501","severity":1,"message":"509","line":45,"column":6,"nodeType":"503","endLine":45,"endColumn":8,"suggestions":"560"},{"ruleId":"495","severity":1,"message":"518","line":52,"column":11,"nodeType":"497","messageId":"498","endLine":52,"endColumn":12},{"ruleId":"495","severity":1,"message":"505","line":98,"column":10,"nodeType":"497","messageId":"498","endLine":98,"endColumn":21},{"ruleId":"501","severity":1,"message":"561","line":124,"column":6,"nodeType":"503","endLine":124,"endColumn":8,"suggestions":"562"},{"ruleId":"495","severity":1,"message":"505","line":98,"column":10,"nodeType":"497","messageId":"498","endLine":98,"endColumn":21},{"ruleId":"501","severity":1,"message":"561","line":124,"column":6,"nodeType":"503","endLine":124,"endColumn":8,"suggestions":"563"},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"532","line":9,"column":8,"nodeType":"497","messageId":"498","endLine":9,"endColumn":13},{"ruleId":"495","severity":1,"message":"564","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":14},{"ruleId":"495","severity":1,"message":"533","line":11,"column":8,"nodeType":"497","messageId":"498","endLine":11,"endColumn":13},{"ruleId":"501","severity":1,"message":"565","line":20,"column":5,"nodeType":"503","endLine":20,"endColumn":18,"suggestions":"566"},{"ruleId":"495","severity":1,"message":"567","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":18},{"ruleId":"495","severity":1,"message":"567","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":18},{"ruleId":"495","severity":1,"message":"567","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":18},{"ruleId":"495","severity":1,"message":"567","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":18},{"ruleId":"568","severity":1,"message":"569","line":193,"column":13,"nodeType":"570","endLine":193,"endColumn":52},{"ruleId":"495","severity":1,"message":"571","line":7,"column":17,"nodeType":"497","messageId":"498","endLine":7,"endColumn":24},{"ruleId":"495","severity":1,"message":"500","line":10,"column":18,"nodeType":"497","messageId":"498","endLine":10,"endColumn":26},{"ruleId":"568","severity":1,"message":"569","line":209,"column":11,"nodeType":"570","endLine":209,"endColumn":50},{"ruleId":"495","severity":1,"message":"571","line":7,"column":17,"nodeType":"497","messageId":"498","endLine":7,"endColumn":24},{"ruleId":"495","severity":1,"message":"500","line":10,"column":18,"nodeType":"497","messageId":"498","endLine":10,"endColumn":26},{"ruleId":"568","severity":1,"message":"569","line":215,"column":11,"nodeType":"570","endLine":215,"endColumn":50},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"533","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":13},{"ruleId":"501","severity":1,"message":"565","line":17,"column":6,"nodeType":"503","endLine":17,"endColumn":19,"suggestions":"572"},{"ruleId":"495","severity":1,"message":"573","line":19,"column":9,"nodeType":"497","messageId":"498","endLine":19,"endColumn":21},{"ruleId":"574","severity":1,"message":"575","line":41,"column":43,"nodeType":"576","messageId":"577","endLine":41,"endColumn":45},{"ruleId":"495","severity":1,"message":"578","line":2,"column":8,"nodeType":"497","messageId":"498","endLine":2,"endColumn":17},{"ruleId":"495","severity":1,"message":"579","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":17},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":12},{"ruleId":"501","severity":1,"message":"565","line":30,"column":5,"nodeType":"503","endLine":30,"endColumn":18,"suggestions":"580"},{"ruleId":"495","severity":1,"message":"578","line":2,"column":8,"nodeType":"497","messageId":"498","endLine":2,"endColumn":17},{"ruleId":"495","severity":1,"message":"579","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":17},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":12},{"ruleId":"501","severity":1,"message":"565","line":29,"column":5,"nodeType":"503","endLine":29,"endColumn":18,"suggestions":"581"},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"533","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":13},{"ruleId":"501","severity":1,"message":"565","line":17,"column":6,"nodeType":"503","endLine":17,"endColumn":19,"suggestions":"582"},{"ruleId":"495","severity":1,"message":"573","line":19,"column":9,"nodeType":"497","messageId":"498","endLine":19,"endColumn":21},{"ruleId":"495","severity":1,"message":"578","line":2,"column":8,"nodeType":"497","messageId":"498","endLine":2,"endColumn":17},{"ruleId":"495","severity":1,"message":"579","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":17},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":12},{"ruleId":"501","severity":1,"message":"565","line":28,"column":6,"nodeType":"503","endLine":28,"endColumn":19,"suggestions":"583"},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"533","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":13},{"ruleId":"501","severity":1,"message":"565","line":17,"column":5,"nodeType":"503","endLine":17,"endColumn":18,"suggestions":"584"},{"ruleId":"495","severity":1,"message":"573","line":20,"column":9,"nodeType":"497","messageId":"498","endLine":20,"endColumn":21},{"ruleId":"495","severity":1,"message":"553","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"528","line":5,"column":8,"nodeType":"497","messageId":"498","endLine":5,"endColumn":12},{"ruleId":"495","severity":1,"message":"533","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":13},{"ruleId":"501","severity":1,"message":"565","line":17,"column":5,"nodeType":"503","endLine":17,"endColumn":18,"suggestions":"585"},{"ruleId":"495","severity":1,"message":"573","line":20,"column":9,"nodeType":"497","messageId":"498","endLine":20,"endColumn":21},"no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.user._id'. Either include it or remove the dependency array.","ArrayExpression",["586"],"'formIsValid' is assigned a value but never used.",["587"],["588"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'internships'. Either include it or remove the dependency array.",["589"],"React Hook useEffect has missing dependencies: 'internships' and 'location'. Either include them or remove the dependency array.",["590"],"React Hook useEffect has missing dependencies: 'industry' and 'internships'. Either include them or remove the dependency array.",["591"],"React Hook useEffect has missing dependencies: 'companyName' and 'internships'. Either include them or remove the dependency array.",["592"],["593"],"'t' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'internships' and 'stream'. Either include them or remove the dependency array.",["594"],"'useContext' is defined but never used.","'useParams' is defined but never used.","'Spinner' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'names'. Either include it or remove the dependency array.",["595"],["596"],"'Icon' is defined but never used.","'IconButton' is defined but never used.","'RemoveIcon' is defined but never used.","'AddIcon' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'jobs'. Either include it or remove the dependency array.",["597"],["598"],["599"],["600"],["601"],"'Card' is defined but never used.","'Dropdown' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","React Hook useEffect has missing dependencies: 'companyName' and 'jobs'. Either include them or remove the dependency array.",["602"],["603"],"'CompareArrows' is defined but never used.","React Hook useEffect has a missing dependency: 'companyName'. Either include it or remove the dependency array.",["604"],["605"],"React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.",["606"],"'Button' is defined but never used.","'Start' is defined but never used.","'useHistory' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["607"],["608"],"React Hook useEffect has missing dependencies: 'job' and 'postId'. Either include them or remove the dependency array.",["609"],["610"],"'Skills' is defined but never used.","React Hook useEffect has a missing dependency: 'changeValue'. Either include it or remove the dependency array. If 'changeValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["611"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Toaster' is defined but never used.",["612"],"'handleSubmit' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Container' is defined but never used.","'TextField' is defined but never used.",["613"],["614"],["615"],["616"],["617"],["618"],{"desc":"619","fix":"620"},{"desc":"619","fix":"621"},{"desc":"619","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"623","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"623","fix":"636"},{"desc":"637","fix":"638"},{"desc":"637","fix":"639"},{"desc":"623","fix":"640"},{"desc":"634","fix":"641"},{"desc":"637","fix":"642"},{"desc":"643","fix":"644"},{"desc":"637","fix":"645"},{"desc":"646","fix":"647"},{"desc":"634","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"623","fix":"653"},{"desc":"654","fix":"655"},{"desc":"654","fix":"656"},{"desc":"657","fix":"658"},{"desc":"657","fix":"659"},{"desc":"657","fix":"660"},{"desc":"657","fix":"661"},{"desc":"657","fix":"662"},{"desc":"657","fix":"663"},{"desc":"657","fix":"664"},{"desc":"657","fix":"665"},"Update the dependencies array to be: [state.user._id]",{"range":"666","text":"667"},{"range":"668","text":"667"},{"range":"669","text":"667"},"Update the dependencies array to be: [internships]",{"range":"670","text":"671"},"Update the dependencies array to be: [internships, location]",{"range":"672","text":"673"},"Update the dependencies array to be: [industry, internships]",{"range":"674","text":"675"},"Update the dependencies array to be: [companyName, internships]",{"range":"676","text":"677"},{"range":"678","text":"671"},"Update the dependencies array to be: [internships, stream]",{"range":"679","text":"680"},"Update the dependencies array to be: [names]",{"range":"681","text":"682"},{"range":"683","text":"671"},"Update the dependencies array to be: [jobs]",{"range":"684","text":"685"},{"range":"686","text":"685"},{"range":"687","text":"671"},{"range":"688","text":"682"},{"range":"689","text":"685"},"Update the dependencies array to be: [companyName, jobs]",{"range":"690","text":"691"},{"range":"692","text":"685"},"Update the dependencies array to be: [companyName, freshersJobs]",{"range":"693","text":"694"},{"range":"695","text":"682"},"Update the dependencies array to be: [internship, postId]",{"range":"696","text":"697"},"Update the dependencies array to be: [profile]",{"range":"698","text":"699"},{"range":"700","text":"671"},"Update the dependencies array to be: [job, postId]",{"range":"701","text":"702"},{"range":"703","text":"702"},"Update the dependencies array to be: [changeValue, inputFields]",{"range":"704","text":"705"},{"range":"706","text":"705"},{"range":"707","text":"705"},{"range":"708","text":"705"},{"range":"709","text":"705"},{"range":"710","text":"705"},{"range":"711","text":"705"},{"range":"712","text":"705"},[1220,1222],"[state.user._id]",[1141,1143],[1361,1363],[1325,1327],"[internships]",[1431,1433],"[internships, location]",[1431,1433],"[industry, internships]",[1439,1441],"[companyName, internships]",[1398,1400],[1423,1425],"[internships, stream]",[1037,1039],"[names]",[1402,1404],[1993,1995],"[jobs]",[2011,2013],[1343,1345],[1009,1011],[2007,2009],[2106,2108],"[companyName, jobs]",[1225,1227],[1504,1518],"[companyName, freshersJobs]",[1041,1043],[3401,3403],"[internship, postId]",[1695,1697],"[profile]",[1402,1404],[2830,2832],"[job, postId]",[2815,2817],[706,719],"[changeValue, inputFields]",[579,592],[877,890],[859,872],[581,594],[844,857],[613,626],[598,611]]