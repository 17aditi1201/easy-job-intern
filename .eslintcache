[{"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js":"1","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js":"2","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js":"3","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"4","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js":"5","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js":"6","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js":"7","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js":"8","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"9","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"10","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"11","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"12","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"13","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"14","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js":"15","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js":"16","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js":"17","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"18","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"19"},{"size":517,"mtime":1617712689619,"results":"20","hashOfConfig":"21"},{"size":2795,"mtime":1617783770680,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1617712043731,"results":"23","hashOfConfig":"21"},{"size":6704,"mtime":1617783804546,"results":"24","hashOfConfig":"21"},{"size":7014,"mtime":1617712043721,"results":"25","hashOfConfig":"21"},{"size":10271,"mtime":1617772989944,"results":"26","hashOfConfig":"21"},{"size":17312,"mtime":1617772967182,"results":"27","hashOfConfig":"21"},{"size":7706,"mtime":1617772989955,"results":"28","hashOfConfig":"21"},{"size":1754,"mtime":1617712043725,"results":"29","hashOfConfig":"21"},{"size":14577,"mtime":1617772989936,"results":"30","hashOfConfig":"21"},{"size":6913,"mtime":1617712043718,"results":"31","hashOfConfig":"21"},{"size":3937,"mtime":1617772989931,"results":"32","hashOfConfig":"21"},{"size":7746,"mtime":1617772989933,"results":"33","hashOfConfig":"21"},{"size":2196,"mtime":1617712043729,"results":"34","hashOfConfig":"21"},{"size":1863,"mtime":1617712043732,"results":"35","hashOfConfig":"21"},{"size":374,"mtime":1617772989927,"results":"36","hashOfConfig":"21"},{"size":174,"mtime":1617772989957,"results":"37","hashOfConfig":"21"},{"size":9089,"mtime":1617776186643,"results":"38","hashOfConfig":"21"},{"size":8133,"mtime":1617783927564,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1gbhm1z",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js",[],["88","89"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js",["90","91","92"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js",["93","94","95"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js",["96","97","98","99"],"import Button from \"react-bootstrap/Button\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() { \r\n  return (\r\n    <>\r\n        <footer className=\" bg-dark text-white newFooter\" style={{padding: \"0px\", margin:\"0px\", backgroundColor:\"#1A2226\"}}> \r\n       {/* <div className=\"container\" style={{padding: \"0px\", margin:\"0px\", width:'100%'}}>*/}  {/*</div> */}\r\n        <div className=\"row\" style={{padding: \"0px\", width:'100%', marginLeft:'0px'}}>\r\n               \r\n              {/* Column 1 */}\r\n        <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Online Trainings</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Advanced Excel\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Data Science and ML\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Core Java\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Digital Marketing\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n              {/* Column 2 */}\r\n        <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Internship by Places</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                   Mumbai\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Delhi\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Bangalore\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    PAN India\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n             {/* Column 3 */}\r\n          <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Internship by Stream</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                   Computer Science\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Content Marketing\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Summer Research Fellowship\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Electical Engineering\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n              {/* Column 4 */}\r\n          <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>About Easy Job Intern</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/about-us\" >\r\n                   About Us\r\n                </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/contact-us\" >\r\n                  Contact Us\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/terms-conditions\" >\r\n                  Terms and Condition\r\n              </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/privacy-policy\" >\r\n                  Privacy Policy\r\n                </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n          {/* Footer Bottom */}\r\n          <div className=\"row  mx-auto\">\r\n            <div className=\"col-sm-12 mt-md-2  my-2\">\r\n              <p style={{ fontSize: \"15px\", marginBottom: \"5px\" }}>\r\n                Connect With Us!\r\n              </p>\r\n              <a href=\"#\">\r\n                <Icon.Linkedin\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Linkedin>{\" \"}\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Facebook\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Facebook>\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Twitter\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Twitter>\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Youtube\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Youtube>{\" \"}\r\n              </a>\r\n              <br />\r\n              <span style={{ fontSize: \"8px\" }}>\r\n                &copy; 2021 - All right reserved - Easy Job Intern\r\n              </span>\r\n            </div>\r\n            </div>\r\n         </div>\r\n        \r\n        </footer> \r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Home = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  console.log(state);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"home\">\r\n\r\n        <div\r\n          style={{ backgroundColor: \"\" }}\r\n          \r\n          class=\"col d-flex justify-content-center\"\r\n        >\r\n          {!state && <Card\r\n            style={{\r\n              width: \"75vh\",\r\n              marginTop: \"6%\",\r\n              opacity: \"0.8\",\r\n              background: \"black\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <h2>Easy Job Intern</h2>\r\n                FIND BEST WINTER & SUMMER INTERNSHIPS FOR STUDENTS IN INDIA<br></br>\r\n                Apply to 10,000+ internships for free!\r\n              </Card.Text>\r\n              <Button style={{color: '#000000',backgroundColor: '#ffc107',borderColor: 'white'}} variant=\"info\" as={Link} to=\"/student-signup\" >\r\n                Get Started \r\n              </Button>\r\n            </Card.Body>\r\n          </Card>}\r\n        </div>\r\n        <div style={{ background: \"\", padding: \"30px 0 80px 0\" }}>\r\n        \r\n          <Container>\r\n          \r\n            <Row>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/industry.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Internship By Industry\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">IT</ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Marketing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Design\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      MBA\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Engineering\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Media\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Teaching\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Finance\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/location.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  {\" \"}\r\n                  Internship By Location\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">Mumbai</ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Pune\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Bangalore\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Chennai\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Kolkata\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Gugaon\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Delhi\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      India\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/stream.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Internship By Stream\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">\r\n                      Management\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Manufacturing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Accounts\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Architecture\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Machine Learning\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Data Science\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Development\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Design\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/ot2.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Online Trainings by Us\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">\r\n                      Programming With Python\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Digital Marketing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Web Development\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Machine Learning\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Advanced Excel\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Ethical Hacking\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      AutoCAD\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Creative Writing\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js",["133","134"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nconst StudentSignup = () => {\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    personName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    degree: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    institutionName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    branch: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    year: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      personName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/student/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          branch: branch.value,\r\n          year: year.value,\r\n          degree: degree.value,\r\n          institutionName: institutionName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*  Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.password.valid && formValues.password.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type={formValues.showPassword?\"text\":\"password\"}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={formValues.password.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.password.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.password.errorMessage}\r\n                  </span>\r\n                )}\r\n                <InputGroup.Append>\r\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                        <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                        >\r\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton> \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Confirm Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.degree.valid && formValues.degree.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={formValues.degree.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.institutionName.valid &&\r\n                    formValues.institutionName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={formValues.institutionName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.branch.valid && formValues.branch.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={formValues.branch.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.year.valid && formValues.year.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={formValues.year.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Already a user? */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/student-login\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js",["135","136","137","138"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form, Alert, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nfunction LoginForm() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/student/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          alert(res.data.error);\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          dispatch({ type: \"USER\", payload: res.data.user });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          alert(\"Signin Successfull\");\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n    setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n  \r\n};\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className='register_card_custom'\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword?\"text\":\"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                 </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/student-signup\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",["139","140","141"],"import React, { Component , useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport './employer.css';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\n\r\nconst EmployerSignup = () => {\r\n  //listing initial states of the fields present in the form\r\n    const initialState = {\r\n      companyName:{\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 8,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      passwordConfirmation: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 8,\r\n          checkPassword: true,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      showPassword: false,\r\n  \r\n      contact: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          Length:10 ,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      personName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n        },\r\n        errorMessage: \"\",\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    };\r\n    \r\n    const [formValues, setFormValues] = useState(initialState);\r\n    const [signupError, setSignupError] = useState(null);\r\n  \r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n  \r\n  \r\n  \r\n    const handleChange = (e) => {\r\n      const updatedFormValues = { ...formValues };\r\n      const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n      updatedFormElement.value = e.target.value;\r\n      let validOutput = checkValidity(\r\n        updatedFormElement.value,\r\n        updatedFormElement.validation,\r\n        updatedFormValues.password.value\r\n      );\r\n      updatedFormElement.valid = validOutput[0];\r\n      updatedFormElement.errorMessage = validOutput[1];\r\n      updatedFormElement.touched = true;\r\n      updatedFormValues[e.target.name] = updatedFormElement;\r\n  \r\n      let formValid = true;\r\n      for (let inputIdentifiers in updatedFormValues) {\r\n        formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n      }\r\n      setFormValues(updatedFormValues);\r\n      setFormIsValid(formValid);\r\n    };\r\n  \r\n    const passwordIsValidChecker = () => {\r\n      const { password, passwordConfirmation } = formValues;\r\n      return password.value === passwordConfirmation.value;\r\n    };\r\n  \r\n  \r\n    const submitSignup = (e) => {\r\n  \r\n      const {\r\n        companyName,\r\n        email,\r\n        password,\r\n        passwordConfirmation,\r\n        personName,\r\n        contact\r\n  \r\n      } = formValues;\r\n  \r\n      e.preventDefault();\r\n      if (!passwordIsValidChecker()) {\r\n        setSignupError(\"Passwords do not match\");\r\n        return;\r\n      } else {\r\n        axios\r\n          .post(\"http://localhost:5000/employer/signup\", {\r\n            personName: personName.value,\r\n            email: email.value,\r\n            password: password.value,\r\n            contact: contact.value,\r\n            passwordConfirmation: passwordConfirmation.value,\r\n            companyName: companyName.value,\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data.user);\r\n            alert(res.data.message);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      setFormValues(initialState);\r\n    };\r\n    const togglePasswordVisiblity = () => { \r\n      \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n   \r\n      return (\r\n        <>\r\n          <div style={{ padding: \"4vh 0\" }}>\r\n            <Card\r\n              style={{\r\n                width: \"40vw\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"4vh\",\r\n                marginBottom: \"4vh\",\r\n                backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n              }}\r\n              className=\"employer_form_card_custom\"\r\n            >\r\n              <Card.Header\r\n                style={{\r\n                  backgroundColor: \"#6c6c6c\",\r\n                  color: \"#6EE2CD\",\r\n                  fontFamily: '\"Merriweather\", serif',\r\n                  fontSize: \"1.25rem\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                Employer Signup\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form onSubmit={(e) => submitSignup(e)}>\r\n  \r\n                {/* Name of the company */}\r\n                  <Form.Group style={{ textAlign: \"left\" }}>\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Company Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    className={`${\r\n                      !formValues.companyName.valid &&\r\n                      formValues.companyName.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the company name\"\r\n                    name=\"companyName\"\r\n                    value={formValues.companyName.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                   {formValues.companyName.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.companyName.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  </Form.Group>\r\n  \r\n                    {/*Email  */}\r\n                  <Form.Group\r\n                    style={{ textAlign: \"left\" }}\r\n                    controlId=\"formBasicEmail\"\r\n                    \r\n                  >\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Email address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    className={`${\r\n                      !formValues.email.valid && formValues.email.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                      style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                    value={formValues.email.value}\r\n                    onChange={handleChange}\r\n                    />\r\n                    {formValues.email.errorMessage && (\r\n                    <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                  )}\r\n                  </Form.Group>\r\n  \r\n                  {/* Password */}\r\n                  <Form.Group\r\n                    style={{ textAlign: \"left\" }}\r\n                    controlId=\"formBasicPassword\"\r\n                  >\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Password\r\n                    </Form.Label>\r\n                    <InputGroup>\r\n                      <Form.Control\r\n                        className={`${\r\n                        !formValues.password.valid && formValues.password.touched\r\n                          ? \"input-error\"\r\n                          : \"\"\r\n                        }`}\r\n                        style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                        type={formValues.showPassword?\"text\":\"password\"}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formValues.password.value}\r\n                        onChange={handleChange}\r\n                      />\r\n                        {formValues.password.errorMessage && (\r\n                          <span className=\"error\">\r\n                            {formValues.password.errorMessage}\r\n                          </span>\r\n                        )}\r\n                      <InputGroup.Append>\r\n                        <InputGroup.Text style={{borderColor: \"#6EE2CD\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                          <IconButton style={{width: \"25px\"}}\r\n                            onClick={togglePasswordVisiblity}\r\n                          >\r\n                            {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton> \r\n                        </InputGroup.Text>\r\n                      </InputGroup.Append>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  {/* Password Confirmation */}\r\n                  <Form.Group\r\n                    style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                    controlId=\"formBasicPassword\"\r\n                  >\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Confirm Password\r\n                    </Form.Label>\r\n                    <InputGroup>\r\n                      <Form.Control\r\n                         className={`${\r\n                            !formValues.passwordConfirmation.valid &&\r\n                            formValues.passwordConfirmation.touched\r\n                              ? \"input-error\"\r\n                              : \"\"\r\n                         }`}\r\n                         style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                      type=\"password\"\r\n                      placeholder=\"Re-enter Password\"\r\n                      name=\"passwordConfirmation\"\r\n                      value={formValues.passwordConfirmation.value}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {formValues.passwordConfirmation.errorMessage && (\r\n                      <span className=\"error\">\r\n                        {formValues.passwordConfirmation.errorMessage}\r\n                      </span>\r\n                    )}\r\n                      <InputGroup.Append>\r\n                        <InputGroup.Text style={{borderColor: \"#6EE2CD\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                          <IconButton style={{width: \"25px\"}}\r\n                            onClick={togglePasswordVisiblity}\r\n                          >\r\n                            {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton> \r\n                        </InputGroup.Text>\r\n                      </InputGroup.Append>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  {/* Person Name */}\r\n                  <Form.Group\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                    <Form.Control\r\n                       className={`${\r\n                      !formValues.personName.valid &&\r\n                      formValues.personName.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    name=\"personName\"\r\n                    value={formValues.personName.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.personName.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.personName.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  </Form.Group>\r\n  \r\n                  {/* contact */}\r\n                  <Form.Group\r\n                    style={{ textAlign: \"left\" }}\r\n                    \r\n                  >\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Contact\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                     className={`${\r\n                      !formValues.contact.valid && formValues.contact.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"number\"\r\n                    placeholder=\"Enter your contact number\"\r\n                    name=\"contact\"\r\n                    value={formValues.contact.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.contact.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.contact.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  </Form.Group>\r\n                    {/* For Existing user */}\r\n                  <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                    <Link to=\"/employer-login\">\r\n                      <a style={{ fontWeight: \"bold\" }}>\r\n                        Already have an account? Sign in\r\n                      </a>\r\n                    </Link>\r\n                  </Form.Group>\r\n  \r\n                  {signupError ? (\r\n                  <Form.Text\r\n                    style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                    className=\"text-danger\"\r\n                  >\r\n                    {signupError}\r\n                  </Form.Text>\r\n                ) : null}\r\n                  <Button\r\n                    style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                    variant=\"secondary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </>\r\n      );\r\n  };\r\n\r\n \r\nexport default EmployerSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",["142","143","144","145","146"],"import React, { useState} from 'react'\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport './contact-us.css'\r\n\r\nconst ContactUs = () => {\r\n \r\n  \r\n  const [firstName,setfirstName] = useState(\"\");\r\n  const [email,setEmail] = useState(\"\");\r\n  const [mobile,setMobile] = useState();\r\n  const [lastName, setlastName] = useState(\"\");\r\n  const [messages, setmessages] = useState(\"\");\r\n\r\n\r\n  const [firstNameErr,setfirstNameErr] = useState({});\r\n  const [lastNameErr,setlastNameErr] = useState({});\r\n  const [emailErr,setemailErr] = useState({});\r\n  const [mobileErr,setmobileErr] = useState({});\r\n  const [messageErr,setmessagesErr] = useState({});\r\n\r\n  \r\n  const API_KEY = process.env.FORMSPREE_API_KEY\r\n\r\n  const [serverState, setServerState] = useState({\r\n    submitting: false,\r\n    status: null\r\n  })\r\n\r\n\r\n  const handleServerResponse = (ok, msg, form) => {\r\n    setServerState({\r\n      submitting: false,\r\n      status: { ok, msg }\r\n    });\r\n    if (ok) {\r\n      form.reset();\r\n    }\r\n  }\r\n  \r\n  const submitContactUs = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const isValid = formValidations() ;\r\n\r\n    console.log(firstName);\r\n    if (isValid) {\r\n    const form = e.target;\r\n    setServerState({ submitting: true });\r\n    const url = `https://formspree.io/f/${API_KEY}`\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      body: JSON.stringify({\r\n        firstName: firstName ,\r\n        lastName: lastName,\r\n        email: email,\r\n        mobile: mobile,  \r\n        messages: messages\r\n      }),\r\n    })\r\n    .then(r => {\r\n      handleServerResponse(true, \"Thanks for contacting us.\", form);\r\n    })\r\n    .catch(r => {\r\n      handleServerResponse(false, \"Not able to submit!\", form);\r\n    });\r\n    setfirstName(\"\");\r\n    setlastName(\"\");\r\n    setEmail(\"\");\r\n    setMobile(\"\");\r\n    setmessages(\"\");\r\n    }\r\n  }\r\n      \r\n  const formValidations = () => {\r\n\r\n    const firstNameErr = {} ;\r\n    const lastNameErr = {} ;\r\n    const emailErr = {} ;\r\n    const mobileErr = {} ;\r\n    const messageErr = {} ;\r\n\r\n    let isValid = true; \r\n\r\n\r\n    if(!firstName){\r\n      firstNameErr.firstNameEmpty = \"*This field is empty*\";\r\n      isValid = false ;\r\n    }else if(firstName.trim().length < 3){\r\n      firstNameErr.firstNameShort = \"*first name is too short*\";\r\n      isValid = false ;\r\n    }else if(firstName.trim().length >= 10){\r\n      firstNameErr.firstNameLong = \"*first name is too long*\";\r\n      isValid = false ;\r\n    }\r\n\r\n    if(!lastName){\r\n      lastNameErr.lastNameEmpty = \"*This field is empty*\";\r\n      isValid = false ;\r\n    }else if(lastName.trim().length < 3){\r\n      lastNameErr.lastNameShort = \"*last name is too short*\";\r\n      isValid = false ;\r\n    }else if(lastName.trim().length >= 10){\r\n      lastNameErr.lastNameLong = \"*last name is too long*\";\r\n      isValid = false ;\r\n    }\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (!email) {\r\n      emailErr.emailRequired = \"*Email is required*\";\r\n      isValid = false;\r\n    }else if (!emailRegex.test(email)) {\r\n      emailErr.emailValid =\"*Please Enter Valid Email*\";\r\n      isValid = false;\r\n    }\r\n\r\n    const pattern = /^\\d+$/;\r\n\r\n    if (!mobile){\r\n        mobileErr.mobileEmpty= '*This field is empty*';\r\n      isValid = false;\r\n    }else if (!pattern.test(mobile)){\r\n        mobileErr.mobileRequired = \"Required field should be a number\";\r\n        isValid = false;\r\n    }else if (mobile.trim().length < 10 ){\r\n      mobileErr.mobileLenght = \"Required field should be a valid number\";\r\n        isValid = false;\r\n    }\r\n\r\n    if(!messages){\r\n        messageErr.messageEmpty= \"*This field is empty*\";\r\n        isValid = false ;\r\n      }else if(messages.trim().length < 3){\r\n        messageErr.messageShort = \"*message is too short*\";\r\n        isValid = false ;\r\n      }\r\n\r\n\r\n\r\n    setfirstNameErr(firstNameErr);\r\n    setlastNameErr(lastNameErr);\r\n    setemailErr(emailErr);\r\n    setmobileErr(mobileErr);\r\n    setmessagesErr(messageErr);\r\n\r\n    return isValid ;\r\n  }\r\n\r\n  return (\r\n    <div className=\"background\" >\r\n      <div className=\"form\">\r\n        <h3>Contact Us</h3>\r\n        <Form className=\"contactUs\" onSubmit={submitContactUs}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"firstName\" name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              className=\"form-control\"\r\n              onChange={ (e) =>{setfirstName(e.target.value)} }/>\r\n\r\n          {Object.keys(firstNameErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{firstNameErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"lastName\" name=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setlastName(e.target.value) } }/>\r\n\r\n          {Object.keys(lastNameErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{lastNameErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"email\" name=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setEmail(e.target.value)} }/>\r\n              \r\n         {Object.keys(emailErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{emailErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"number\" id=\"mobile\" name=\"mobile\"\r\n              placeholder=\"Enter mobile no.\"\r\n              value={mobile}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setMobile(e.target.value)} } />\r\n\r\n           {Object.keys(mobileErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{mobileErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"textarea\" id=\"messages\" name=\"messages\"\r\n              placeholder=\"Enter message\"\r\n              rows=\"12\"\r\n              value={messages}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setmessages(e.target.value)} }/>\r\n\r\n           {Object.keys(messageErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{messageErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Button variant=\"warning\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          {serverState.status && (\r\n            <p className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\r\n              {serverState.status.msg}\r\n            </p>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactUs;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js",["147","148","149","150"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./about-us.css\";\r\n\r\nexport default function AboutUs() {\r\n  return (\r\n    <>\r\n      <div class=\"aboutus\">\r\n        <h2 class=\"about-heading\">About Us</h2>\r\n\r\n        <div class=\"col d-flex justify-content-center\">\r\n          <Card\r\n            style={{\r\n              width: \"80%\",\r\n              marginTop: \"2%\",\r\n              opacity: \"0.8\",\r\n              background: \"#30363d\",\r\n              color: \"white\",\r\n              paddingTop: \"1.2rem\",\r\n              paddingBottom: \"1.2rem\",\r\n              border: \"2px solid white\",\r\n              boxShadow: \"0 0 20px 2px rgba(0, 0, 0, 0.5)\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Row>\r\n                <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                  <img src=\"images/32.-Discussion.png\" class=\"about-img\"></img>\r\n                </div>\r\n                <div\r\n                  class=\"col-lg-6 col-md-12 col-sm-12  about-part\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    placeContent: \"center\",\r\n                  }}\r\n                >\r\n                  Our main motive behind this project to provide the best jobs\r\n                  and internship opportunities. Companies can post here open\r\n                  application for job and internship so students can make own\r\n                  profile and apply in multiple companies. We want to make this\r\n                  website for the purpose of connecting students to companies .\r\n                  You can explore the job and internship opportunities according\r\n                  to your convience. We also have online trainings session for\r\n                  you. We connect you and your requirements on the same page.\r\n                  You can fill your application for your internship or your jobs\r\n                  on the same place and get the response .\r\n                </div>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        <h2 class=\"about-heading1\">What we offer ?</h2>\r\n\r\n        <div style={{ padding: \"0% 10% 0% 10%\" }}>\r\n          <Container fluid>\r\n            <Row>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\" id=\"offer-range1\">\r\n                <img src=\"images/INTERN SHIP.png\"></img>\r\n\r\n                <h4>Internships</h4>\r\n                <p>\r\n                  Are you looking for students internship? Find the best winter\r\n                  & summer internships for college students in Engineering, MBA,\r\n                  IT, Media, Finance & other streams.\r\n                </p>\r\n\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\" id=\"offer-range2\">\r\n                <img src=\"images/INTERN SHIP (1).png\"></img>\r\n                <h4>Fresher's Jobs</h4>\r\n\r\n                <p>\r\n                  Are you a Fresher ? Go and explore it and start your journey\r\n                  according to your requirements ,your choices .We all have for\r\n                  you.\r\n                </p>\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-12 col-sm-12\" id=\"offer-range3\">\r\n                <img src=\"images/JOB - Logo - Google Chrome 27-03-2021 19_58_07 (2).png\"></img>\r\n                <h4>Jobs</h4>\r\n                <p class=\"para\">\r\n                  Are you looking for jobs ? Then it is the right place .Choose\r\n                  your job according to your experience , your interest.Make the\r\n                  wise choice .\r\n                </p>\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["151","152","153","154","155"],"import React, { Component , useContext, useState } from \"react\";\r\nimport { Button, Card, Form, Alert , InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport './employer.css';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\n\r\n\r\nfunction EmployerSignin(){\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          alert(res.data.error);\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          dispatch({ type: \"USER\", payload: res.data.user });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          alert(\"Signin Successfull\");\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n    setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n  \r\n};\r\nreturn (\r\n  <>\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Card\r\n        style={{\r\n          width: \"40vw\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          marginTop: \"4vh\",\r\n          marginBottom: \"4vh\",\r\n          backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n        }}\r\n        className='employer_form_card_custom'\r\n      >\r\n        <Card.Header\r\n          style={{\r\n            backgroundColor: \"#6c6c6c\",\r\n            color: \"#ffc107\",\r\n            fontFamily: '\"Merriweather\", serif',\r\n            fontSize: \"1.25rem\",\r\n          }}\r\n          as=\"h5\"\r\n        >\r\n          Employer Signin\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={(e) => submitSignin(e)}>\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n             \r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Email address\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicPassword\"\r\n              \r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Password\r\n              </Form.Label>\r\n              \r\n              <InputGroup> \r\n                     \r\n                <Form.Control\r\n                   style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword?\"text\":\"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                    <IconButton style={{width: \"25px\"}}\r\n                      onClick={togglePasswordVisiblity}\r\n                    >\r\n                      {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton> \r\n                  </InputGroup.Text>\r\n                </InputGroup.Append>\r\n              \r\n              </InputGroup> \r\n              \r\n              \r\n              \r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/employer-signup\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n            </Form.Group>\r\n            <Button\r\n              style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n              variant=\"secondary\"\r\n              type=\"submit\"\r\n            >\r\n              Signin\r\n            </Button>\r\n            \r\n          </Form>\r\n          \r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  </>\r\n);\r\n}\r\n\r\n\r\n\r\n\r\nexport default EmployerSignin;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",["156","157"],"import React, { useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst NewInternship = () => {\r\n  const initialState = {\r\n    companyName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stipend: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    duration: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Card\r\n        style={{\r\n          width: \"40vw\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          marginTop: \"4vh\",\r\n          marginBottom: \"4vh\",\r\n          backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n        }}\r\n        className=\"register_card_custom\"\r\n      >\r\n        <Card.Header\r\n          style={{\r\n            backgroundColor: \"#6c6c6c\",\r\n            color: \"#ffc107\",\r\n            fontFamily: '\"Merriweather\", serif',\r\n            fontSize: \"1.25rem\",\r\n          }}\r\n          as=\"h5\"\r\n        >\r\n          New Internship\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={(e) => submitInternship(e)}>\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Company Name\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"companyName\"\r\n                value={formValues.companyName.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.companyName.errorMessage && (\r\n                <span className=\"error\">{formValues.companyName.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Location\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"location\"\r\n                value={formValues.location.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.location.errorMessage && (\r\n                <span className=\"error\">{formValues.location.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Internship Description\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                name=\"description\"\r\n                value={formValues.description.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.description.errorMessage && (\r\n                <span className=\"error\">{formValues.description.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Duration\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter duration\"\r\n                name=\"duration\"\r\n                value={formValues.duration.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.duration.errorMessage && (\r\n                <span className=\"error\">{formValues.duration.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Stipend\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter stipend\"\r\n                name=\"stipend\"\r\n                value={formValues.stipend.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.stipend.errorMessage && (\r\n                <span className=\"error\">{formValues.stipend.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                TechStack\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter techstack\"\r\n                name=\"techstack\"\r\n                value={formValues.techstack.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.techstack.errorMessage && (\r\n                <span className=\"error\">{formValues.techstack.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Last Date \r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"date\"\r\n                placeholder=\"Enter last date\"\r\n                name=\"lastDate\"\r\n                value={formValues.lastDate.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.lastDate.errorMessage && (\r\n                <span className=\"error\">{formValues.lastDate.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            \r\n\r\n            {<Button\r\n              style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n              variant=\"secondary\"\r\n              type=\"submit\"\r\n              disabled={!formIsValid}\r\n            >\r\n              Create\r\n            </Button>}\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewInternship;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",["158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":9,"nodeType":"166","messageId":"167","endLine":23,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":24,"column":11,"nodeType":"166","messageId":"167","endLine":24,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":31,"column":6,"nodeType":"171","endLine":31,"endColumn":8,"suggestions":"172"},{"ruleId":"164","severity":1,"message":"173","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"174","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"175","line":16,"column":18,"nodeType":"166","messageId":"167","endLine":16,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":94,"column":15,"nodeType":"178","endLine":94,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":100,"column":15,"nodeType":"178","endLine":100,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":106,"column":15,"nodeType":"178","endLine":106,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":112,"column":15,"nodeType":"178","endLine":112,"endColumn":27},{"ruleId":"164","severity":1,"message":"175","line":9,"column":18,"nodeType":"166","messageId":"167","endLine":9,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":53,"column":19,"nodeType":"178","endLine":53,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":56,"column":19,"nodeType":"178","endLine":56,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":61,"column":19,"nodeType":"178","endLine":61,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":67,"column":19,"nodeType":"178","endLine":67,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":73,"column":19,"nodeType":"178","endLine":73,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":79,"column":19,"nodeType":"178","endLine":79,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":85,"column":19,"nodeType":"178","endLine":85,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":90,"column":19,"nodeType":"178","endLine":90,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":105,"column":19,"nodeType":"178","endLine":105,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":108,"column":19,"nodeType":"178","endLine":108,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":113,"column":19,"nodeType":"178","endLine":113,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":119,"column":19,"nodeType":"178","endLine":119,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":125,"column":19,"nodeType":"178","endLine":125,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":131,"column":19,"nodeType":"178","endLine":131,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":137,"column":19,"nodeType":"178","endLine":137,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":142,"column":19,"nodeType":"178","endLine":142,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":156,"column":19,"nodeType":"178","endLine":156,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":161,"column":19,"nodeType":"178","endLine":161,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":166,"column":19,"nodeType":"178","endLine":166,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":172,"column":19,"nodeType":"178","endLine":172,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":178,"column":19,"nodeType":"178","endLine":178,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":184,"column":19,"nodeType":"178","endLine":184,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":190,"column":19,"nodeType":"178","endLine":190,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":195,"column":19,"nodeType":"178","endLine":195,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":209,"column":19,"nodeType":"178","endLine":209,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":214,"column":19,"nodeType":"178","endLine":214,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":219,"column":19,"nodeType":"178","endLine":219,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":225,"column":19,"nodeType":"178","endLine":225,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":231,"column":19,"nodeType":"178","endLine":231,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":237,"column":19,"nodeType":"178","endLine":237,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":243,"column":19,"nodeType":"178","endLine":243,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":248,"column":19,"nodeType":"178","endLine":248,"endColumn":52},{"ruleId":"164","severity":1,"message":"179","line":111,"column":10,"nodeType":"166","messageId":"167","endLine":111,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":468,"column":19,"nodeType":"178","endLine":468,"endColumn":53},{"ruleId":"164","severity":1,"message":"181","line":2,"column":30,"nodeType":"166","messageId":"167","endLine":2,"endColumn":35},{"ruleId":"164","severity":1,"message":"168","line":13,"column":11,"nodeType":"166","messageId":"167","endLine":13,"endColumn":16},{"ruleId":"164","severity":1,"message":"179","line":48,"column":10,"nodeType":"166","messageId":"167","endLine":48,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":205,"column":19,"nodeType":"178","endLine":205,"endColumn":53},{"ruleId":"164","severity":1,"message":"182","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"179","line":83,"column":12,"nodeType":"166","messageId":"167","endLine":83,"endColumn":23},{"ruleId":"176","severity":1,"message":"180","line":371,"column":23,"nodeType":"178","endLine":371,"endColumn":57},{"ruleId":"164","severity":1,"message":"181","line":2,"column":24,"nodeType":"166","messageId":"167","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":109,"column":46,"nodeType":"185","messageId":"186","endLine":109,"endColumn":47,"suggestions":"187"},{"ruleId":"183","severity":1,"message":"184","line":109,"column":71,"nodeType":"185","messageId":"186","endLine":109,"endColumn":72,"suggestions":"188"},{"ruleId":"183","severity":1,"message":"184","line":109,"column":80,"nodeType":"185","messageId":"186","endLine":109,"endColumn":81,"suggestions":"189"},{"ruleId":"183","severity":1,"message":"184","line":109,"column":84,"nodeType":"185","messageId":"186","endLine":109,"endColumn":85,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":29,"column":19,"nodeType":"178","endLine":29,"endColumn":74},{"ruleId":"191","severity":1,"message":"192","line":60,"column":17,"nodeType":"178","endLine":60,"endColumn":51},{"ruleId":"191","severity":1,"message":"192","line":72,"column":17,"nodeType":"178","endLine":72,"endColumn":55},{"ruleId":"191","severity":1,"message":"192","line":83,"column":17,"nodeType":"178","endLine":83,"endColumn":90},{"ruleId":"164","severity":1,"message":"182","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"181","line":2,"column":30,"nodeType":"166","messageId":"167","endLine":2,"endColumn":35},{"ruleId":"164","severity":1,"message":"168","line":14,"column":11,"nodeType":"166","messageId":"167","endLine":14,"endColumn":16},{"ruleId":"164","severity":1,"message":"179","line":48,"column":10,"nodeType":"166","messageId":"167","endLine":48,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":214,"column":19,"nodeType":"178","endLine":214,"endColumn":53},{"ruleId":"164","severity":1,"message":"193","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"194","line":3,"column":16,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},{"ruleId":"164","severity":1,"message":"193","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"194","line":3,"column":16,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'formIsValid' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Alert' is defined but never used.","'Component' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["198","199"],["200","201"],["202","203"],["204","205"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"messageId":"208","fix":"216","desc":"210"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"208","fix":"218","desc":"210"},{"messageId":"211","fix":"219","desc":"213"},"Update the dependencies array to be: [dispatch]",{"range":"220","text":"221"},"removeEscape",{"range":"222","text":"223"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"224","text":"225"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"226","text":"223"},{"range":"227","text":"225"},{"range":"228","text":"223"},{"range":"229","text":"225"},{"range":"230","text":"223"},{"range":"231","text":"225"},[1384,1386],"[dispatch]",[2877,2878],"",[2877,2877],"\\",[2902,2903],[2902,2902],[2911,2912],[2911,2911],[2915,2916],[2915,2915]]
